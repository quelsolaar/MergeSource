/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSSTRING_HEADER
#define SHIMMER_C_OCOA_NSSTRING_HEADER

typedef void*	nsstring_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ fp_obfuscatedPath @ :
nsobject_t 			nsstring_fp_obfuscatedPath( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_obfuscatedFilename @ :
nsobject_t 			nsstring_fp_obfuscatedFilename( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_libnotifyPerUserNotificationName @ :
nsobject_t 			nsstring_fp_libnotifyPerUserNotificationName( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_formatStringWithValues:error: @ : @ ^@
nsobject_t 			nsstring_fp_formatStringWithValues( nsstring_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fp_localizedFormatWithKeys:fromDictionary:error: @ : @ @ ^@
nsobject_t 			nsstring_fp_localizedFormatWithKeys( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ fp_fpIdentifier @ :
nsobject_t 			nsstring_fp_fpIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_toDomainIdentifier @ :
nsobject_t 			nsstring_fp_toDomainIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_bouncedNameWithIndex: @ : q
nsobject_t 			nsstring_fp_bouncedNameWithIndex( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: @ fp_stringByDeletingPathBounceNo:andPathExtension: @ : ^@ ^@
nsobject_t 			nsstring_fp_stringByDeletingPathBounceNo( nsstring_t object, nsobject_t* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fp_representableHFSFileNameWithNumber:addedExtension:makeDotFile: @ : @ @ B
nsobject_t 			nsstring_fp_representableHFSFileNameWithNumber( nsstring_t object, nsobject_t arg0, nsobject_t arg1, bool arg2 );

// Signature from Objective-C Runtime: @ fp_toProviderID @ :
nsobject_t 			nsstring_fp_toProviderID( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_displayNameFromFilenameWithHiddenPathExtension:isFolder: @ : B B
nsobject_t 			nsstring_fp_displayNameFromFilenameWithHiddenPathExtension( nsstring_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: B fp_isiCloudDriveOrCloudDocsIdentifier @ :
bool 				nsstring_fp_isiCloudDriveOrCloudDocsIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: B fp_usesDSCopyEngine @ :
bool 				nsstring_fp_usesDSCopyEngine( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_prettyPath @ :
nsobject_t 			nsstring_fp_prettyPath( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_realpath @ :
nsobject_t 			nsstring_fp_realpath( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_filenameFromDisplayNameWithExtension: @ : @
nsobject_t 			nsstring_fp_filenameFromDisplayNameWithExtension( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fp_alwaysObfuscatedFilename @ :
nsobject_t 			nsstring_fp_alwaysObfuscatedFilename( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_prettyPathWithObfuscation: @ : B
nsobject_t 			nsstring_fp_prettyPathWithObfuscation( nsstring_t object, bool arg0 );

// Signature from Objective-C Runtime: @ fp_alwaysObfuscatedPath @ :
nsobject_t 			nsstring_fp_alwaysObfuscatedPath( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_stringByDeletingPathExtension @ :
nsobject_t 			nsstring_fp_stringByDeletingPathExtension( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_pathExtension @ :
nsobject_t 			nsstring_fp_pathExtension( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_representableHFSFileNameWithSuffix:addedExtension:makeDotFile: @ : @ @ B
nsobject_t 			nsstring_fp_representableHFSFileNameWithSuffix( nsstring_t object, nsobject_t arg0, nsobject_t arg1, bool arg2 );

// Signature from Objective-C Runtime: r* fp_fileSystemRepresentation @ :
char* 				nsstring_fp_fileSystemRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: v fp_enumerateTokensInRange:tokenizer:usingBlock: @ : {_NSRange=QQ} ^{__CFStringTokenizer=} @?
void 				nsstring_fp_enumerateTokensInRange( nsstring_t object, _NSRange arg0, __CFStringTokenizer* arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: B fp_isCJKLanguageIdentifier @ :
bool 				nsstring_fp_isCJKLanguageIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: {CGSize=dd} sizeWithFont:forWidth:lineBreakMode:letterSpacing: @ : @ d q d
CGSize 				nsstring_sizeWithFont( nsstring_t object, nsobject_t arg0, double arg1, long long arg2, double arg3 );

// Signature from Objective-C Runtime: @ queryKeysAndValues @ :
nsobject_t 			nsstring_queryKeysAndValues( nsstring_t object );

// Signature from Objective-C Runtime: {CGSize=dd} drawAtPoint:withFont: @ : {CGPoint=dd} @
CGSize 				nsstring_drawAtPoint( nsstring_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: {CGSize=dd} drawInRect:withFont: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
CGSize 				nsstring_drawInRect( nsstring_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ imageMetadataFromFileName @ :
nsobject_t 			nsstring_imageMetadataFromFileName( nsstring_t object );

// Signature from Objective-C Runtime: @ scaleableResourceMetadataFromFileName @ :
nsobject_t 			nsstring_scaleableResourceMetadataFromFileName( nsstring_t object );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsstring_encodeWithCAMLWriter( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsstring_CAMLType( nsstring_t object );

// Signature from Objective-C Runtime: @ ls_visuallyOrderCharactersReturningError: @ : ^@
nsobject_t 			nsstring_ls_visuallyOrderCharactersReturningError( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B ls_matchesStringForPluginQuery: @ : @
bool 				nsstring_ls_matchesStringForPluginQuery( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ls_cleanForPluginQuery @ :
nsobject_t 			nsstring_ls_cleanForPluginQuery( nsstring_t object );

// Signature from Objective-C Runtime: B ls_matchesForPluginQuery: @ : @
bool 				nsstring_ls_matchesForPluginQuery( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v sqliteBind:index: @ : ^{sqlite3_stmt=} i
void 				nsstring_sqliteBind( nsstring_t object, sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: @ stringByAppendingPathExtensionForType: @ : @
nsobject_t 			nsstring_stringByAppendingPathExtensionForType( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByAppendingPathComponent:conformingToType: @ : @ @
nsobject_t 			nsstring_stringByAppendingPathComponent( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ encodedDataAndReturnError: @ : ^@
nsobject_t 			nsstring_encodedDataAndReturnError( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: r* encodedBytesAndReturnLength:error: @ : ^Q ^@
char* 				nsstring_encodedBytesAndReturnLength( nsstring_t object, unsigned long long* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} boundingRectWithSize:options:attributes:context: @ : {CGSize=dd} q @ @
CGRect 				nsstring_boundingRectWithSize( nsstring_t object, CGSize arg0, long long arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: {CGSize=dd} sizeWithAttributes: @ : @
CGSize 				nsstring_sizeWithAttributes( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v drawWithRect:options:attributes:context: @ : {CGRect={CGPoint=dd}{CGSize=dd}} q @ @
void 				nsstring_drawWithRect( nsstring_t object, CGRect arg0, long long arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: B hasColorGlyphsInRange:attributes: @ : {_NSRange=QQ} @
bool 				nsstring_hasColorGlyphsInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ stringByStrippingLeadingAndTrailingWhitespaceAndQuotes @ :
nsobject_t 			nsstring_stringByStrippingLeadingAndTrailingWhitespaceAndQuotes( nsstring_t object );

// Signature from Objective-C Runtime: @ MCAppendDeviceName @ :
nsobject_t 			nsstring_MCAppendDeviceName( nsstring_t object );

// Signature from Objective-C Runtime: @ MCHashedFilenameWithPrefix:extension: @ : @ @
nsobject_t 			nsstring_MCHashedFilenameWithPrefix( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ MCHashedIdentifier @ :
nsobject_t 			nsstring_MCHashedIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: @ MCSHA256DigestWithSalt: @ : @
nsobject_t 			nsstring_MCSHA256DigestWithSalt( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ MCOldStyleSafeFilenameHashWithExtension: @ : @
nsobject_t 			nsstring_MCOldStyleSafeFilenameHashWithExtension( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: I MCHash @ :
unsigned int 		nsstring_MCHash( nsstring_t object );

// Signature from Objective-C Runtime: @ MCHashedFilenameWithExtension: @ : @
nsobject_t 			nsstring_MCHashedFilenameWithExtension( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ MCOldStyleSafeFilenameHash @ :
nsobject_t 			nsstring_MCOldStyleSafeFilenameHash( nsstring_t object );

// Signature from Objective-C Runtime: @ MCSHA256DigestWithPasscodeSalt @ :
nsobject_t 			nsstring_MCSHA256DigestWithPasscodeSalt( nsstring_t object );

// Signature from Objective-C Runtime: @ MCAppendGreenteaSuffix @ :
nsobject_t 			nsstring_MCAppendGreenteaSuffix( nsstring_t object );

// Signature from Objective-C Runtime: @ MCRemoveAppExternalVersionIDParameter @ :
nsobject_t 			nsstring_MCRemoveAppExternalVersionIDParameter( nsstring_t object );

// Signature from Objective-C Runtime: B mt_isIdentityValueForMaterialSettingsProperty: @ : @
bool 				nsstring_mt_isIdentityValueForMaterialSettingsProperty( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ un_localizedStringKey @ :
nsobject_t 			nsstring_un_localizedStringKey( nsstring_t object );

// Signature from Objective-C Runtime: @ un_logDigest @ :
nsobject_t 			nsstring_un_logDigest( nsstring_t object );

// Signature from Objective-C Runtime: Q un_unsignedLongLongValue @ :
unsigned long long 	nsstring_un_unsignedLongLongValue( nsstring_t object );

// Signature from Objective-C Runtime: @ un_stringWithMaxLength: @ : Q
nsobject_t 			nsstring_un_stringWithMaxLength( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: B un_isFirstPartyIdentifier @ :
bool 				nsstring_un_isFirstPartyIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: @ un_localizedStringArguments @ :
nsobject_t 			nsstring_un_localizedStringArguments( nsstring_t object );

// Signature from Objective-C Runtime: @ un_localizedStringValue @ :
nsobject_t 			nsstring_un_localizedStringValue( nsstring_t object );

// Signature from Objective-C Runtime: B isDelete @ :
bool 				nsstring_isDelete( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByReplacingCharacter:withCharacter: @ : I I
nsobject_t 			nsstring_stringByReplacingCharacter( nsstring_t object, unsigned int arg0, unsigned int arg1 );

// Signature from Objective-C Runtime: @ stringByReplacingCharactersInSet:withCharacter: @ : ^{__CFCharacterSet=} I
nsobject_t 			nsstring_stringByReplacingCharactersInSet( nsstring_t object, __CFCharacterSet* arg0, unsigned int arg1 );

// Signature from Objective-C Runtime: B isNaturallyRTL @ :
bool 				nsstring_isNaturallyRTL( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByTrimmingCharactersInCFCharacterSet: @ : ^{__CFCharacterSet=}
nsobject_t 			nsstring_stringByTrimmingCharactersInCFCharacterSet( nsstring_t object, __CFCharacterSet* arg0 );

// Signature from Objective-C Runtime: @ stringByTrimmingLastCharacter @ :
nsobject_t 			nsstring_stringByTrimmingLastCharacter( nsstring_t object );

// Signature from Objective-C Runtime: B endsSentence @ :
bool 				nsstring_endsSentence( nsstring_t object );

// Signature from Objective-C Runtime: B isLeftAssociative @ :
bool 				nsstring_isLeftAssociative( nsstring_t object );

// Signature from Objective-C Runtime: B isPlainSpace @ :
bool 				nsstring_isPlainSpace( nsstring_t object );

// Signature from Objective-C Runtime: B isSpace @ :
bool 				nsstring_isSpace( nsstring_t object );

// Signature from Objective-C Runtime: B isSpaceOrReturn @ :
bool 				nsstring_isSpaceOrReturn( nsstring_t object );

// Signature from Objective-C Runtime: B isNewlineOrReturn @ :
bool 				nsstring_isNewlineOrReturn( nsstring_t object );

// Signature from Objective-C Runtime: B isTripledPunctuation @ :
bool 				nsstring_isTripledPunctuation( nsstring_t object );

// Signature from Objective-C Runtime: B looksLikeEmailAddress @ :
bool 				nsstring_looksLikeEmailAddress( nsstring_t object );

// Signature from Objective-C Runtime: B looksLikeNumberInput @ :
bool 				nsstring_looksLikeNumberInput( nsstring_t object );

// Signature from Objective-C Runtime: B looksLikeURL @ :
bool 				nsstring_looksLikeURL( nsstring_t object );

// Signature from Objective-C Runtime: B containsSubstring: @ : @
bool 				nsstring_containsSubstring( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q editDistanceFrom: @ : @
unsigned long long 	nsstring_editDistanceFrom( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B containsDotDotPathComponents @ :
bool 				nsstring_containsDotDotPathComponents( nsstring_t object );

// Signature from Objective-C Runtime: @ cutStringByResolvingAndStandardizingPath @ :
nsobject_t 			nsstring_cutStringByResolvingAndStandardizingPath( nsstring_t object );

// Signature from Objective-C Runtime: @ DMCAppendDeviceName @ :
nsobject_t 			nsstring_DMCAppendDeviceName( nsstring_t object );

// Signature from Objective-C Runtime: @ dmc_substringWithPattern: @ : @
nsobject_t 			nsstring_dmc_substringWithPattern( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ DMCAppendGreenteaSuffix @ :
nsobject_t 			nsstring_DMCAppendGreenteaSuffix( nsstring_t object );

// Signature from Objective-C Runtime: @ gs_stringByUpdatingPathExtensionWithPathOrURL: @ : @
nsobject_t 			nsstring_gs_stringByUpdatingPathExtensionWithPathOrURL( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B validateGSNameAllowingDot:error: @ : B ^@
bool 				nsstring_validateGSNameAllowingDot( nsstring_t object, bool arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ gs_issueExtension:error: @ : r* ^@
nsobject_t 			nsstring_gs_issueExtension( nsstring_t object, char* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: q compareVersionString: @ : @
long long 			nsstring_compareVersionString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SZ_stringByDeletingTrailingSlashes @ :
nsobject_t 			nsstring_SZ_stringByDeletingTrailingSlashes( nsstring_t object );

// Signature from Objective-C Runtime: d doubleValue @ :
double 				nsstring_doubleValue( nsstring_t object );

// Signature from Objective-C Runtime: q longLongValue @ :
long long 			nsstring_longLongValue( nsstring_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				nsstring_isNSString__( nsstring_t object );

// Signature from Objective-C Runtime: i intValue @ :
int 				nsstring_intValue( nsstring_t object );

// Signature from Objective-C Runtime: f floatValue @ :
float 				nsstring_floatValue( nsstring_t object );

// Signature from Objective-C Runtime: Q lengthOfBytesUsingEncoding: @ : Q
unsigned long long 	nsstring_lengthOfBytesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: Q length @ :
unsigned long long 	nsstring_length( nsstring_t object );

// Signature from Objective-C Runtime: B getBytes:maxLength:usedLength:encoding:options:range:remainingRange: @ : ^v Q ^Q Q Q {_NSRange=QQ} ^{_NSRange=QQ}
bool 				nsstring_getBytes( nsstring_t object, void* arg0, unsigned long long arg1, unsigned long long* arg2, unsigned long long arg3, unsigned long long arg4, _NSRange arg5, _NSRange* arg6 );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				nsstring_isEqual( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsstring_hash( nsstring_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsstring_description( nsstring_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsstring_init( nsstring_t object );

// Signature from Objective-C Runtime: r* UTF8String @ :
char* 				nsstring_UTF8String( nsstring_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsstring_copyWithZone( nsstring_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsstring_mutableCopyWithZone( nsstring_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: r* cString @ :
char* 				nsstring_cString( nsstring_t object );

// Signature from Objective-C Runtime: q compare:options:range:locale: @ : @ Q {_NSRange=QQ} @
long long 			nsstring_compare( nsstring_t object, nsobject_t arg0, unsigned long long arg1, _NSRange arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: r* cStringUsingEncoding: @ : Q
char* 				nsstring_cStringUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ lowercaseStringWithLocale: @ : @
nsobject_t 			nsstring_lowercaseStringWithLocale( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ uppercaseStringWithLocale: @ : @
nsobject_t 			nsstring_uppercaseStringWithLocale( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: S characterAtIndex: @ : Q
unsigned short 		nsstring_characterAtIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v getCharacters:range: @ : ^S {_NSRange=QQ}
void 				nsstring_getCharacters( nsstring_t object, unsigned short* arg0, _NSRange arg1 );

// Signature from Objective-C Runtime: @ substringWithRange: @ : {_NSRange=QQ}
nsobject_t 			nsstring_substringWithRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: B isEqualToString: @ : @
bool 				nsstring_isEqualToString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q fastestEncoding @ :
unsigned long long 	nsstring_fastestEncoding( nsstring_t object );

// Signature from Objective-C Runtime: Q smallestEncoding @ :
unsigned long long 	nsstring_smallestEncoding( nsstring_t object );

// Signature from Objective-C Runtime: @ initWithContentsOfFile: @ : @
nsobject_t 			nsstring_initWithContentsOfFile( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithContentsOfURL: @ : @
nsobject_t 			nsstring_initWithContentsOfURL( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsstring_classForCoder( nsstring_t object );

// Signature from Objective-C Runtime: B boolValue @ :
bool 				nsstring_boolValue( nsstring_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsstring_encodeWithCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsstring_initWithCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q cStringLength @ :
unsigned long long 	nsstring_cStringLength( nsstring_t object );

// Signature from Objective-C Runtime: B getCString:maxLength:encoding: @ : * Q Q
bool 				nsstring_getCString( nsstring_t object, char* arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: B hasPrefix: @ : @
bool 				nsstring_hasPrefix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B hasSuffix: @ : @
bool 				nsstring_hasSuffix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v getLineStart:end:contentsEnd:forRange: @ : ^Q ^Q ^Q {_NSRange=QQ}
void 				nsstring_getLineStart( nsstring_t object, unsigned long long* arg0, unsigned long long* arg1, unsigned long long* arg2, _NSRange arg3 );

// Signature from Objective-C Runtime: q integerValue @ :
long long 			nsstring_integerValue( nsstring_t object );

// Signature from Objective-C Runtime: v getParagraphStart:end:contentsEnd:forRange: @ : ^Q ^Q ^Q {_NSRange=QQ}
void 				nsstring_getParagraphStart( nsstring_t object, unsigned long long* arg0, unsigned long long* arg1, unsigned long long* arg2, _NSRange arg3 );

// Signature from Objective-C Runtime: @ initWithString: @ : @
nsobject_t 			nsstring_initWithString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsstring_replacementObjectForPortCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: r* fileSystemRepresentation @ :
char* 				nsstring_fileSystemRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: @ formatConfiguration @ :
nsobject_t 			nsstring_formatConfiguration( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAppendingString: @ : @
nsobject_t 			nsstring_stringByAppendingString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ lowercaseString @ :
nsobject_t 			nsstring_lowercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ lastPathComponent @ :
nsobject_t 			nsstring_lastPathComponent( nsstring_t object );

// Signature from Objective-C Runtime: B writeToFile:atomically: @ : @ B
bool 				nsstring_writeToFile( nsstring_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ substringFromIndex: @ : Q
nsobject_t 			nsstring_substringFromIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ initWithCString:encoding: @ : r* Q
nsobject_t 			nsstring_initWithCString( nsstring_t object, char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: B writeToURL:atomically: @ : @ B
bool 				nsstring_writeToURL( nsstring_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ substringToIndex: @ : Q
nsobject_t 			nsstring_substringToIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: q caseInsensitiveCompare: @ : @
long long 			nsstring_caseInsensitiveCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ variantFittingPresentationWidth: @ : q
nsobject_t 			nsstring_variantFittingPresentationWidth( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: @ initWithCharactersNoCopy:length:freeWhenDone: @ : ^S Q B
nsobject_t 			nsstring_initWithCharactersNoCopy( nsstring_t object, unsigned short* arg0, unsigned long long arg1, bool arg2 );

// Signature from Objective-C Runtime: @ initWithBytesNoCopy:length:encoding:freeWhenDone: @ : ^v Q Q B
nsobject_t 			nsstring_initWithBytesNoCopy( nsstring_t object, void* arg0, unsigned long long arg1, unsigned long long arg2, bool arg3 );

// Signature from Objective-C Runtime: @ initWithUTF8String: @ : r*
nsobject_t 			nsstring_initWithUTF8String( nsstring_t object, char* arg0 );

// Signature from Objective-C Runtime: B getFileSystemRepresentation:maxLength: @ : * Q
bool 				nsstring_getFileSystemRepresentation( nsstring_t object, char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringByDeletingLastPathComponent @ :
nsobject_t 			nsstring_stringByDeletingLastPathComponent( nsstring_t object );

// Signature from Objective-C Runtime: @ pathExtension @ :
nsobject_t 			nsstring_pathExtension( nsstring_t object );

// Signature from Objective-C Runtime: @ pathComponents @ :
nsobject_t 			nsstring_pathComponents( nsstring_t object );

// Signature from Objective-C Runtime: @ uppercaseString @ :
nsobject_t 			nsstring_uppercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ capitalizedString @ :
nsobject_t 			nsstring_capitalizedString( nsstring_t object );

// Signature from Objective-C Runtime: @ decomposedStringWithCanonicalMapping @ :
nsobject_t 			nsstring_decomposedStringWithCanonicalMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ precomposedStringWithCanonicalMapping @ :
nsobject_t 			nsstring_precomposedStringWithCanonicalMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ decomposedStringWithCompatibilityMapping @ :
nsobject_t 			nsstring_decomposedStringWithCompatibilityMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ precomposedStringWithCompatibilityMapping @ :
nsobject_t 			nsstring_precomposedStringWithCompatibilityMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByTrimmingCharactersInSet: @ : @
nsobject_t 			nsstring_stringByTrimmingCharactersInSet( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfString:options:range: @ : @ Q {_NSRange=QQ}
_NSRange 			nsstring_rangeOfString( nsstring_t object, nsobject_t arg0, unsigned long long arg1, _NSRange arg2 );

// Signature from Objective-C Runtime: @ propertyList @ :
nsobject_t 			nsstring_propertyList( nsstring_t object );

// Signature from Objective-C Runtime: B canBeConvertedToEncoding: @ : Q
bool 				nsstring_canBeConvertedToEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: r* lossyCString @ :
char* 				nsstring_lossyCString( nsstring_t object );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfCharacterFromSet: @ : @
_NSRange 			nsstring_rangeOfCharacterFromSet( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByReplacingOccurrencesOfString:withString: @ : @ @
nsobject_t 			nsstring_stringByReplacingOccurrencesOfString( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ dataUsingEncoding:allowLossyConversion: @ : Q B
nsobject_t 			nsstring_dataUsingEncoding( nsstring_t object, unsigned long long arg0, bool arg1 );

// Signature from Objective-C Runtime: @ quotedStringRepresentation @ :
nsobject_t 			nsstring_quotedStringRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAppendingFormat: @ : @
nsobject_t 			nsstring_stringByAppendingFormat( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B containsString: @ : @
bool 				nsstring_containsString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ componentsSeparatedByString: @ : @
nsobject_t 			nsstring_componentsSeparatedByString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isAbsolutePath @ :
bool 				nsstring_isAbsolutePath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByStandardizingPath @ :
nsobject_t 			nsstring_stringByStandardizingPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByResolvingSymlinksInPath @ :
nsobject_t 			nsstring_stringByResolvingSymlinksInPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAppendingPathExtension: @ : @
nsobject_t 			nsstring_stringByAppendingPathExtension( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ capitalizedStringWithLocale: @ : @
nsobject_t 			nsstring_capitalizedStringWithLocale( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v enumerateSubstringsInRange:options:usingBlock: @ : {_NSRange=QQ} Q @?
void 				nsstring_enumerateSubstringsInRange( nsstring_t object, _NSRange arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ initWithCharacters:length: @ : r^S Q
nsobject_t 			nsstring_initWithCharacters( nsstring_t object, unsigned short* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ initWithCStringNoCopy:length:freeWhenDone: @ : * Q B
nsobject_t 			nsstring_initWithCStringNoCopy( nsstring_t object, char* arg0, unsigned long long arg1, bool arg2 );

// Signature from Objective-C Runtime: @ stringByDeletingPathExtension @ :
nsobject_t 			nsstring_stringByDeletingPathExtension( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAbbreviatingWithTildeInPath @ :
nsobject_t 			nsstring_stringByAbbreviatingWithTildeInPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByExpandingTildeInPath @ :
nsobject_t 			nsstring_stringByExpandingTildeInPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringsByAppendingPaths: @ : @
nsobject_t 			nsstring_stringsByAppendingPaths( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q completePathIntoString:caseSensitive:matchesIntoArray:filterTypes: @ : ^@ B ^@ @
unsigned long long 	nsstring_completePathIntoString( nsstring_t object, nsobject_t* arg0, bool arg1, nsobject_t* arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ stringByConvertingPathToURL @ :
nsobject_t 			nsstring_stringByConvertingPathToURL( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByConvertingURLToPath @ :
nsobject_t 			nsstring_stringByConvertingURLToPath( nsstring_t object );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfComposedCharacterSequenceAtIndex: @ : Q
_NSRange 			nsstring_rangeOfComposedCharacterSequenceAtIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ initWithData:encoding: @ : @ Q
nsobject_t 			nsstring_initWithData( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ writableTypeIdentifiersForItemProvider @ :
nsobject_t 			nsstring_writableTypeIdentifiersForItemProvider( nsstring_t object );

// Signature from Objective-C Runtime: @ loadDataWithTypeIdentifier:forItemProviderCompletionHandler: @ : @ @?
nsobject_t 			nsstring_loadDataWithTypeIdentifier( nsstring_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ stringByReplacingCharactersInRange:withString: @ : {_NSRange=QQ} @
nsobject_t 			nsstring_stringByReplacingCharactersInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: q localizedCompare: @ : @
long long 			nsstring_localizedCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q localizedCaseInsensitiveCompare: @ : @
long long 			nsstring_localizedCaseInsensitiveCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q localizedStandardCompare: @ : @
long long 			nsstring_localizedStandardCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfComposedCharacterSequencesForRange: @ : {_NSRange=QQ}
_NSRange 			nsstring_rangeOfComposedCharacterSequencesForRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ componentsSeparatedByCharactersInSet: @ : @
nsobject_t 			nsstring_componentsSeparatedByCharactersInSet( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ commonPrefixWithString:options: @ : @ Q
nsobject_t 			nsstring_commonPrefixWithString( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: B localizedHasPrefix: @ : @
bool 				nsstring_localizedHasPrefix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B localizedHasSuffix: @ : @
bool 				nsstring_localizedHasSuffix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B localizedCaseInsensitiveContainsString: @ : @
bool 				nsstring_localizedCaseInsensitiveContainsString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B localizedStandardContainsString: @ : @
bool 				nsstring_localizedStandardContainsString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} localizedStandardRangeOfString: @ : @
_NSRange 			nsstring_localizedStandardRangeOfString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByPaddingToLength:withString:startingAtIndex: @ : Q @ Q
nsobject_t 			nsstring_stringByPaddingToLength( nsstring_t object, unsigned long long arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ localizedUppercaseString @ :
nsobject_t 			nsstring_localizedUppercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ localizedLowercaseString @ :
nsobject_t 			nsstring_localizedLowercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ localizedCapitalizedString @ :
nsobject_t 			nsstring_localizedCapitalizedString( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByFoldingWithOptions:locale: @ : Q @
nsobject_t 			nsstring_stringByFoldingWithOptions( nsstring_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ stringByApplyingTransform:reverse: @ : @ B
nsobject_t 			nsstring_stringByApplyingTransform( nsstring_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: {_NSRange=QQ} lineRangeForRange: @ : {_NSRange=QQ}
_NSRange 			nsstring_lineRangeForRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} paragraphRangeForRange: @ : {_NSRange=QQ}
_NSRange 			nsstring_paragraphRangeForRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: v enumerateLinesUsingBlock: @ : @?
void 				nsstring_enumerateLinesUsingBlock( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ displayableString @ :
nsobject_t 			nsstring_displayableString( nsstring_t object );

// Signature from Objective-C Runtime: B getExternalRepresentation:extendedAttributes:forWritingToURLOrPath:usingEncoding:error: @ : ^@ ^@ @ Q ^@
bool 				nsstring_getExternalRepresentation( nsstring_t object, nsobject_t* arg0, nsobject_t* arg1, nsobject_t arg2, unsigned long long arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: @ propertyListFromStringsFileFormat @ :
nsobject_t 			nsstring_propertyListFromStringsFileFormat( nsstring_t object );

// Signature from Objective-C Runtime: Q maximumLengthOfBytesUsingEncoding: @ : Q
unsigned long long 	nsstring_maximumLengthOfBytesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ stringByAddingPercentEscapes @ :
nsobject_t 			nsstring_stringByAddingPercentEscapes( nsstring_t object );

// Signature from Objective-C Runtime: @ standardizedURLPath @ :
nsobject_t 			nsstring_standardizedURLPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByRemovingPercentEscapes @ :
nsobject_t 			nsstring_stringByRemovingPercentEscapes( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAddingPercentEncodingWithAllowedCharacters: @ : @
nsobject_t 			nsstring_stringByAddingPercentEncodingWithAllowedCharacters( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByRemovingPercentEncoding @ :
nsobject_t 			nsstring_stringByRemovingPercentEncoding( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAddingPercentEscapesUsingEncoding: @ : Q
nsobject_t 			nsstring_stringByAddingPercentEscapesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ stringByReplacingPercentEscapesUsingEncoding: @ : Q
nsobject_t 			nsstring_stringByReplacingPercentEscapesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ linguisticTagsInRange:scheme:options:orthography:tokenRanges: @ : {_NSRange=QQ} @ Q @ ^@
nsobject_t 			nsstring_linguisticTagsInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock: @ : {_NSRange=QQ} @ Q @ @?
void 				nsstring_enumerateLinguisticTagsInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: {_NSRange=QQ} significantText @ :
_NSRange 			nsstring_significantText( nsstring_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsstring_replacementObjectForCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsstring_awakeAfterUsingCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				nsstring_implementsSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsstring_setObservationInfo( nsstring_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsstring_setValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsstring_willChangeValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsstring_didChangeValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsstring_replacementObjectForArchiver( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsstring_classForArchiver( nsstring_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsstring_valueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsstring_classForKeyedArchiver( nsstring_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsstring_replacementObjectForKeyedArchiver( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsstring_methodDescriptionForSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsstring_valueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsstring_mutableArrayValueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsstring_mutableOrderedSetValueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsstring_mutableSetValueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			nsstring_addObserver( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsstring_removeObservation( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsstring_receiveObservedValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsstring_receiveObservedError( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsstring_finishObserving( nsstring_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsstring_setObservation( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsstring_observeValueForKeyPath( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsstring_removeObserver( nsstring_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsstring_addChainedObservers( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsstring_addObserverBlock( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsstring_addObservationTransformer( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsstring_valueForUndefinedKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsstring_setNilValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsstring_mutableArrayValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsstring_mutableOrderedSetValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsstring_mutableSetValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsstring_dictionaryWithValuesForKeys( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsstring_setValuesForKeysWithDictionary( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsstring_willChange( nsstring_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsstring_didChange( nsstring_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsstring_observationInfo( nsstring_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsstring_autoContentAccessingProxy( nsstring_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsstring_classForPortCoder( nsstring_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsstring_performSelector( nsstring_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				nsstring_performSelectorOnMainThread( nsstring_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsstring_performSelectorInBackground( nsstring_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				nsstring_isNSDate__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				nsstring_isNSCFConstantString__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				nsstring_isNSNumber__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				nsstring_isNSArray__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				nsstring_isNSDictionary__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				nsstring_isNSData__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				nsstring_isNSObject__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				nsstring_isNSOrderedSet__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				nsstring_isNSSet__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				nsstring_isNSTimeZone__( nsstring_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				nsstring_isNSValue__( nsstring_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsstring_doesNotRecognizeSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsstring_methodSignatureForSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsstring_className( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsstring_accessibilityLabel( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsstring_setAccessibilityLabel( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsstring_setAccessibilityIdentifier( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsstring_accessibilityFrame( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			nsstring_storedAccessibilityViewIsModal( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			nsstring_storedAccessibilityElementsHidden( nsstring_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			nsstring_storedShouldGroupAccessibilityChildren( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			nsstring_storedAccessibilityNavigationStyle( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			nsstring_storedAccessibilityRespondsToUserInteraction( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			nsstring_accessibilityAttributedLabel( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsstring_accessibilityValue( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			nsstring_accessibilityAttributedValue( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			nsstring_accessibilityHint( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			nsstring_accessibilityAttributedHint( nsstring_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsstring_accessibilityActivationPoint( nsstring_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	nsstring_accessibilityTraits( nsstring_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				nsstring_isAccessibilityElement( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			nsstring_accessibilityContainer( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			nsstring_accessibilityLanguage( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			nsstring_accessibilityPath( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				nsstring_accessibilityViewIsModal( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				nsstring_accessibilityElementsHidden( nsstring_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				nsstring_shouldGroupAccessibilityChildren( nsstring_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			nsstring_accessibilityNavigationStyle( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				nsstring_accessibilityRespondsToUserInteraction( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsstring_accessibilityUserInputLabels( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsstring_accessibilityAttributedUserInputLabels( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			nsstring_storedAccessibilityIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			nsstring_storedAccessibilityTraits( nsstring_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			nsstring_storedIsAccessibilityElement( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			nsstring_storedAccessibilityFrame( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			nsstring_storedAccessibilityActivationPoint( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			nsstring_accessibilityHeaderElements( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				nsstring_setAccessibilityElementsHidden( nsstring_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				nsstring_setAccessibilityViewIsModal( nsstring_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				nsstring_setAccessibilityAttributedLabel( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsstring_setAccessibilityValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				nsstring_setAccessibilityAttributedValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				nsstring_setAccessibilityHint( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				nsstring_setAccessibilityAttributedHint( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsstring_setAccessibilityFrame( nsstring_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				nsstring_setAccessibilityPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsstring_setAccessibilityActivationPoint( nsstring_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				nsstring_setAccessibilityTraits( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				nsstring_setIsAccessibilityElement( nsstring_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				nsstring_setAccessibilityContainer( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				nsstring_setAccessibilityLanguage( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				nsstring_setShouldGroupAccessibilityChildren( nsstring_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				nsstring_setAccessibilityNavigationStyle( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				nsstring_setAccessibilityRespondsToUserInteraction( nsstring_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsstring_setAccessibilityUserInputLabels( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsstring_setAccessibilityAttributedUserInputLabels( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			nsstring_accessibilityTextualContext( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				nsstring_setAccessibilityTextualContext( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				nsstring_setAccessibilityHeaderElements( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				nsstring_accessibilityElementDidBecomeFocused( nsstring_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				nsstring_accessibilityElementDidLoseFocus( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				nsstring_accessibilityElementIsFocused( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			nsstring_accessibilityAssistiveTechnologyFocusedIdentifiers( nsstring_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				nsstring_accessibilityIncrement( nsstring_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				nsstring_accessibilityDecrement( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				nsstring_accessibilityScroll( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				nsstring_accessibilityPerformEscape( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				nsstring_accessibilityPerformMagicTap( nsstring_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				nsstring_accessibilityActivate( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsstring_setAccessibilityCustomActions( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsstring_accessibilityCustomActions( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			nsstring_accessibilityIdentification( nsstring_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				nsstring_accessibilitySetIdentification( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsstring_accessibilityIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	nsstring_defaultAccessibilityTraits( nsstring_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				nsstring_isAccessibilityElementByDefault( nsstring_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				nsstring_isElementAccessibilityExposedToInterfaceBuilder( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			nsstring_accessibilityLocalizedStringKey( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				nsstring_setAccessibilityDragSourceDescriptors( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			nsstring_accessibilityDragSourceDescriptors( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				nsstring_setAccessibilityDropPointDescriptors( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			nsstring_accessibilityDropPointDescriptors( nsstring_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			nsstring_storedAccessibilityContainerType( nsstring_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			nsstring_accessibilityElementCount( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			nsstring_accessibilityElementAtIndex( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			nsstring_indexOfAccessibilityElement( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			nsstring_accessibilityElements( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				nsstring_setAccessibilityElements( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsstring_accessibilityContainerType( nsstring_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsstring_setAccessibilityContainerType( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsstring_setAccessibilityCustomRotors( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsstring_accessibilityCustomRotors( nsstring_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			nsstring_uiPresentationManager( nsstring_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsstring_awakeFromNib( nsstring_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				nsstring_conformsToProtocolCached( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsstring_prepareForInterfaceBuilder( nsstring_t object );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsstring_CA_distanceToValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			nsstring_CA_copyRenderValueWithColorspace( nsstring_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			nsstring_CA_copyRenderValue( nsstring_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsstring_CA_interpolateValue( nsstring_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsstring_CA_addValue( nsstring_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				nsstring_CAMLTypeSupportedForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsstring_CAMLTypeForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				nsstring_CA_validateValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			nsstring_CA_interpolateValues( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsstring_CA_prepareRenderValue( nsstring_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsstring_CA_archivingValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsstring_CA_roundToIntegerFromValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			nsstring_initFromPQLResultSet( nsstring_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				nsstring_supportsRBSXPCSecureCoding( nsstring_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				nsstring_RBSIsXPCObject( nsstring_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsstring_NSRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			nsstring_pep_onMainThread( nsstring_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			nsstring_pep_onThread( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			nsstring_pep_onOperationQueue( nsstring_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			nsstring_pep_onMainThreadIfNecessary( nsstring_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			nsstring_pep_afterDelay( nsstring_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			nsstring_pep_getInvocation( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			nsstring_stringValueSafe( nsstring_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				nsstring_utf8ValueSafe( nsstring_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				nsstring_boolValueSafe( nsstring_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			nsstring_int64ValueSafe( nsstring_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				nsstring_doubleValueSafe( nsstring_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				nsstring_un_safeBoolValue( nsstring_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				nsstring_supportsBSXPCSecureCoding( nsstring_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				nsstring_bs_isPlistableType( nsstring_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsstring_bs_secureEncoded( nsstring_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsstring_bs_encoded( nsstring_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				nsstring_releaseOnMainThread( nsstring_t object );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				nsstring_isProxy( nsstring_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsstring_retainCount( nsstring_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsstring_dealloc( nsstring_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsstring_class( nsstring_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsstring_self( nsstring_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				nsstring_isKindOfClass( nsstring_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				nsstring_isMemberOfClass( nsstring_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				nsstring_conformsToProtocol( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				nsstring_respondsToSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsstring_retain( nsstring_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsstring_autorelease( nsstring_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsstring_zone( nsstring_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsstring_superclass( nsstring_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsstring_debugDescription( nsstring_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				nsstring_retainWeakReference( nsstring_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				nsstring_allowsWeakReference( nsstring_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsstring_copy( nsstring_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsstring_finalize( nsstring_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				nsstring_isFault( nsstring_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsstring_forwardInvocation( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsstring_forwardingTargetForSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsstring_mutableCopy( nsstring_t object );

// Signature from Objective-C Runtime: @ fp_providerDomainIDFromProviderID:domainIdentifier: @ : @ @
nsobject_t 			nsstring_fp_providerDomainIDFromProviderID( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ fp_pathWithFileSystemRepresentation: @ : r*
nsobject_t 			nsstring_fp_pathWithFileSystemRepresentation( char* arg0 );

// Signature from Objective-C Runtime: Q fp_maximumBounceLevel @ :
unsigned long long 	nsstring_fp_maximumBounceLevel( );

// Signature from Objective-C Runtime: @ fp_hashForToken: @ : @
nsobject_t 			nsstring_fp_hashForToken( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fp_representableHFSFileNameWithBase:suffix:extension:makeDotFile: @ : @ @ @ B
nsobject_t 			nsstring_fp_representableHFSFileNameWithBase( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, bool arg3 );

// Signature from Objective-C Runtime: @ fp_commonParentPathForItemURLs: @ : @
nsobject_t 			nsstring_fp_commonParentPathForItemURLs( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{__CFStringTokenizer=} fp_wordTokenizer @ :
__CFStringTokenizer* nsstring_fp_wordTokenizer( );

// Signature from Objective-C Runtime: @ fp_defaultProviderDomainID @ :
nsobject_t 			nsstring_fp_defaultProviderDomainID( );

// Signature from Objective-C Runtime: @ fpfs_initWithFSEventsFlags: @ : I
nsobject_t 			nsstring_fpfs_initWithFSEventsFlags( unsigned int arg0 );

// Signature from Objective-C Runtime: v setFp_defaultProviderDomainID: @ : @
void 				nsstring_setFp_defaultProviderDomainID( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSStringFromLSInstallPhase: @ : Q
nsobject_t 			nsstring_NSStringFromLSInstallPhase( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ NSStringFromLSInstallState: @ : Q
nsobject_t 			nsstring_NSStringFromLSInstallState( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ NSStringFromLSInstallType: @ : Q
nsobject_t 			nsstring_NSStringFromLSInstallType( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ newFromSqliteValue: @ : ^{sqlite3_value=}
nsobject_t 			nsstring_newFromSqliteValue( sqlite3_value* arg0 );

// Signature from Objective-C Runtime: @ newFromSqliteStatement:atIndex: @ : ^{sqlite3_stmt=} i
nsobject_t 			nsstring_newFromSqliteStatement( sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: @ createWithBytesNoCopy:length:error: @ : ^v Q ^@
nsobject_t 			nsstring_createWithBytesNoCopy( void* arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: d defaultLineHeightForFont: @ : @
double 				nsstring_defaultLineHeightForFont( nsobject_t arg0 );

// Signature from Objective-C Runtime: d defaultBaselineOffsetForFont: @ : @
double 				nsstring_defaultBaselineOffsetForFont( nsobject_t arg0 );

// Signature from Objective-C Runtime: q typesetterBehavior @ :
long long 			nsstring_typesetterBehavior( );

// Signature from Objective-C Runtime: f hyphenationFactor @ :
float 				nsstring_hyphenationFactor( );

// Signature from Objective-C Runtime: B usesFontLeading @ :
bool 				nsstring_usesFontLeading( );

// Signature from Objective-C Runtime: v setHyphenationFactor: @ : f
void 				nsstring_setHyphenationFactor( float arg0 );

// Signature from Objective-C Runtime: v setTypesetterBehavior: @ : q
void 				nsstring_setTypesetterBehavior( long long arg0 );

// Signature from Objective-C Runtime: v setUsesFontLeading: @ : B
void 				nsstring_setUsesFontLeading( bool arg0 );

// Signature from Objective-C Runtime: B usesScreenFonts @ :
bool 				nsstring_usesScreenFonts( );

// Signature from Objective-C Runtime: v setUsesScreenFonts: @ : B
void 				nsstring_setUsesScreenFonts( bool arg0 );

// Signature from Objective-C Runtime: v setShowsInvisibleCharacters: @ : B
void 				nsstring_setShowsInvisibleCharacters( bool arg0 );

// Signature from Objective-C Runtime: B showsInvisibleCharacters @ :
bool 				nsstring_showsInvisibleCharacters( );

// Signature from Objective-C Runtime: v setShowsControlCharacters: @ : B
void 				nsstring_setShowsControlCharacters( bool arg0 );

// Signature from Objective-C Runtime: B showsControlCharacters @ :
bool 				nsstring_showsControlCharacters( );

// Signature from Objective-C Runtime: @ MCMakeUUID @ :
nsobject_t 			nsstring_MCMakeUUID( );

// Signature from Objective-C Runtime: @ mt_identityValueForMaterialSettingsProperty: @ : @
nsobject_t 			nsstring_mt_identityValueForMaterialSettingsProperty( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ localizedUserNotificationStringForKey:arguments: @ : @ @
nsobject_t 			nsstring_localizedUserNotificationStringForKey( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ stringWithUnichar: @ : I
nsobject_t 			nsstring_stringWithUnichar( unsigned int arg0 );

// Signature from Objective-C Runtime: @ stringWithFileSystemRepresentation:length: @ : r* Q
nsobject_t 			nsstring_stringWithFileSystemRepresentation( char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringForStdString: @ : r^v
nsobject_t 			nsstring_stringForStdString( void* arg0 );

// Signature from Objective-C Runtime: @ cutStringGUID @ :
nsobject_t 			nsstring_cutStringGUID( );

// Signature from Objective-C Runtime: @ DMCMakeUUID @ :
nsobject_t 			nsstring_DMCMakeUUID( );

// Signature from Objective-C Runtime: @ gs_stringWithFileSystemRepresentation: @ : r*
nsobject_t 			nsstring_gs_stringWithFileSystemRepresentation( char* arg0 );

// Signature from Objective-C Runtime: @ string @ :
nsobject_t 			nsstring_string( );

// Signature from Objective-C Runtime: @ stringWithUTF8String: @ : r*
nsobject_t 			nsstring_stringWithUTF8String( char* arg0 );

// Signature from Objective-C Runtime: @ stringWithFormat: @ : @
nsobject_t 			nsstring_stringWithFormat( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsstring_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsstring_initialize( );

// Signature from Objective-C Runtime: B supportsSecureCoding @ :
bool 				nsstring_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ stringWithCharacters:length: @ : r^S Q
nsobject_t 			nsstring_stringWithCharacters( unsigned short* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: Q defaultCStringEncoding @ :
unsigned long long 	nsstring_defaultCStringEncoding( );

// Signature from Objective-C Runtime: @ stringWithBytes:length:encoding: @ : r^v Q Q
nsobject_t 			nsstring_stringWithBytes( void* arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ localizedNameOfStringEncoding: @ : Q
nsobject_t 			nsstring_localizedNameOfStringEncoding( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ localizedStringWithFormat: @ : @
nsobject_t 			nsstring_localizedStringWithFormat( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringWithString: @ : @
nsobject_t 			nsstring_stringWithString( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pathWithComponents: @ : @
nsobject_t 			nsstring_pathWithComponents( nsobject_t arg0 );

// Signature from Objective-C Runtime: Q stringEncodingForData:encodingOptions:convertedString:usedLossyConversion: @ : @ @ ^@ ^B
unsigned long long 	nsstring_stringEncodingForData( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, bool* arg3 );

// Signature from Objective-C Runtime: @ readableTypeIdentifiersForItemProvider @ :
nsobject_t 			nsstring_readableTypeIdentifiersForItemProvider( );

// Signature from Objective-C Runtime: @ objectWithItemProviderData:typeIdentifier:error: @ : @ @ ^@
nsobject_t 			nsstring_objectWithItemProviderData( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ stringWithCString: @ : r*
nsobject_t 			nsstring_stringWithCString( char* arg0 );

// Signature from Objective-C Runtime: @ localizedStringWithValidatedFormat:validFormatSpecifiers:error: @ : @ @ ^@
nsobject_t 			nsstring_localizedStringWithValidatedFormat( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ stringWithValidatedFormat:validFormatSpecifiers:error: @ : @ @ ^@
nsobject_t 			nsstring_stringWithValidatedFormat( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ stringWithContentsOfFile: @ : @
nsobject_t 			nsstring_stringWithContentsOfFile( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringWithContentsOfURL: @ : @
nsobject_t 			nsstring_stringWithContentsOfURL( nsobject_t arg0 );

// Signature from Objective-C Runtime: r^Q availableStringEncodings @ :
unsigned long long* nsstring_availableStringEncodings( );

// Signature from Objective-C Runtime: v load @ :
void 				nsstring_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsstring_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				nsstring_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsstring_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				nsstring_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsstring_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				nsstring_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsstring_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsstring_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsstring_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsstring_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsstring_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsstring_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsstring_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				nsstring_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				nsstring_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsstring_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				nsstring_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				nsstring_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsstring_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsstring_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsstring_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsstring_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsstring_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsstring_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsstring_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				nsstring_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				nsstring_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsstring_t 			nsstring_alloc( );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				nsstring_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				nsstring_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				nsstring_instancesRespondToSelector( nsselector_t arg0 );

#endif
