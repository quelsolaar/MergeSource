/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSPROCESSINFO_HEADER
#define SHIMMER_C_OCOA_NSPROCESSINFO_HEADER

typedef void*	nsprocessinfo_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ bs_jobLabel @ :
nsobject_t 			nsprocessinfo_bs_jobLabel( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsprocessinfo_dealloc( nsprocessinfo_t object );

// Signature from Objective-C Runtime: i processIdentifier @ :
int 				nsprocessinfo_processIdentifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ arguments @ :
nsobject_t 			nsprocessinfo_arguments( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ processName @ :
nsobject_t 			nsprocessinfo_processName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ environment @ :
nsobject_t 			nsprocessinfo_environment( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q operatingSystem @ :
unsigned long long 	nsprocessinfo_operatingSystem( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setArguments: @ : @
void 				nsprocessinfo_setArguments( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ hostName @ :
nsobject_t 			nsprocessinfo_hostName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setProcessName: @ : @
void 				nsprocessinfo_setProcessName( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ globallyUniqueString @ :
nsobject_t 			nsprocessinfo_globallyUniqueString( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ userName @ :
nsobject_t 			nsprocessinfo_userName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ userHomeDirectory @ :
nsobject_t 			nsprocessinfo_userHomeDirectory( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ operatingSystemName @ :
nsobject_t 			nsprocessinfo_operatingSystemName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ operatingSystemVersionString @ :
nsobject_t 			nsprocessinfo_operatingSystemVersionString( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q processorCount @ :
unsigned long long 	nsprocessinfo_processorCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q activeProcessorCount @ :
unsigned long long 	nsprocessinfo_activeProcessorCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q physicalMemory @ :
unsigned long long 	nsprocessinfo_physicalMemory( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isTranslated @ :
bool 				nsprocessinfo_isTranslated( nsprocessinfo_t object );

// Signature from Objective-C Runtime: d systemUptime @ :
double 				nsprocessinfo_systemUptime( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v disableSuddenTermination @ :
void 				nsprocessinfo_disableSuddenTermination( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v enableSuddenTermination @ :
void 				nsprocessinfo_enableSuddenTermination( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v disableAutomaticTermination: @ : @
void 				nsprocessinfo_disableAutomaticTermination( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v enableAutomaticTermination: @ : @
void 				nsprocessinfo_enableAutomaticTermination( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAutomaticTerminationSupportEnabled: @ : B
void 				nsprocessinfo_setAutomaticTerminationSupportEnabled( nsprocessinfo_t object, bool arg0 );

// Signature from Objective-C Runtime: B automaticTerminationSupportEnabled @ :
bool 				nsprocessinfo_automaticTerminationSupportEnabled( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v performActivityWithOptions:reason:usingBlock: @ : Q @ @?
void 				nsprocessinfo_performActivityWithOptions( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ beginSuspensionOfSystemBehaviors:reason: @ : Q @
nsobject_t 			nsprocessinfo_beginSuspensionOfSystemBehaviors( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v endSystemBehaviorSuspension: @ : @
void 				nsprocessinfo_endSystemBehaviorSuspension( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ beginActivityWithOptions:reason: @ : Q @
nsobject_t 			nsprocessinfo_beginActivityWithOptions( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v endActivity: @ : @
void 				nsprocessinfo_endActivity( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performExpiringActivityWithReason:usingBlock: @ : @ @?
void 				nsprocessinfo_performExpiringActivityWithReason( nsprocessinfo_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: q thermalState @ :
long long 			nsprocessinfo_thermalState( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isLowPowerModeEnabled @ :
bool 				nsprocessinfo_isLowPowerModeEnabled( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isMacCatalystApp @ :
bool 				nsprocessinfo_isMacCatalystApp( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isiOSAppOnMac @ :
bool 				nsprocessinfo_isiOSAppOnMac( nsprocessinfo_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsprocessinfo_classForCoder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForCoder( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsprocessinfo_awakeAfterUsingCoder( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				nsprocessinfo_implementsSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsprocessinfo_setObservationInfo( nsprocessinfo_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsprocessinfo_setValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForPortCoder( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsprocessinfo_willChangeValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsprocessinfo_didChangeValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForArchiver( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsprocessinfo_classForArchiver( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsprocessinfo_valueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsprocessinfo_classForKeyedArchiver( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForKeyedArchiver( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsprocessinfo_methodDescriptionForSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_valueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_mutableArrayValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_mutableOrderedSetValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_mutableSetValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			nsprocessinfo_addObserver( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsprocessinfo_removeObservation( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsprocessinfo_receiveObservedValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsprocessinfo_receiveObservedError( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsprocessinfo_finishObserving( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsprocessinfo_setObservation( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsprocessinfo_observeValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsprocessinfo_removeObserver( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsprocessinfo_addChainedObservers( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsprocessinfo_addObserverBlock( nsprocessinfo_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsprocessinfo_addObservationTransformer( nsprocessinfo_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsprocessinfo_valueForUndefinedKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsprocessinfo_setNilValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsprocessinfo_mutableArrayValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsprocessinfo_mutableOrderedSetValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsprocessinfo_mutableSetValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsprocessinfo_dictionaryWithValuesForKeys( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsprocessinfo_setValuesForKeysWithDictionary( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsprocessinfo_willChange( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsprocessinfo_didChange( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsprocessinfo_observationInfo( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsprocessinfo_autoContentAccessingProxy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsprocessinfo_classForPortCoder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsprocessinfo_performSelector( nsprocessinfo_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				nsprocessinfo_performSelectorOnMainThread( nsprocessinfo_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsprocessinfo_performSelectorInBackground( nsprocessinfo_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				nsprocessinfo_isNSDate__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				nsprocessinfo_isNSString__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				nsprocessinfo_isNSCFConstantString__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				nsprocessinfo_isNSNumber__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				nsprocessinfo_isNSArray__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				nsprocessinfo_isNSDictionary__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				nsprocessinfo_isNSData__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				nsprocessinfo_isNSObject__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				nsprocessinfo_isNSOrderedSet__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				nsprocessinfo_isNSSet__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				nsprocessinfo_isNSTimeZone__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				nsprocessinfo_isNSValue__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsprocessinfo_description( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsprocessinfo_doesNotRecognizeSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsprocessinfo_methodSignatureForSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsprocessinfo_className( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsprocessinfo_accessibilityLabel( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsprocessinfo_setAccessibilityLabel( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsprocessinfo_setAccessibilityIdentifier( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsprocessinfo_accessibilityFrame( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			nsprocessinfo_storedAccessibilityViewIsModal( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			nsprocessinfo_storedAccessibilityElementsHidden( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			nsprocessinfo_storedShouldGroupAccessibilityChildren( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			nsprocessinfo_storedAccessibilityNavigationStyle( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			nsprocessinfo_storedAccessibilityRespondsToUserInteraction( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			nsprocessinfo_accessibilityAttributedLabel( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsprocessinfo_accessibilityValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			nsprocessinfo_accessibilityAttributedValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			nsprocessinfo_accessibilityHint( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			nsprocessinfo_accessibilityAttributedHint( nsprocessinfo_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsprocessinfo_accessibilityActivationPoint( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	nsprocessinfo_accessibilityTraits( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				nsprocessinfo_isAccessibilityElement( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			nsprocessinfo_accessibilityContainer( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			nsprocessinfo_accessibilityLanguage( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			nsprocessinfo_accessibilityPath( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				nsprocessinfo_accessibilityViewIsModal( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				nsprocessinfo_accessibilityElementsHidden( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				nsprocessinfo_shouldGroupAccessibilityChildren( nsprocessinfo_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			nsprocessinfo_accessibilityNavigationStyle( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				nsprocessinfo_accessibilityRespondsToUserInteraction( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsprocessinfo_accessibilityUserInputLabels( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsprocessinfo_accessibilityAttributedUserInputLabels( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			nsprocessinfo_storedAccessibilityIdentifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			nsprocessinfo_storedAccessibilityTraits( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			nsprocessinfo_storedIsAccessibilityElement( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			nsprocessinfo_storedAccessibilityFrame( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			nsprocessinfo_storedAccessibilityActivationPoint( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			nsprocessinfo_accessibilityHeaderElements( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				nsprocessinfo_setAccessibilityElementsHidden( nsprocessinfo_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				nsprocessinfo_setAccessibilityViewIsModal( nsprocessinfo_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				nsprocessinfo_setAccessibilityAttributedLabel( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsprocessinfo_setAccessibilityValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				nsprocessinfo_setAccessibilityAttributedValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				nsprocessinfo_setAccessibilityHint( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				nsprocessinfo_setAccessibilityAttributedHint( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsprocessinfo_setAccessibilityFrame( nsprocessinfo_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				nsprocessinfo_setAccessibilityPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsprocessinfo_setAccessibilityActivationPoint( nsprocessinfo_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				nsprocessinfo_setAccessibilityTraits( nsprocessinfo_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				nsprocessinfo_setIsAccessibilityElement( nsprocessinfo_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				nsprocessinfo_setAccessibilityContainer( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				nsprocessinfo_setAccessibilityLanguage( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				nsprocessinfo_setShouldGroupAccessibilityChildren( nsprocessinfo_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				nsprocessinfo_setAccessibilityNavigationStyle( nsprocessinfo_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				nsprocessinfo_setAccessibilityRespondsToUserInteraction( nsprocessinfo_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsprocessinfo_setAccessibilityUserInputLabels( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsprocessinfo_setAccessibilityAttributedUserInputLabels( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			nsprocessinfo_accessibilityTextualContext( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				nsprocessinfo_setAccessibilityTextualContext( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				nsprocessinfo_setAccessibilityHeaderElements( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				nsprocessinfo_accessibilityElementDidBecomeFocused( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				nsprocessinfo_accessibilityElementDidLoseFocus( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				nsprocessinfo_accessibilityElementIsFocused( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			nsprocessinfo_accessibilityAssistiveTechnologyFocusedIdentifiers( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				nsprocessinfo_accessibilityIncrement( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				nsprocessinfo_accessibilityDecrement( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				nsprocessinfo_accessibilityScroll( nsprocessinfo_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				nsprocessinfo_accessibilityPerformEscape( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				nsprocessinfo_accessibilityPerformMagicTap( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				nsprocessinfo_accessibilityActivate( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsprocessinfo_setAccessibilityCustomActions( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsprocessinfo_accessibilityCustomActions( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			nsprocessinfo_accessibilityIdentification( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				nsprocessinfo_accessibilitySetIdentification( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsprocessinfo_accessibilityIdentifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	nsprocessinfo_defaultAccessibilityTraits( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				nsprocessinfo_isAccessibilityElementByDefault( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				nsprocessinfo_isElementAccessibilityExposedToInterfaceBuilder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			nsprocessinfo_accessibilityLocalizedStringKey( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				nsprocessinfo_setAccessibilityDragSourceDescriptors( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			nsprocessinfo_accessibilityDragSourceDescriptors( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				nsprocessinfo_setAccessibilityDropPointDescriptors( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			nsprocessinfo_accessibilityDropPointDescriptors( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			nsprocessinfo_storedAccessibilityContainerType( nsprocessinfo_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			nsprocessinfo_accessibilityElementCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			nsprocessinfo_accessibilityElementAtIndex( nsprocessinfo_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			nsprocessinfo_indexOfAccessibilityElement( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			nsprocessinfo_accessibilityElements( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				nsprocessinfo_setAccessibilityElements( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsprocessinfo_accessibilityContainerType( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsprocessinfo_setAccessibilityContainerType( nsprocessinfo_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsprocessinfo_setAccessibilityCustomRotors( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsprocessinfo_accessibilityCustomRotors( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			nsprocessinfo_uiPresentationManager( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsprocessinfo_awakeFromNib( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				nsprocessinfo_conformsToProtocolCached( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsprocessinfo_prepareForInterfaceBuilder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsprocessinfo_CA_distanceToValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			nsprocessinfo_CA_copyRenderValueWithColorspace( nsprocessinfo_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			nsprocessinfo_CA_copyRenderValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsprocessinfo_CA_interpolateValue( nsprocessinfo_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsprocessinfo_CA_addValue( nsprocessinfo_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				nsprocessinfo_CAMLTypeSupportedForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsprocessinfo_CAMLTypeForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				nsprocessinfo_CA_validateValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsprocessinfo_encodeWithCAMLWriter( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			nsprocessinfo_CA_interpolateValues( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsprocessinfo_CAMLType( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsprocessinfo_CA_prepareRenderValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsprocessinfo_CA_archivingValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsprocessinfo_CA_roundToIntegerFromValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			nsprocessinfo_initFromPQLResultSet( nsprocessinfo_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				nsprocessinfo_supportsRBSXPCSecureCoding( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				nsprocessinfo_RBSIsXPCObject( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsprocessinfo_NSRepresentation( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			nsprocessinfo_pep_onMainThread( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			nsprocessinfo_pep_onThread( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			nsprocessinfo_pep_onOperationQueue( nsprocessinfo_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			nsprocessinfo_pep_onMainThreadIfNecessary( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			nsprocessinfo_pep_afterDelay( nsprocessinfo_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			nsprocessinfo_pep_getInvocation( nsprocessinfo_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			nsprocessinfo_stringValueSafe( nsprocessinfo_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				nsprocessinfo_utf8ValueSafe( nsprocessinfo_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				nsprocessinfo_boolValueSafe( nsprocessinfo_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			nsprocessinfo_int64ValueSafe( nsprocessinfo_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				nsprocessinfo_doubleValueSafe( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				nsprocessinfo_un_safeBoolValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				nsprocessinfo_supportsBSXPCSecureCoding( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				nsprocessinfo_bs_isPlistableType( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsprocessinfo_bs_secureEncoded( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsprocessinfo_bs_encoded( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				nsprocessinfo_releaseOnMainThread( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				nsprocessinfo_isProxy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsprocessinfo_retainCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				nsprocessinfo_isEqual( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsprocessinfo_class( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsprocessinfo_self( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				nsprocessinfo_isKindOfClass( nsprocessinfo_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				nsprocessinfo_isMemberOfClass( nsprocessinfo_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				nsprocessinfo_conformsToProtocol( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				nsprocessinfo_respondsToSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsprocessinfo_retain( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsprocessinfo_autorelease( nsprocessinfo_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsprocessinfo_zone( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsprocessinfo_hash( nsprocessinfo_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsprocessinfo_superclass( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsprocessinfo_debugDescription( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsprocessinfo_init( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				nsprocessinfo_retainWeakReference( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				nsprocessinfo_allowsWeakReference( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsprocessinfo_copy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsprocessinfo_finalize( nsprocessinfo_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				nsprocessinfo_isFault( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsprocessinfo_forwardInvocation( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsprocessinfo_forwardingTargetForSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsprocessinfo_mutableCopy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ processInfo @ :
nsobject_t 			nsprocessinfo_processInfo( );

// Signature from Objective-C Runtime: v load @ :
void 				nsprocessinfo_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsprocessinfo_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				nsprocessinfo_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsprocessinfo_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				nsprocessinfo_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsprocessinfo_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				nsprocessinfo_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsprocessinfo_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsprocessinfo_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsprocessinfo_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsprocessinfo_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsprocessinfo_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsprocessinfo_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsprocessinfo_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				nsprocessinfo_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				nsprocessinfo_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsprocessinfo_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				nsprocessinfo_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				nsprocessinfo_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsprocessinfo_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsprocessinfo_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsprocessinfo_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsprocessinfo_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsprocessinfo_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsprocessinfo_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsprocessinfo_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsprocessinfo_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsprocessinfo_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsprocessinfo_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				nsprocessinfo_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				nsprocessinfo_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsprocessinfo_t 	nsprocessinfo_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsprocessinfo_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				nsprocessinfo_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				nsprocessinfo_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				nsprocessinfo_instancesRespondToSelector( nsselector_t arg0 );

#endif