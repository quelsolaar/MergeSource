/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_UISCREEN_HEADER
#define SHIMMER_C_OCOA_UISCREEN_HEADER

#include "c_ocoa_types.h"

typedef void* uiscreen_t;

// Signature from Objective-C Runtime: v dealloc @ :
void 				uiscreen_dealloc( uiscreen_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			uiscreen_description( uiscreen_t object );

// Signature from Objective-C Runtime: @ currentMode @ :
nsobject_t 			uiscreen_currentMode( uiscreen_t object );

// Signature from Objective-C Runtime: d scale @ :
double 				uiscreen_scale( uiscreen_t object );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				uiscreen_observeValueForKeyPath( uiscreen_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} bounds @ :
CGRect 				uiscreen_bounds( uiscreen_t object );

// Signature from Objective-C Runtime: d brightness @ :
double 				uiscreen_brightness( uiscreen_t object );

// Signature from Objective-C Runtime: v setBrightness: @ : d
void 				uiscreen_setBrightness( uiscreen_t object, double arg0 );

// Signature from Objective-C Runtime: @ snapshot @ :
nsobject_t 			uiscreen_snapshot( uiscreen_t object );

// Signature from Objective-C Runtime: @ traitCollection @ :
nsobject_t 			uiscreen_traitCollection( uiscreen_t object );

// Signature from Objective-C Runtime: v traitCollectionDidChange: @ : @
void 				uiscreen_traitCollectionDidChange( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateFocusIfNeeded @ :
void 				uiscreen_updateFocusIfNeeded( uiscreen_t object );

// Signature from Objective-C Runtime: @ coordinateSpace @ :
nsobject_t 			uiscreen_coordinateSpace( uiscreen_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRect:toCoordinateSpace: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
CGRect 				uiscreen_convertRect( uiscreen_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setNeedsFocusUpdate @ :
void 				uiscreen_setNeedsFocusUpdate( uiscreen_t object );

// Signature from Objective-C Runtime: B shouldUpdateFocusInContext: @ : @
bool 				uiscreen_shouldUpdateFocusInContext( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didUpdateFocusInContext:withAnimationCoordinator: @ : @ @
void 				uiscreen_didUpdateFocusInContext( uiscreen_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ preferredFocusEnvironments @ :
nsobject_t 			uiscreen_preferredFocusEnvironments( uiscreen_t object );

// Signature from Objective-C Runtime: @ parentFocusEnvironment @ :
nsobject_t 			uiscreen_parentFocusEnvironment( uiscreen_t object );

// Signature from Objective-C Runtime: @ focusItemContainer @ :
nsobject_t 			uiscreen_focusItemContainer( uiscreen_t object );

// Signature from Objective-C Runtime: @ preferredFocusedView @ :
nsobject_t 			uiscreen_preferredFocusedView( uiscreen_t object );

// Signature from Objective-C Runtime: @ focusedItem @ :
nsobject_t 			uiscreen_focusedItem( uiscreen_t object );

// Signature from Objective-C Runtime: @ focusItemsInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			uiscreen_focusItemsInRect( uiscreen_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ displayIdentity @ :
nsobject_t 			uiscreen_displayIdentity( uiscreen_t object );

// Signature from Objective-C Runtime: @ displayConfiguration @ :
nsobject_t 			uiscreen_displayConfiguration( uiscreen_t object );

// Signature from Objective-C Runtime: @ displayLinkWithTarget:selector: @ : @ :
nsobject_t 			uiscreen_displayLinkWithTarget( uiscreen_t object, nsobject_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: q maximumFramesPerSecond @ :
long long 			uiscreen_maximumFramesPerSecond( uiscreen_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} overscanCompensationInsets @ :
UIEdgeInsets 		uiscreen_overscanCompensationInsets( uiscreen_t object );

// Signature from Objective-C Runtime: @ snapshotViewAfterScreenUpdates: @ : B
nsobject_t 			uiscreen_snapshotViewAfterScreenUpdates( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPoint:toCoordinateSpace: @ : {CGPoint=dd} @
CGPoint 			uiscreen_convertPoint( uiscreen_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ focusedView @ :
nsobject_t 			uiscreen_focusedView( uiscreen_t object );

// Signature from Objective-C Runtime: @ snapshotView @ :
nsobject_t 			uiscreen_snapshotView( uiscreen_t object );

// Signature from Objective-C Runtime: @ fixedCoordinateSpace @ :
nsobject_t 			uiscreen_fixedCoordinateSpace( uiscreen_t object );

// Signature from Objective-C Runtime: @ initWithDisplayConfiguration: @ : @
nsobject_t 			uiscreen_initWithDisplayConfiguration( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isCaptured @ :
bool 				uiscreen_isCaptured( uiscreen_t object );

// Signature from Objective-C Runtime: @ availableModes @ :
nsobject_t 			uiscreen_availableModes( uiscreen_t object );

// Signature from Objective-C Runtime: q overscanCompensation @ :
long long 			uiscreen_overscanCompensation( uiscreen_t object );

// Signature from Objective-C Runtime: d calibratedLatency @ :
double 				uiscreen_calibratedLatency( uiscreen_t object );

// Signature from Objective-C Runtime: @ preferredMode @ :
nsobject_t 			uiscreen_preferredMode( uiscreen_t object );

// Signature from Objective-C Runtime: d nativeScale @ :
double 				uiscreen_nativeScale( uiscreen_t object );

// Signature from Objective-C Runtime: f rawBrightnessForBacklightLevel: @ : f
float 				uiscreen_rawBrightnessForBacklightLevel( uiscreen_t object, float arg0 );

// Signature from Objective-C Runtime: v setDisplayConfiguration: @ : @
void 				uiscreen_setDisplayConfiguration( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} applicationFrame @ :
CGRect 				uiscreen_applicationFrame( uiscreen_t object );

// Signature from Objective-C Runtime: @ mirroredScreen @ :
nsobject_t 			uiscreen_mirroredScreen( uiscreen_t object );

// Signature from Objective-C Runtime: i bitsPerComponent @ :
int 				uiscreen_bitsPerComponent( uiscreen_t object );

// Signature from Objective-C Runtime: v setBitsPerComponent: @ : i
void 				uiscreen_setBitsPerComponent( uiscreen_t object, int arg0 );

// Signature from Objective-C Runtime: v setCurrentMode: @ : @
void 				uiscreen_setCurrentMode( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i screenType @ :
int 				uiscreen_screenType( uiscreen_t object );

// Signature from Objective-C Runtime: v setOverscanCompensation: @ : q
void 				uiscreen_setOverscanCompensation( uiscreen_t object, long long arg0 );

// Signature from Objective-C Runtime: q gamut @ :
long long 			uiscreen_gamut( uiscreen_t object );

// Signature from Objective-C Runtime: @ fbsDisplay @ :
nsobject_t 			uiscreen_fbsDisplay( uiscreen_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} nativeBounds @ :
CGRect 				uiscreen_nativeBounds( uiscreen_t object );

// Signature from Objective-C Runtime: v setFocusEnabled: @ : B
void 				uiscreen_setFocusEnabled( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: B supportsFocus @ :
bool 				uiscreen_supportsFocus( uiscreen_t object );

// Signature from Objective-C Runtime: B wantsSoftwareDimming @ :
bool 				uiscreen_wantsSoftwareDimming( uiscreen_t object );

// Signature from Objective-C Runtime: v setWantsSoftwareDimming: @ : B
void 				uiscreen_setWantsSoftwareDimming( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: v setCarSessionStatus: @ : @
void 				uiscreen_setCarSessionStatus( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			uiscreen_classForCoder( uiscreen_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			uiscreen_replacementObjectForCoder( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			uiscreen_awakeAfterUsingCoder( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				uiscreen_implementsSelector( uiscreen_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				uiscreen_setObservationInfo( uiscreen_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				uiscreen_setValue( uiscreen_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			uiscreen_replacementObjectForPortCoder( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				uiscreen_willChangeValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				uiscreen_didChangeValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			uiscreen_replacementObjectForArchiver( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			uiscreen_classForArchiver( uiscreen_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			uiscreen_valueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			uiscreen_classForKeyedArchiver( uiscreen_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			uiscreen_replacementObjectForKeyedArchiver( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* uiscreen_methodDescriptionForSelector( uiscreen_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			uiscreen_valueForKeyPath( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			uiscreen_mutableArrayValueForKeyPath( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			uiscreen_mutableOrderedSetValueForKeyPath( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			uiscreen_mutableSetValueForKeyPath( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			uiscreen_addObserver( uiscreen_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				uiscreen_removeObservation( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				uiscreen_receiveObservedValue( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				uiscreen_receiveObservedError( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				uiscreen_finishObserving( uiscreen_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				uiscreen_setObservation( uiscreen_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				uiscreen_removeObserver( uiscreen_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			uiscreen_addChainedObservers( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			uiscreen_addObserverBlock( uiscreen_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			uiscreen_addObservationTransformer( uiscreen_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			uiscreen_valueForUndefinedKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				uiscreen_setNilValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			uiscreen_mutableArrayValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			uiscreen_mutableOrderedSetValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			uiscreen_mutableSetValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			uiscreen_dictionaryWithValuesForKeys( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				uiscreen_setValuesForKeysWithDictionary( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				uiscreen_willChange( uiscreen_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				uiscreen_didChange( uiscreen_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				uiscreen_observationInfo( uiscreen_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			uiscreen_autoContentAccessingProxy( uiscreen_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			uiscreen_classForPortCoder( uiscreen_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				uiscreen_performSelector( uiscreen_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				uiscreen_performSelectorOnMainThread( uiscreen_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				uiscreen_performSelectorInBackground( uiscreen_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				uiscreen_isNSDate__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				uiscreen_isNSString__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				uiscreen_isNSCFConstantString__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				uiscreen_isNSNumber__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				uiscreen_isNSArray__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				uiscreen_isNSDictionary__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				uiscreen_isNSData__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				uiscreen_isNSObject__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				uiscreen_isNSOrderedSet__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				uiscreen_isNSSet__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				uiscreen_isNSTimeZone__( uiscreen_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				uiscreen_isNSValue__( uiscreen_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				uiscreen_doesNotRecognizeSelector( uiscreen_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			uiscreen_methodSignatureForSelector( uiscreen_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			uiscreen_className( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			uiscreen_accessibilityLabel( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				uiscreen_setAccessibilityLabel( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				uiscreen_setAccessibilityIdentifier( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				uiscreen_accessibilityFrame( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			uiscreen_storedAccessibilityViewIsModal( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			uiscreen_storedAccessibilityElementsHidden( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			uiscreen_storedShouldGroupAccessibilityChildren( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			uiscreen_storedAccessibilityNavigationStyle( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			uiscreen_storedAccessibilityRespondsToUserInteraction( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			uiscreen_accessibilityAttributedLabel( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			uiscreen_accessibilityValue( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			uiscreen_accessibilityAttributedValue( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			uiscreen_accessibilityHint( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			uiscreen_accessibilityAttributedHint( uiscreen_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			uiscreen_accessibilityActivationPoint( uiscreen_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	uiscreen_accessibilityTraits( uiscreen_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				uiscreen_isAccessibilityElement( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			uiscreen_accessibilityContainer( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			uiscreen_accessibilityLanguage( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			uiscreen_accessibilityPath( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				uiscreen_accessibilityViewIsModal( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				uiscreen_accessibilityElementsHidden( uiscreen_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				uiscreen_shouldGroupAccessibilityChildren( uiscreen_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			uiscreen_accessibilityNavigationStyle( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				uiscreen_accessibilityRespondsToUserInteraction( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			uiscreen_accessibilityUserInputLabels( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			uiscreen_accessibilityAttributedUserInputLabels( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			uiscreen_storedAccessibilityIdentifier( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			uiscreen_storedAccessibilityTraits( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			uiscreen_storedIsAccessibilityElement( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			uiscreen_storedAccessibilityFrame( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			uiscreen_storedAccessibilityActivationPoint( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			uiscreen_accessibilityHeaderElements( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				uiscreen_setAccessibilityElementsHidden( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				uiscreen_setAccessibilityViewIsModal( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				uiscreen_setAccessibilityAttributedLabel( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				uiscreen_setAccessibilityValue( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				uiscreen_setAccessibilityAttributedValue( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				uiscreen_setAccessibilityHint( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				uiscreen_setAccessibilityAttributedHint( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiscreen_setAccessibilityFrame( uiscreen_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				uiscreen_setAccessibilityPath( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				uiscreen_setAccessibilityActivationPoint( uiscreen_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				uiscreen_setAccessibilityTraits( uiscreen_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				uiscreen_setIsAccessibilityElement( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				uiscreen_setAccessibilityContainer( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				uiscreen_setAccessibilityLanguage( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				uiscreen_setShouldGroupAccessibilityChildren( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				uiscreen_setAccessibilityNavigationStyle( uiscreen_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				uiscreen_setAccessibilityRespondsToUserInteraction( uiscreen_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				uiscreen_setAccessibilityUserInputLabels( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				uiscreen_setAccessibilityAttributedUserInputLabels( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			uiscreen_accessibilityTextualContext( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				uiscreen_setAccessibilityTextualContext( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				uiscreen_setAccessibilityHeaderElements( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				uiscreen_accessibilityElementDidBecomeFocused( uiscreen_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				uiscreen_accessibilityElementDidLoseFocus( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				uiscreen_accessibilityElementIsFocused( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			uiscreen_accessibilityAssistiveTechnologyFocusedIdentifiers( uiscreen_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				uiscreen_accessibilityIncrement( uiscreen_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				uiscreen_accessibilityDecrement( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				uiscreen_accessibilityScroll( uiscreen_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				uiscreen_accessibilityPerformEscape( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				uiscreen_accessibilityPerformMagicTap( uiscreen_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				uiscreen_accessibilityActivate( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				uiscreen_setAccessibilityCustomActions( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			uiscreen_accessibilityCustomActions( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			uiscreen_accessibilityIdentification( uiscreen_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				uiscreen_accessibilitySetIdentification( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			uiscreen_accessibilityIdentifier( uiscreen_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	uiscreen_defaultAccessibilityTraits( uiscreen_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				uiscreen_isAccessibilityElementByDefault( uiscreen_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				uiscreen_isElementAccessibilityExposedToInterfaceBuilder( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			uiscreen_accessibilityLocalizedStringKey( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				uiscreen_setAccessibilityDragSourceDescriptors( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			uiscreen_accessibilityDragSourceDescriptors( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				uiscreen_setAccessibilityDropPointDescriptors( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			uiscreen_accessibilityDropPointDescriptors( uiscreen_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			uiscreen_storedAccessibilityContainerType( uiscreen_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			uiscreen_accessibilityElementCount( uiscreen_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			uiscreen_accessibilityElementAtIndex( uiscreen_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			uiscreen_indexOfAccessibilityElement( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			uiscreen_accessibilityElements( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				uiscreen_setAccessibilityElements( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			uiscreen_accessibilityContainerType( uiscreen_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				uiscreen_setAccessibilityContainerType( uiscreen_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				uiscreen_setAccessibilityCustomRotors( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			uiscreen_accessibilityCustomRotors( uiscreen_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			uiscreen_uiPresentationManager( uiscreen_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				uiscreen_awakeFromNib( uiscreen_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				uiscreen_conformsToProtocolCached( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				uiscreen_prepareForInterfaceBuilder( uiscreen_t object );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				uiscreen_CA_distanceToValue( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			uiscreen_CA_copyRenderValueWithColorspace( uiscreen_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			uiscreen_CA_copyRenderValue( uiscreen_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			uiscreen_CA_interpolateValue( uiscreen_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			uiscreen_CA_addValue( uiscreen_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				uiscreen_CAMLTypeSupportedForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			uiscreen_CAMLTypeForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				uiscreen_CA_validateValue( uiscreen_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				uiscreen_encodeWithCAMLWriter( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			uiscreen_CA_interpolateValues( uiscreen_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			uiscreen_CAMLType( uiscreen_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				uiscreen_CA_prepareRenderValue( uiscreen_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			uiscreen_CA_archivingValueForKey( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			uiscreen_CA_roundToIntegerFromValue( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			uiscreen_initFromPQLResultSet( uiscreen_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				uiscreen_supportsRBSXPCSecureCoding( uiscreen_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				uiscreen_RBSIsXPCObject( uiscreen_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			uiscreen_NSRepresentation( uiscreen_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			uiscreen_pep_onMainThread( uiscreen_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			uiscreen_pep_onThread( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			uiscreen_pep_onOperationQueue( uiscreen_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			uiscreen_pep_onMainThreadIfNecessary( uiscreen_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			uiscreen_pep_afterDelay( uiscreen_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			uiscreen_pep_getInvocation( uiscreen_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			uiscreen_stringValueSafe( uiscreen_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				uiscreen_utf8ValueSafe( uiscreen_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				uiscreen_boolValueSafe( uiscreen_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			uiscreen_int64ValueSafe( uiscreen_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				uiscreen_doubleValueSafe( uiscreen_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				uiscreen_un_safeBoolValue( uiscreen_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				uiscreen_supportsBSXPCSecureCoding( uiscreen_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				uiscreen_bs_isPlistableType( uiscreen_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			uiscreen_bs_secureEncoded( uiscreen_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			uiscreen_bs_encoded( uiscreen_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				uiscreen_releaseOnMainThread( uiscreen_t object );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				uiscreen_isProxy( uiscreen_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	uiscreen_retainCount( uiscreen_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				uiscreen_isEqual( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			uiscreen_class( uiscreen_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			uiscreen_self( uiscreen_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				uiscreen_isKindOfClass( uiscreen_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				uiscreen_isMemberOfClass( uiscreen_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				uiscreen_conformsToProtocol( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				uiscreen_respondsToSelector( uiscreen_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			uiscreen_retain( uiscreen_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			uiscreen_autorelease( uiscreen_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			uiscreen_zone( uiscreen_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	uiscreen_hash( uiscreen_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			uiscreen_superclass( uiscreen_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			uiscreen_debugDescription( uiscreen_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			uiscreen_init( uiscreen_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				uiscreen_retainWeakReference( uiscreen_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				uiscreen_allowsWeakReference( uiscreen_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			uiscreen_copy( uiscreen_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				uiscreen_finalize( uiscreen_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				uiscreen_isFault( uiscreen_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				uiscreen_forwardInvocation( uiscreen_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			uiscreen_forwardingTargetForSelector( uiscreen_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			uiscreen_mutableCopy( uiscreen_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				uiscreen_initialize( );

// Signature from Objective-C Runtime: @ mainScreen @ :
nsobject_t 			uiscreen_mainScreen( );

// Signature from Objective-C Runtime: {CGAffineTransform=dddddd} transformToRotateScreen: @ : d
CGAffineTransform 	uiscreen_transformToRotateScreen( double arg0 );

// Signature from Objective-C Runtime: {CGAffineTransform=dddddd} transformForScreenOriginRotation: @ : d
CGAffineTransform 	uiscreen_transformForScreenOriginRotation( double arg0 );

// Signature from Objective-C Runtime: @ screens @ :
nsobject_t 			uiscreen_screens( );

// Signature from Objective-C Runtime: v load @ :
void 				uiscreen_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			uiscreen_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				uiscreen_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				uiscreen_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				uiscreen_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* uiscreen_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				uiscreen_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			uiscreen_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				uiscreen_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			uiscreen_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			uiscreen_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				uiscreen_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			uiscreen_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			uiscreen_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				uiscreen_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				uiscreen_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			uiscreen_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				uiscreen_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				uiscreen_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			uiscreen_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			uiscreen_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			uiscreen_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			uiscreen_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			uiscreen_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			uiscreen_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			uiscreen_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			uiscreen_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			uiscreen_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				uiscreen_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				uiscreen_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
uiscreen_t 			uiscreen_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			uiscreen_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				uiscreen_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				uiscreen_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				uiscreen_instancesRespondToSelector( nsselector_t arg0 );

#endif
