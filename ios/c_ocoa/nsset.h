/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSSET_HEADER
#define SHIMMER_C_OCOA_NSSET_HEADER

typedef void*	nsset_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsset_classForCoder( nsset_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsset_encodeWithCoder( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsset_initWithCoder( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsset_setValue( nsset_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsset_replacementObjectForPortCoder( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsset_valueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsset_valueForKeyPath( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v addObserver:forKeyPath:options:context: @ : @ @ Q ^v
void 				nsset_addObserver( nsset_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsset_removeObserver( nsset_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ filteredSetUsingPredicate: @ : @
nsobject_t 			nsset_filteredSetUsingPredicate( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ sortedArrayUsingDescriptors: @ : @
nsobject_t 			nsset_sortedArrayUsingDescriptors( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsset_encodeWithCAMLWriter( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsset_CAMLType( nsset_t object );

// Signature from Objective-C Runtime: v sqliteBind:index: @ : ^{sqlite3_stmt=} i
void 				nsset_sqliteBind( nsset_t object, sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: v bs_each: @ : @?
void 				nsset_bs_each( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ bs_filter: @ : @?
nsobject_t 			nsset_bs_filter( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ bs_firstObjectPassingTest: @ : @?
nsobject_t 			nsset_bs_firstObjectPassingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B bs_containsObjectPassingTest: @ : @?
bool 				nsset_bs_containsObjectPassingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ bs_map: @ : @?
nsobject_t 			nsset_bs_map( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ bs_compactMap: @ : @?
nsobject_t 			nsset_bs_compactMap( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ bs_reduce:block: @ : @ @?
nsobject_t 			nsset_bs_reduce( nsset_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ bs_dictionaryByPartitioning: @ : @?
nsobject_t 			nsset_bs_dictionaryByPartitioning( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ax_filteredSetUsingBlock: @ : @?
nsobject_t 			nsset_ax_filteredSetUsingBlock( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ax_mappedSetUsingBlock: @ : @?
nsobject_t 			nsset_ax_mappedSetUsingBlock( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ax_flatMappedSetUsingBlock: @ : @?
nsobject_t 			nsset_ax_flatMappedSetUsingBlock( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ac_map: @ : @?
nsobject_t 			nsset_ac_map( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ac_mapNullable: @ : @?
nsobject_t 			nsset_ac_mapNullable( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ initWithTrackedSet: @ : @
nsobject_t 			nsset_initWithTrackedSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ aa_setByRemovingObject: @ : @
nsobject_t 			nsset_aa_setByRemovingObject( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ aa_setByRemovingObjectsFromSet: @ : @
nsobject_t 			nsset_aa_setByRemovingObjectsFromSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CKAssignToContainerWithID: @ : @
void 				nsset_CKAssignToContainerWithID( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKMap: @ : @?
nsobject_t 			nsset_CKMap( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v fm_each: @ : @?
void 				nsset_fm_each( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fm_firstObjectPassingTest: @ : @?
nsobject_t 			nsset_fm_firstObjectPassingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fm_map: @ : @?
nsobject_t 			nsset_fm_map( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fm_filter: @ : @?
nsobject_t 			nsset_fm_filter( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B fm_any: @ : @?
bool 				nsset_fm_any( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fm_setByFlattening @ :
nsobject_t 			nsset_fm_setByFlattening( nsset_t object );

// Signature from Objective-C Runtime: @ fm_setByIntersectingWithSet: @ : @
nsobject_t 			nsset_fm_setByIntersectingWithSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_setByRemovingObjectsFromSet: @ : @
nsobject_t 			nsset_fm_setByRemovingObjectsFromSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ if_compactMap: @ : @?
nsobject_t 			nsset_if_compactMap( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ if_map: @ : @?
nsobject_t 			nsset_if_map( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ams_filterUsingTest: @ : @?
nsobject_t 			nsset_ams_filterUsingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ams_firstObjectPassingTest: @ : @?
nsobject_t 			nsset_ams_firstObjectPassingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ams_mapWithTransform: @ : @?
nsobject_t 			nsset_ams_mapWithTransform( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ams_nonEmptyComponentsJoinedByString: @ : @
nsobject_t 			nsset_ams_nonEmptyComponentsJoinedByString( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				nsset_isEqual( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsset_hash( nsset_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsset_description( nsset_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsset_copyWithZone( nsset_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsset_mutableCopyWithZone( nsset_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: Q count @ :
unsigned long long 	nsset_count( nsset_t object );

// Signature from Objective-C Runtime: @ objectEnumerator @ :
nsobject_t 			nsset_objectEnumerator( nsset_t object );

// Signature from Objective-C Runtime: v getObjects:range: @ : ^@ {_NSRange=QQ}
void 				nsset_getObjects( nsset_t object, nsobject_t* arg0, _NSRange arg1 );

// Signature from Objective-C Runtime: v enumerateObjectsWithOptions:usingBlock: @ : Q @?
void 				nsset_enumerateObjectsWithOptions( nsset_t object, unsigned long long arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ allObjects @ :
nsobject_t 			nsset_allObjects( nsset_t object );

// Signature from Objective-C Runtime: Q countForObject: @ : @
unsigned long long 	nsset_countForObject( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ member: @ : @
nsobject_t 			nsset_member( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithObjects:count: @ : r^@ Q
nsobject_t 			nsset_initWithObjects( nsset_t object, nsobject_t* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ setByAddingObjectsFromArray: @ : @
nsobject_t 			nsset_setByAddingObjectsFromArray( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ setByAddingObjectsFromSet: @ : @
nsobject_t 			nsset_setByAddingObjectsFromSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithArray:range:copyItems: @ : @ {_NSRange=QQ} B
nsobject_t 			nsset_initWithArray( nsset_t object, nsobject_t arg0, _NSRange arg1, bool arg2 );

// Signature from Objective-C Runtime: @ initWithObject: @ : @
nsobject_t 			nsset_initWithObject( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B containsObject: @ : @
bool 				nsset_containsObject( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithSet:copyItems: @ : @ B
nsobject_t 			nsset_initWithSet( nsset_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ descriptionWithLocale: @ : @
nsobject_t 			nsset_descriptionWithLocale( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithOrderedSet: @ : @
nsobject_t 			nsset_initWithOrderedSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v enumerateObjectsUsingBlock: @ : @?
void 				nsset_enumerateObjectsUsingBlock( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ objectWithOptions:passingTest: @ : Q @?
nsobject_t 			nsset_objectWithOptions( nsset_t object, unsigned long long arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ objectsWithOptions:passingTest: @ : Q @?
nsobject_t 			nsset_objectsWithOptions( nsset_t object, unsigned long long arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ sortedArrayWithOptions:usingComparator: @ : Q @?
nsobject_t 			nsset_sortedArrayWithOptions( nsset_t object, unsigned long long arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: v makeObjectsPerformSelector: @ : :
void 				nsset_makeObjectsPerformSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ objectPassingTest: @ : @?
nsobject_t 			nsset_objectPassingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ objectsPassingTest: @ : @?
nsobject_t 			nsset_objectsPassingTest( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ sortedArrayUsingComparator: @ : @?
nsobject_t 			nsset_sortedArrayUsingComparator( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				nsset_isNSSet__( nsset_t object );

// Signature from Objective-C Runtime: B isEqualToSet: @ : @
bool 				nsset_isEqualToSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ anyObject @ :
nsobject_t 			nsset_anyObject( nsset_t object );

// Signature from Objective-C Runtime: B intersectsOrderedSet: @ : @
bool 				nsset_intersectsOrderedSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B intersectsSet: @ : @
bool 				nsset_intersectsSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSubsetOfOrderedSet: @ : @
bool 				nsset_isSubsetOfOrderedSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSubsetOfSet: @ : @
bool 				nsset_isSubsetOfSet( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ members:notFoundMarker: @ : @ @
nsobject_t 			nsset_members( nsset_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ setByAddingObject: @ : @
nsobject_t 			nsset_setByAddingObject( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsset_replacementObjectForCoder( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsset_awakeAfterUsingCoder( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				nsset_implementsSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsset_setObservationInfo( nsset_t object, void* arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsset_willChangeValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsset_didChangeValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsset_replacementObjectForArchiver( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsset_classForArchiver( nsset_t object );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsset_classForKeyedArchiver( nsset_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsset_replacementObjectForKeyedArchiver( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsset_methodDescriptionForSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsset_mutableArrayValueForKeyPath( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsset_mutableOrderedSetValueForKeyPath( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsset_mutableSetValueForKeyPath( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsset_removeObservation( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsset_receiveObservedValue( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsset_receiveObservedError( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsset_finishObserving( nsset_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsset_setObservation( nsset_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsset_observeValueForKeyPath( nsset_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsset_addChainedObservers( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsset_addObserverBlock( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsset_addObservationTransformer( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsset_valueForUndefinedKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsset_setNilValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsset_mutableArrayValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsset_mutableOrderedSetValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsset_mutableSetValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsset_dictionaryWithValuesForKeys( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsset_setValuesForKeysWithDictionary( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsset_willChange( nsset_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsset_didChange( nsset_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsset_observationInfo( nsset_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsset_autoContentAccessingProxy( nsset_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsset_classForPortCoder( nsset_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsset_performSelector( nsset_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				nsset_performSelectorOnMainThread( nsset_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsset_performSelectorInBackground( nsset_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				nsset_isNSDate__( nsset_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				nsset_isNSString__( nsset_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				nsset_isNSCFConstantString__( nsset_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				nsset_isNSNumber__( nsset_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				nsset_isNSArray__( nsset_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				nsset_isNSDictionary__( nsset_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				nsset_isNSData__( nsset_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				nsset_isNSObject__( nsset_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				nsset_isNSOrderedSet__( nsset_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				nsset_isNSTimeZone__( nsset_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				nsset_isNSValue__( nsset_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsset_doesNotRecognizeSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsset_methodSignatureForSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsset_CA_distanceToValue( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			nsset_CA_copyRenderValueWithColorspace( nsset_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			nsset_CA_copyRenderValue( nsset_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsset_CA_interpolateValue( nsset_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsset_CA_addValue( nsset_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				nsset_CAMLTypeSupportedForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsset_CAMLTypeForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				nsset_CA_validateValue( nsset_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			nsset_CA_interpolateValues( nsset_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsset_CA_prepareRenderValue( nsset_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsset_CA_archivingValueForKey( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsset_CA_roundToIntegerFromValue( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsset_className( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsset_accessibilityLabel( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsset_setAccessibilityLabel( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsset_setAccessibilityIdentifier( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsset_accessibilityFrame( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			nsset_storedAccessibilityViewIsModal( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			nsset_storedAccessibilityElementsHidden( nsset_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			nsset_storedShouldGroupAccessibilityChildren( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			nsset_storedAccessibilityNavigationStyle( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			nsset_storedAccessibilityRespondsToUserInteraction( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			nsset_accessibilityAttributedLabel( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsset_accessibilityValue( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			nsset_accessibilityAttributedValue( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			nsset_accessibilityHint( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			nsset_accessibilityAttributedHint( nsset_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsset_accessibilityActivationPoint( nsset_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	nsset_accessibilityTraits( nsset_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				nsset_isAccessibilityElement( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			nsset_accessibilityContainer( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			nsset_accessibilityLanguage( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			nsset_accessibilityPath( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				nsset_accessibilityViewIsModal( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				nsset_accessibilityElementsHidden( nsset_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				nsset_shouldGroupAccessibilityChildren( nsset_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			nsset_accessibilityNavigationStyle( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				nsset_accessibilityRespondsToUserInteraction( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsset_accessibilityUserInputLabels( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsset_accessibilityAttributedUserInputLabels( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			nsset_storedAccessibilityIdentifier( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			nsset_storedAccessibilityTraits( nsset_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			nsset_storedIsAccessibilityElement( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			nsset_storedAccessibilityFrame( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			nsset_storedAccessibilityActivationPoint( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			nsset_accessibilityHeaderElements( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				nsset_setAccessibilityElementsHidden( nsset_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				nsset_setAccessibilityViewIsModal( nsset_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				nsset_setAccessibilityAttributedLabel( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsset_setAccessibilityValue( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				nsset_setAccessibilityAttributedValue( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				nsset_setAccessibilityHint( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				nsset_setAccessibilityAttributedHint( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsset_setAccessibilityFrame( nsset_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				nsset_setAccessibilityPath( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsset_setAccessibilityActivationPoint( nsset_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				nsset_setAccessibilityTraits( nsset_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				nsset_setIsAccessibilityElement( nsset_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				nsset_setAccessibilityContainer( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				nsset_setAccessibilityLanguage( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				nsset_setShouldGroupAccessibilityChildren( nsset_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				nsset_setAccessibilityNavigationStyle( nsset_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				nsset_setAccessibilityRespondsToUserInteraction( nsset_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsset_setAccessibilityUserInputLabels( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsset_setAccessibilityAttributedUserInputLabels( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			nsset_accessibilityTextualContext( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				nsset_setAccessibilityTextualContext( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				nsset_setAccessibilityHeaderElements( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				nsset_accessibilityElementDidBecomeFocused( nsset_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				nsset_accessibilityElementDidLoseFocus( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				nsset_accessibilityElementIsFocused( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			nsset_accessibilityAssistiveTechnologyFocusedIdentifiers( nsset_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				nsset_accessibilityIncrement( nsset_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				nsset_accessibilityDecrement( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				nsset_accessibilityScroll( nsset_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				nsset_accessibilityPerformEscape( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				nsset_accessibilityPerformMagicTap( nsset_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				nsset_accessibilityActivate( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsset_setAccessibilityCustomActions( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsset_accessibilityCustomActions( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			nsset_accessibilityIdentification( nsset_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				nsset_accessibilitySetIdentification( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsset_accessibilityIdentifier( nsset_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	nsset_defaultAccessibilityTraits( nsset_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				nsset_isAccessibilityElementByDefault( nsset_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				nsset_isElementAccessibilityExposedToInterfaceBuilder( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			nsset_accessibilityLocalizedStringKey( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				nsset_setAccessibilityDragSourceDescriptors( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			nsset_accessibilityDragSourceDescriptors( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				nsset_setAccessibilityDropPointDescriptors( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			nsset_accessibilityDropPointDescriptors( nsset_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			nsset_storedAccessibilityContainerType( nsset_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			nsset_accessibilityElementCount( nsset_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			nsset_accessibilityElementAtIndex( nsset_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			nsset_indexOfAccessibilityElement( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			nsset_accessibilityElements( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				nsset_setAccessibilityElements( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsset_accessibilityContainerType( nsset_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsset_setAccessibilityContainerType( nsset_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsset_setAccessibilityCustomRotors( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsset_accessibilityCustomRotors( nsset_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			nsset_uiPresentationManager( nsset_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsset_awakeFromNib( nsset_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				nsset_conformsToProtocolCached( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsset_prepareForInterfaceBuilder( nsset_t object );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			nsset_initFromPQLResultSet( nsset_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				nsset_supportsRBSXPCSecureCoding( nsset_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				nsset_RBSIsXPCObject( nsset_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsset_NSRepresentation( nsset_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			nsset_pep_onMainThread( nsset_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			nsset_pep_onThread( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			nsset_pep_onOperationQueue( nsset_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			nsset_pep_onMainThreadIfNecessary( nsset_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			nsset_pep_afterDelay( nsset_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			nsset_pep_getInvocation( nsset_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			nsset_stringValueSafe( nsset_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				nsset_utf8ValueSafe( nsset_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				nsset_boolValueSafe( nsset_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			nsset_int64ValueSafe( nsset_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				nsset_doubleValueSafe( nsset_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				nsset_un_safeBoolValue( nsset_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				nsset_supportsBSXPCSecureCoding( nsset_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				nsset_bs_isPlistableType( nsset_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsset_bs_secureEncoded( nsset_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsset_bs_encoded( nsset_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				nsset_releaseOnMainThread( nsset_t object );

// Signature from Objective-C Runtime: @ debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			nsset_debugHierarchyAdditionalGroupingIDs( nsset_t object );

// Signature from Objective-C Runtime: @ debugHierarchyObjectsInGroupWithID:outOptions: @ : @ ^@
nsobject_t 			nsset_debugHierarchyObjectsInGroupWithID( nsset_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ debugHierarchyPropertyDescriptions @ :
nsobject_t 			nsset_debugHierarchyPropertyDescriptions( nsset_t object );

// Signature from Objective-C Runtime: @ debugHierarchyValueForPropertyWithName: @ : @
nsobject_t 			nsset_debugHierarchyValueForPropertyWithName( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SCN_setupDisplayLinkWithQueue:screen:policy: @ : @ @ Q
nsobject_t 			nsset_SCN_setupDisplayLinkWithQueue( nsset_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: v postNotificationWithDescription: @ : @
void 				nsset_postNotificationWithDescription( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B okToNotifyFromThisThread @ :
bool 				nsset_okToNotifyFromThisThread( nsset_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPerformSelector:withObject: @ : : @
void 				nsset_fromNotifySafeThreadPerformSelector( nsset_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v allowSafePerformSelector @ :
void 				nsset_allowSafePerformSelector( nsset_t object );

// Signature from Objective-C Runtime: v disallowSafePerformSelector @ :
void 				nsset_disallowSafePerformSelector( nsset_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				nsset_fromNotifySafeThreadPostNotificationName( nsset_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v fromMainThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				nsset_fromMainThreadPostNotificationName( nsset_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v cn_updateDictionaryForKey:withChanges: @ : @ @
void 				nsset_cn_updateDictionaryForKey( nsset_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionAtIndent: @ : Q
nsobject_t 			nsset_descriptionAtIndent( nsset_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: B isNull @ :
bool 				nsset_isNull( nsset_t object );

// Signature from Objective-C Runtime: @ CKDescription @ :
nsobject_t 			nsset_CKDescription( nsset_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescription @ :
nsobject_t 			nsset_CKPropertiesDescription( nsset_t object );

// Signature from Objective-C Runtime: @ CKUnredactedDescription @ :
nsobject_t 			nsset_CKUnredactedDescription( nsset_t object );

// Signature from Objective-C Runtime: @ CKRedactedDescription @ :
nsobject_t 			nsset_CKRedactedDescription( nsset_t object );

// Signature from Objective-C Runtime: @ CKDescriptionPropertiesWithPublic:private:shouldExpand: @ : B B B
nsobject_t 			nsset_CKDescriptionPropertiesWithPublic( nsset_t object, bool arg0, bool arg1, bool arg2 );

// Signature from Objective-C Runtime: @ CKSingleLineDescription @ :
nsobject_t 			nsset_CKSingleLineDescription( nsset_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescriptionStringFromProperties: @ : @
nsobject_t 			nsset_CKPropertiesDescriptionStringFromProperties( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKExpandedDescription @ :
nsobject_t 			nsset_CKExpandedDescription( nsset_t object );

// Signature from Objective-C Runtime: @ CKHashedDescription @ :
nsobject_t 			nsset_CKHashedDescription( nsset_t object );

// Signature from Objective-C Runtime: v ck_bindInStatement:atIndex: @ : @ Q
void 				nsset_ck_bindInStatement( nsset_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ CKDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			nsset_CKDescriptionRedact( nsset_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ CKObjectDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			nsset_CKObjectDescriptionRedact( nsset_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForName:object:queue:usingBlock: @ : @ @ @ @?
nsobject_t 			nsset_fm_addNotificationBlockObserverForName( nsset_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForObject:keyPath:options:usingBlock: @ : @ @ Q @?
nsobject_t 			nsset_fm_addNotificationBlockObserverForObject( nsset_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v fm_removeNotificationBlockObserver: @ : @
void 				nsset_fm_removeNotificationBlockObserver( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_nullToNil @ :
nsobject_t 			nsset_fm_nullToNil( nsset_t object );

// Signature from Objective-C Runtime: @ fm_logID @ :
nsobject_t 			nsset_fm_logID( nsset_t object );

// Signature from Objective-C Runtime: @ nullToNil @ :
nsobject_t 			nsset_nullToNil( nsset_t object );

// Signature from Objective-C Runtime: @ logID @ :
nsobject_t 			nsset_logID( nsset_t object );

// Signature from Objective-C Runtime: v if_setValueIfNonNil:forKey: @ : @ @
void 				nsset_if_setValueIfNonNil( nsset_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v if_setValueIfYES:forKey: @ : B @
void 				nsset_if_setValueIfYES( nsset_t object, bool arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ toPBCodable @ :
nsobject_t 			nsset_toPBCodable( nsset_t object );

// Signature from Objective-C Runtime: @ ams_generateDescriptionWithSubObjects: @ : @
nsobject_t 			nsset_ams_generateDescriptionWithSubObjects( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				nsset_isProxy( nsset_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsset_retainCount( nsset_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsset_dealloc( nsset_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsset_class( nsset_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsset_self( nsset_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				nsset_isKindOfClass( nsset_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				nsset_isMemberOfClass( nsset_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				nsset_conformsToProtocol( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				nsset_respondsToSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsset_retain( nsset_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsset_autorelease( nsset_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsset_zone( nsset_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsset_superclass( nsset_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsset_debugDescription( nsset_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsset_init( nsset_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				nsset_retainWeakReference( nsset_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				nsset_allowsWeakReference( nsset_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsset_copy( nsset_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsset_finalize( nsset_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				nsset_isFault( nsset_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsset_forwardInvocation( nsset_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsset_forwardingTargetForSelector( nsset_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsset_mutableCopy( nsset_t object );

// Signature from Objective-C Runtime: B supportsSecureCoding @ :
bool 				nsset_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ setWithTrackedSet: @ : @
nsobject_t 			nsset_setWithTrackedSet( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ setWithUnionOfSets: @ : @
nsobject_t 			nsset_setWithUnionOfSets( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_setWithSafeObject: @ : @
nsobject_t 			nsset_fm_setWithSafeObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ams_PLISTClasses @ :
nsobject_t 			nsset_ams_PLISTClasses( );

// Signature from Objective-C Runtime: @ ams_JSONClasses @ :
nsobject_t 			nsset_ams_JSONClasses( );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsset_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ set @ :
nsobject_t 			nsset_set( );

// Signature from Objective-C Runtime: @ setWithObjects:count: @ : r^@ Q
nsobject_t 			nsset_setWithObjects( nsobject_t* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ setWithSet: @ : @
nsobject_t 			nsset_setWithSet( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ setWithArray: @ : @
nsobject_t 			nsset_setWithArray( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ setWithObject: @ : @
nsobject_t 			nsset_setWithObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ newSetWithObjects:count: @ : r^@ Q
nsobject_t 			nsset_newSetWithObjects( nsobject_t* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ setWithOrderedSet:range:copyItems: @ : @ {_NSRange=QQ} B
nsobject_t 			nsset_setWithOrderedSet( nsobject_t arg0, _NSRange arg1, bool arg2 );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyPropertyDescriptions @ :
nsobject_t 			nsset_fallback_debugHierarchyPropertyDescriptions( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyValueForPropertyWithName:onObject:outOptions:outError: @ : @ @ ^@ ^@
nsobject_t 			nsset_fallback_debugHierarchyValueForPropertyWithName( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v load @ :
void 				nsset_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsset_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				nsset_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsset_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				nsset_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsset_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				nsset_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsset_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsset_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsset_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsset_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsset_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsset_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				nsset_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				nsset_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsset_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsset_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				nsset_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				nsset_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsset_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsset_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsset_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsset_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsset_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsset_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSQLiteClassName @ :
nsobject_t 			nsset_CKSQLiteClassName( );

// Signature from Objective-C Runtime: B brc_swizzleInstanceMethod:with: @ : : :
bool 				nsset_brc_swizzleInstanceMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: B brc_swizzleClassMethod:with: @ : : :
bool 				nsset_brc_swizzleClassMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: @ fromPBCodable: @ : @
nsobject_t 			nsset_fromPBCodable( nsobject_t arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsset_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsset_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				nsset_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				nsset_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsset_t 			nsset_alloc( );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				nsset_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				nsset_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				nsset_instancesRespondToSelector( nsselector_t arg0 );

#endif