/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_GLKVIEW_HEADER
#define SHIMMER_C_OCOA_GLKVIEW_HEADER

typedef void*	glkview_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v dealloc @ :
void 				glkview_dealloc( glkview_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				glkview_encodeWithCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			glkview_initWithCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ delegate @ :
nsobject_t 			glkview_delegate( glkview_t object );

// Signature from Objective-C Runtime: v setDelegate: @ : @
void 				glkview_setDelegate( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ context @ :
nsobject_t 			glkview_context( glkview_t object );

// Signature from Objective-C Runtime: v setContext: @ : @
void 				glkview_setContext( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ snapshot @ :
nsobject_t 			glkview_snapshot( glkview_t object );

// Signature from Objective-C Runtime: @ initWithFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			glkview_initWithFrame( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v layoutSubviews @ :
void 				glkview_layoutSubviews( glkview_t object );

// Signature from Objective-C Runtime: v setContentScaleFactor: @ : d
void 				glkview_setContentScaleFactor( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: v displayLayer: @ : @
void 				glkview_displayLayer( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setEnableSetNeedsDisplay: @ : B
void 				glkview_setEnableSetNeedsDisplay( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setDrawableColorFormat: @ : i
void 				glkview_setDrawableColorFormat( glkview_t object, int arg0 );

// Signature from Objective-C Runtime: v setDrawableDepthFormat: @ : i
void 				glkview_setDrawableDepthFormat( glkview_t object, int arg0 );

// Signature from Objective-C Runtime: v setDrawableStencilFormat: @ : i
void 				glkview_setDrawableStencilFormat( glkview_t object, int arg0 );

// Signature from Objective-C Runtime: v display @ :
void 				glkview_display( glkview_t object );

// Signature from Objective-C Runtime: @ drawableProperties @ :
nsobject_t 			glkview_drawableProperties( glkview_t object );

// Signature from Objective-C Runtime: v setDrawableProperties: @ : @
void 				glkview_setDrawableProperties( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B enableSetNeedsDisplay @ :
bool 				glkview_enableSetNeedsDisplay( glkview_t object );

// Signature from Objective-C Runtime: v deleteDrawable @ :
void 				glkview_deleteDrawable( glkview_t object );

// Signature from Objective-C Runtime: i drawableColorFormat @ :
int 				glkview_drawableColorFormat( glkview_t object );

// Signature from Objective-C Runtime: i drawableDepthFormat @ :
int 				glkview_drawableDepthFormat( glkview_t object );

// Signature from Objective-C Runtime: i drawableStencilFormat @ :
int 				glkview_drawableStencilFormat( glkview_t object );

// Signature from Objective-C Runtime: i drawableMultisample @ :
int 				glkview_drawableMultisample( glkview_t object );

// Signature from Objective-C Runtime: v setDrawableMultisample: @ : i
void 				glkview_setDrawableMultisample( glkview_t object, int arg0 );

// Signature from Objective-C Runtime: v bindDrawable @ :
void 				glkview_bindDrawable( glkview_t object );

// Signature from Objective-C Runtime: B inDraw @ :
bool 				glkview_inDraw( glkview_t object );

// Signature from Objective-C Runtime: v setInDraw: @ : B
void 				glkview_setInDraw( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B shouldDeleteFramebuffer @ :
bool 				glkview_shouldDeleteFramebuffer( glkview_t object );

// Signature from Objective-C Runtime: v setShouldDeleteFramebuffer: @ : B
void 				glkview_setShouldDeleteFramebuffer( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: I resolveFramebuffer @ :
unsigned int 		glkview_resolveFramebuffer( glkview_t object );

// Signature from Objective-C Runtime: v setResolveFramebuffer: @ : I
void 				glkview_setResolveFramebuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: I resolveColorRenderbuffer @ :
unsigned int 		glkview_resolveColorRenderbuffer( glkview_t object );

// Signature from Objective-C Runtime: v setResolveColorRenderbuffer: @ : I
void 				glkview_setResolveColorRenderbuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: I multisampleFramebuffer @ :
unsigned int 		glkview_multisampleFramebuffer( glkview_t object );

// Signature from Objective-C Runtime: v setMultisampleFramebuffer: @ : I
void 				glkview_setMultisampleFramebuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: I multisampleColorRenderbuffer @ :
unsigned int 		glkview_multisampleColorRenderbuffer( glkview_t object );

// Signature from Objective-C Runtime: v setMultisampleColorRenderbuffer: @ : I
void 				glkview_setMultisampleColorRenderbuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: I depthRenderbuffer @ :
unsigned int 		glkview_depthRenderbuffer( glkview_t object );

// Signature from Objective-C Runtime: v setDepthRenderbuffer: @ : I
void 				glkview_setDepthRenderbuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: I stencilRenderbuffer @ :
unsigned int 		glkview_stencilRenderbuffer( glkview_t object );

// Signature from Objective-C Runtime: v setStencilRenderbuffer: @ : I
void 				glkview_setStencilRenderbuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: I depthStencilRenderbuffer @ :
unsigned int 		glkview_depthStencilRenderbuffer( glkview_t object );

// Signature from Objective-C Runtime: v setDepthStencilRenderbuffer: @ : I
void 				glkview_setDepthStencilRenderbuffer( glkview_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} viewBounds @ :
CGRect 				glkview_viewBounds( glkview_t object );

// Signature from Objective-C Runtime: v setViewBounds: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setViewBounds( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: d viewContentScaleFactor @ :
double 				glkview_viewContentScaleFactor( glkview_t object );

// Signature from Objective-C Runtime: v setViewContentScaleFactor: @ : d
void 				glkview_setViewContentScaleFactor( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: q drawableWidth @ :
long long 			glkview_drawableWidth( glkview_t object );

// Signature from Objective-C Runtime: q drawableHeight @ :
long long 			glkview_drawableHeight( glkview_t object );

// Signature from Objective-C Runtime: @ mk_theme @ :
nsobject_t 			glkview_mk_theme( glkview_t object );

// Signature from Objective-C Runtime: v infoCardThemeChanged @ :
void 				glkview_infoCardThemeChanged( glkview_t object );

// Signature from Objective-C Runtime: @ tintColorOverride @ :
nsobject_t 			glkview_tintColorOverride( glkview_t object );

// Signature from Objective-C Runtime: v abSetLayoutDebuggingColor: @ : @
void 				glkview_abSetLayoutDebuggingColor( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ tintColorOverrideDarkened @ :
nsobject_t 			glkview_tintColorOverrideDarkened( glkview_t object );

// Signature from Objective-C Runtime: v setLayoutSize:withContentPriority: @ : {CGSize=dd} f
void 				glkview_setLayoutSize( glkview_t object, CGSize arg0, float arg1 );

// Signature from Objective-C Runtime: v setMinimumLayoutSize: @ : {CGSize=dd}
void 				glkview_setMinimumLayoutSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v setMaximumLayoutSize: @ : {CGSize=dd}
void 				glkview_setMaximumLayoutSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} effectiveLayoutSizeFittingSize: @ : {CGSize=dd}
CGSize 				glkview_effectiveLayoutSizeFittingSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} minimumLayoutSize @ :
CGSize 				glkview_minimumLayoutSize( glkview_t object );

// Signature from Objective-C Runtime: v setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview: @ : B
void 				glkview_setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B isLayoutSizeDependentOnPerpendicularAxis @ :
bool 				glkview_isLayoutSizeDependentOnPerpendicularAxis( glkview_t object );

// Signature from Objective-C Runtime: d effectiveBaselineOffsetFromBottom @ :
double 				glkview_effectiveBaselineOffsetFromBottom( glkview_t object );

// Signature from Objective-C Runtime: d effectiveFirstBaselineOffsetFromTop @ :
double 				glkview_effectiveFirstBaselineOffsetFromTop( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} calculateLayoutSizeFittingSize: @ : {CGSize=dd}
CGSize 				glkview_calculateLayoutSizeFittingSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v setNeverCacheEffectiveLayoutSize: @ : B
void 				glkview_setNeverCacheEffectiveLayoutSize( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B neverCacheEffectiveLayoutSize @ :
bool 				glkview_neverCacheEffectiveLayoutSize( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} maximumLayoutSize @ :
CGSize 				glkview_maximumLayoutSize( glkview_t object );

// Signature from Objective-C Runtime: v setCustomAlignmentRectInsets: @ : {UIEdgeInsets=dddd}
void 				glkview_setCustomAlignmentRectInsets( glkview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} customAlignmentRectInsets @ :
UIEdgeInsets 		glkview_customAlignmentRectInsets( glkview_t object );

// Signature from Objective-C Runtime: v setCustomBaselineOffsetFromBottom: @ : d
void 				glkview_setCustomBaselineOffsetFromBottom( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: d customBaselineOffsetFromBottom @ :
double 				glkview_customBaselineOffsetFromBottom( glkview_t object );

// Signature from Objective-C Runtime: v setCustomFirstBaselineOffsetFromTop: @ : d
void 				glkview_setCustomFirstBaselineOffsetFromTop( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: d customFirstBaselineOffsetFromTop @ :
double 				glkview_customFirstBaselineOffsetFromTop( glkview_t object );

// Signature from Objective-C Runtime: B invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview @ :
bool 				glkview_invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview( glkview_t object );

// Signature from Objective-C Runtime: v setUntransformedFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setUntransformedFrame( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v nukeContentLayoutSizeCacheFromOrbit @ :
void 				glkview_nukeContentLayoutSizeCacheFromOrbit( glkview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} effectiveAlignmentRectInsets @ :
UIEdgeInsets 		glkview_effectiveAlignmentRectInsets( glkview_t object );

// Signature from Objective-C Runtime: v setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached @ :
void 				glkview_setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached( glkview_t object );

// Signature from Objective-C Runtime: d effectiveScreenScale @ :
double 				glkview_effectiveScreenScale( glkview_t object );

// Signature from Objective-C Runtime: d effectiveBaselineOffsetFromContentBottom @ :
double 				glkview_effectiveBaselineOffsetFromContentBottom( glkview_t object );

// Signature from Objective-C Runtime: d effectiveFirstBaselineOffsetFromContentTop @ :
double 				glkview_effectiveFirstBaselineOffsetFromContentTop( glkview_t object );

// Signature from Objective-C Runtime: d systemSpacingToAdjecentSiblingView:axis:baselineRelative:multiplier: @ : @ q B d
double 				glkview_systemSpacingToAdjecentSiblingView( glkview_t object, nsobject_t arg0, long long arg1, bool arg2, double arg3 );

// Signature from Objective-C Runtime: d systemSpacingToSuperView:edge:baselineRelative:multiplier: @ : @ Q B d
double 				glkview_systemSpacingToSuperView( glkview_t object, nsobject_t arg0, unsigned long long arg1, bool arg2, double arg3 );

// Signature from Objective-C Runtime: @ debugSizeCache @ :
nsobject_t 			glkview_debugSizeCache( glkview_t object );

// Signature from Objective-C Runtime: B canUseFastLayoutSizeCalulation @ :
bool 				glkview_canUseFastLayoutSizeCalulation( glkview_t object );

// Signature from Objective-C Runtime: @ contentLayoutSizeCacheDescription @ :
nsobject_t 			glkview_contentLayoutSizeCacheDescription( glkview_t object );

// Signature from Objective-C Runtime: @ debugSizeCacheDict @ :
nsobject_t 			glkview_debugSizeCacheDict( glkview_t object );

// Signature from Objective-C Runtime: @ ob_pinToEdgesConstraints: @ : @
nsobject_t 			glkview_ob_pinToEdgesConstraints( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v ob_pinToEdges: @ : @
void 				glkview_ob_pinToEdges( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v tlk_updateForAppearance: @ : @
void 				glkview_tlk_updateForAppearance( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v tlk_updateWithCurrentAppearance @ :
void 				glkview_tlk_updateWithCurrentAppearance( glkview_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	glkview_retainCount( glkview_t object );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			glkview_retain( glkview_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			glkview_autorelease( glkview_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			glkview_description( glkview_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			glkview_init( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} size @ :
CGSize 				glkview_size( glkview_t object );

// Signature from Objective-C Runtime: B isHidden @ :
bool 				glkview_isHidden( glkview_t object );

// Signature from Objective-C Runtime: v setHidden: @ : B
void 				glkview_setHidden( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				glkview_setValue( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setEnabled: @ : B
void 				glkview_setEnabled( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: {CGAffineTransform=dddddd} transform @ :
CGAffineTransform 	glkview_transform( glkview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} position @ :
CGPoint 			glkview_position( glkview_t object );

// Signature from Objective-C Runtime: v setPosition: @ : {CGPoint=dd}
void 				glkview_setPosition( glkview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: B isEnabled @ :
bool 				glkview_isEnabled( glkview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} extent @ :
CGRect 				glkview_extent( glkview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} bounds @ :
CGRect 				glkview_bounds( glkview_t object );

// Signature from Objective-C Runtime: d alpha @ :
double 				glkview_alpha( glkview_t object );

// Signature from Objective-C Runtime: B isOpaque @ :
bool 				glkview_isOpaque( glkview_t object );

// Signature from Objective-C Runtime: v setBounds: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setBounds( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} origin @ :
CGPoint 			glkview_origin( glkview_t object );

// Signature from Objective-C Runtime: v setSize: @ : {CGSize=dd}
void 				glkview_setSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} frame @ :
CGRect 				glkview_frame( glkview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} center @ :
CGPoint 			glkview_center( glkview_t object );

// Signature from Objective-C Runtime: v setCenter: @ : {CGPoint=dd}
void 				glkview_setCenter( glkview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setTransform: @ : {CGAffineTransform=dddddd}
void 				glkview_setTransform( glkview_t object, CGAffineTransform arg0 );

// Signature from Objective-C Runtime: @ interactions @ :
nsobject_t 			glkview_interactions( glkview_t object );

// Signature from Objective-C Runtime: v setInteractions: @ : @
void 				glkview_setInteractions( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q contentMode @ :
long long 			glkview_contentMode( glkview_t object );

// Signature from Objective-C Runtime: @ constraints @ :
nsobject_t 			glkview_constraints( glkview_t object );

// Signature from Objective-C Runtime: q tag @ :
long long 			glkview_tag( glkview_t object );

// Signature from Objective-C Runtime: v setOpaque: @ : B
void 				glkview_setOpaque( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setNeedsLayout @ :
void 				glkview_setNeedsLayout( glkview_t object );

// Signature from Objective-C Runtime: @ superview @ :
nsobject_t 			glkview_superview( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} convertSize:toView: @ : {CGSize=dd} @
CGSize 				glkview_convertSize( glkview_t object, CGSize arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setFrameOrigin: @ : {CGPoint=dd}
void 				glkview_setFrameOrigin( glkview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRect:fromView: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
CGRect 				glkview_convertRect( glkview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d contentScaleFactor @ :
double 				glkview_contentScaleFactor( glkview_t object );

// Signature from Objective-C Runtime: @ initWithSize: @ : {CGSize=dd}
nsobject_t 			glkview_initWithSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B needsDisplay @ :
bool 				glkview_needsDisplay( glkview_t object );

// Signature from Objective-C Runtime: @ backgroundColor @ :
nsobject_t 			glkview_backgroundColor( glkview_t object );

// Signature from Objective-C Runtime: v setBackgroundColor: @ : @
void 				glkview_setBackgroundColor( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplayInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setNeedsDisplayInRect( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v removeFromSuperview @ :
void 				glkview_removeFromSuperview( glkview_t object );

// Signature from Objective-C Runtime: v setFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setFrame( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v addSubview: @ : @
void 				glkview_addSubview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} intrinsicContentSize @ :
CGSize 				glkview_intrinsicContentSize( glkview_t object );

// Signature from Objective-C Runtime: v addInteraction: @ : @
void 				glkview_addInteraction( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ traitCollection @ :
nsobject_t 			glkview_traitCollection( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} sizeThatFits: @ : {CGSize=dd}
CGSize 				glkview_sizeThatFits( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} safeAreaInsets @ :
UIEdgeInsets 		glkview_safeAreaInsets( glkview_t object );

// Signature from Objective-C Runtime: v setTranslatesAutoresizingMaskIntoConstraints: @ : B
void 				glkview_setTranslatesAutoresizingMaskIntoConstraints( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ layer @ :
nsobject_t 			glkview_layer( glkview_t object );

// Signature from Objective-C Runtime: @ centerXAnchor @ :
nsobject_t 			glkview_centerXAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ widthAnchor @ :
nsobject_t 			glkview_widthAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ heightAnchor @ :
nsobject_t 			glkview_heightAnchor( glkview_t object );

// Signature from Objective-C Runtime: v setContentHuggingPriority:forAxis: @ : f q
void 				glkview_setContentHuggingPriority( glkview_t object, float arg0, long long arg1 );

// Signature from Objective-C Runtime: v setContentCompressionResistancePriority:forAxis: @ : f q
void 				glkview_setContentCompressionResistancePriority( glkview_t object, float arg0, long long arg1 );

// Signature from Objective-C Runtime: v addLayoutGuide: @ : @
void 				glkview_addLayoutGuide( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ topAnchor @ :
nsobject_t 			glkview_topAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ bottomAnchor @ :
nsobject_t 			glkview_bottomAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ leadingAnchor @ :
nsobject_t 			glkview_leadingAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ trailingAnchor @ :
nsobject_t 			glkview_trailingAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ centerYAnchor @ :
nsobject_t 			glkview_centerYAnchor( glkview_t object );

// Signature from Objective-C Runtime: v layoutIfNeeded @ :
void 				glkview_layoutIfNeeded( glkview_t object );

// Signature from Objective-C Runtime: v traitCollectionDidChange: @ : @
void 				glkview_traitCollectionDidChange( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isHiddenOrHasHiddenAncestor @ :
bool 				glkview_isHiddenOrHasHiddenAncestor( glkview_t object );

// Signature from Objective-C Runtime: @ window @ :
nsobject_t 			glkview_window( glkview_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				glkview_isAccessibilityElementByDefault( glkview_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				glkview_isElementAccessibilityExposedToInterfaceBuilder( glkview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPoint:toView: @ : {CGPoint=dd} @
CGPoint 			glkview_convertPoint( glkview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAccessibilityIgnoresInvertColors: @ : B
void 				glkview_setAccessibilityIgnoresInvertColors( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B accessibilityIgnoresInvertColors @ :
bool 				glkview_accessibilityIgnoresInvertColors( glkview_t object );

// Signature from Objective-C Runtime: v accessibilityUnapplyInvertFilter @ :
void 				glkview_accessibilityUnapplyInvertFilter( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityInvertFilterApplied @ :
bool 				glkview_accessibilityInvertFilterApplied( glkview_t object );

// Signature from Objective-C Runtime: v accessibilityApplyInvertFilter @ :
void 				glkview_accessibilityApplyInvertFilter( glkview_t object );

// Signature from Objective-C Runtime: @ gestureRecognizers @ :
nsobject_t 			glkview_gestureRecognizers( glkview_t object );

// Signature from Objective-C Runtime: v updateFocusIfNeeded @ :
void 				glkview_updateFocusIfNeeded( glkview_t object );

// Signature from Objective-C Runtime: @ coordinateSpace @ :
nsobject_t 			glkview_coordinateSpace( glkview_t object );

// Signature from Objective-C Runtime: v setNeedsFocusUpdate @ :
void 				glkview_setNeedsFocusUpdate( glkview_t object );

// Signature from Objective-C Runtime: B shouldUpdateFocusInContext: @ : @
bool 				glkview_shouldUpdateFocusInContext( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didUpdateFocusInContext:withAnimationCoordinator: @ : @ @
void 				glkview_didUpdateFocusInContext( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ preferredFocusEnvironments @ :
nsobject_t 			glkview_preferredFocusEnvironments( glkview_t object );

// Signature from Objective-C Runtime: @ parentFocusEnvironment @ :
nsobject_t 			glkview_parentFocusEnvironment( glkview_t object );

// Signature from Objective-C Runtime: @ focusItemContainer @ :
nsobject_t 			glkview_focusItemContainer( glkview_t object );

// Signature from Objective-C Runtime: @ preferredFocusedView @ :
nsobject_t 			glkview_preferredFocusedView( glkview_t object );

// Signature from Objective-C Runtime: @ focusGroupIdentifier @ :
nsobject_t 			glkview_focusGroupIdentifier( glkview_t object );

// Signature from Objective-C Runtime: B areChildrenFocused @ :
bool 				glkview_areChildrenFocused( glkview_t object );

// Signature from Objective-C Runtime: v setAreChildrenFocused: @ : B
void 				glkview_setAreChildrenFocused( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B canBecomeFocused @ :
bool 				glkview_canBecomeFocused( glkview_t object );

// Signature from Objective-C Runtime: @ focusEffect @ :
nsobject_t 			glkview_focusEffect( glkview_t object );

// Signature from Objective-C Runtime: q focusGroupPriority @ :
long long 			glkview_focusGroupPriority( glkview_t object );

// Signature from Objective-C Runtime: B isTransparentFocusItem @ :
bool 				glkview_isTransparentFocusItem( glkview_t object );

// Signature from Objective-C Runtime: @ focusItemsInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			glkview_focusItemsInRect( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ nextResponder @ :
nsobject_t 			glkview_nextResponder( glkview_t object );

// Signature from Objective-C Runtime: v addGestureRecognizer: @ : @
void 				glkview_addGestureRecognizer( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeGestureRecognizer: @ : @
void 				glkview_removeGestureRecognizer( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B gestureRecognizerShouldBegin: @ : @
bool 				glkview_gestureRecognizerShouldBegin( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAutoresizingMask: @ : Q
void 				glkview_setAutoresizingMask( glkview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setUserInteractionEnabled: @ : B
void 				glkview_setUserInteractionEnabled( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ largeContentTitle @ :
nsobject_t 			glkview_largeContentTitle( glkview_t object );

// Signature from Objective-C Runtime: @ largeContentImage @ :
nsobject_t 			glkview_largeContentImage( glkview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} largeContentImageInsets @ :
UIEdgeInsets 		glkview_largeContentImageInsets( glkview_t object );

// Signature from Objective-C Runtime: B scalesLargeContentImage @ :
bool 				glkview_scalesLargeContentImage( glkview_t object );

// Signature from Objective-C Runtime: v setClipsToBounds: @ : B
void 				glkview_setClipsToBounds( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setContentMode: @ : q
void 				glkview_setContentMode( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAlpha: @ : d
void 				glkview_setAlpha( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: v sizeToFit @ :
void 				glkview_sizeToFit( glkview_t object );

// Signature from Objective-C Runtime: B becomeFirstResponder @ :
bool 				glkview_becomeFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: v addConstraints: @ : @
void 				glkview_addConstraints( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ tintColor @ :
nsobject_t 			glkview_tintColor( glkview_t object );

// Signature from Objective-C Runtime: v setTintColor: @ : @
void 				glkview_setTintColor( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isFocused @ :
bool 				glkview_isFocused( glkview_t object );

// Signature from Objective-C Runtime: v setLayoutMargins: @ : {UIEdgeInsets=dddd}
void 				glkview_setLayoutMargins( glkview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: q tintAdjustmentMode @ :
long long 			glkview_tintAdjustmentMode( glkview_t object );

// Signature from Objective-C Runtime: v setTintAdjustmentMode: @ : q
void 				glkview_setTintAdjustmentMode( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ motionEffects @ :
nsobject_t 			glkview_motionEffects( glkview_t object );

// Signature from Objective-C Runtime: v addMotionEffect: @ : @
void 				glkview_addMotionEffect( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeMotionEffect: @ : @
void 				glkview_removeMotionEffect( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setMotionEffects: @ : @
void 				glkview_setMotionEffects( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ rightAnchor @ :
nsobject_t 			glkview_rightAnchor( glkview_t object );

// Signature from Objective-C Runtime: v setSemanticContentAttribute: @ : q
void 				glkview_setSemanticContentAttribute( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} alignmentRectInsets @ :
UIEdgeInsets 		glkview_alignmentRectInsets( glkview_t object );

// Signature from Objective-C Runtime: v setNeedsUpdateConstraints @ :
void 				glkview_setNeedsUpdateConstraints( glkview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} layoutMargins @ :
UIEdgeInsets 		glkview_layoutMargins( glkview_t object );

// Signature from Objective-C Runtime: v updateConstraintsIfNeeded @ :
void 				glkview_updateConstraintsIfNeeded( glkview_t object );

// Signature from Objective-C Runtime: @ subviews @ :
nsobject_t 			glkview_subviews( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} systemLayoutSizeFittingSize: @ : {CGSize=dd}
CGSize 				glkview_systemLayoutSizeFittingSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v updateConstraints @ :
void 				glkview_updateConstraints( glkview_t object );

// Signature from Objective-C Runtime: v sendSubviewToBack: @ : @
void 				glkview_sendSubviewToBack( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B pointInside:withEvent: @ : {CGPoint=dd} @
bool 				glkview_pointInside( glkview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v invalidateIntrinsicContentSize @ :
void 				glkview_invalidateIntrinsicContentSize( glkview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds @ :
CGRect 				glkview_visibleBounds( glkview_t object );

// Signature from Objective-C Runtime: B isDescendantOfView: @ : @
bool 				glkview_isDescendantOfView( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v tintColorDidChange @ :
void 				glkview_tintColorDidChange( glkview_t object );

// Signature from Objective-C Runtime: @ viewForFirstBaselineLayout @ :
nsobject_t 			glkview_viewForFirstBaselineLayout( glkview_t object );

// Signature from Objective-C Runtime: @ viewForLastBaselineLayout @ :
nsobject_t 			glkview_viewForLastBaselineLayout( glkview_t object );

// Signature from Objective-C Runtime: v setFocusEffect: @ : @
void 				glkview_setFocusEffect( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v layoutMarginsDidChange @ :
void 				glkview_layoutMarginsDidChange( glkview_t object );

// Signature from Objective-C Runtime: v removeInteraction: @ : @
void 				glkview_removeInteraction( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B preservesSuperviewLayoutMargins @ :
bool 				glkview_preservesSuperviewLayoutMargins( glkview_t object );

// Signature from Objective-C Runtime: v setPreservesSuperviewLayoutMargins: @ : B
void 				glkview_setPreservesSuperviewLayoutMargins( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v layoutBelowIfNeeded @ :
void 				glkview_layoutBelowIfNeeded( glkview_t object );

// Signature from Objective-C Runtime: v insertSubview:atIndex: @ : @ q
void 				glkview_insertSubview( glkview_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ layoutMarginsGuide @ :
nsobject_t 			glkview_layoutMarginsGuide( glkview_t object );

// Signature from Objective-C Runtime: @ lastBaselineAnchor @ :
nsobject_t 			glkview_lastBaselineAnchor( glkview_t object );

// Signature from Objective-C Runtime: v setEdgesInsettingLayoutMarginsFromSafeArea: @ : Q
void 				glkview_setEdgesInsettingLayoutMarginsFromSafeArea( glkview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v layoutSublayersOfLayer: @ : @
void 				glkview_layoutSublayersOfLayer( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDirectionalLayoutMargins: @ : {NSDirectionalEdgeInsets=dddd}
void 				glkview_setDirectionalLayoutMargins( glkview_t object, NSDirectionalEdgeInsets arg0 );

// Signature from Objective-C Runtime: v addConstraint: @ : @
void 				glkview_addConstraint( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAllowsGroupOpacity: @ : B
void 				glkview_setAllowsGroupOpacity( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B translatesAutoresizingMaskIntoConstraints @ :
bool 				glkview_translatesAutoresizingMaskIntoConstraints( glkview_t object );

// Signature from Objective-C Runtime: Q autoresizingMask @ :
unsigned long long 	glkview_autoresizingMask( glkview_t object );

// Signature from Objective-C Runtime: B containsView: @ : @
bool 				glkview_containsView( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyboardSceneDelegate @ :
nsobject_t 			glkview_keyboardSceneDelegate( glkview_t object );

// Signature from Objective-C Runtime: @ hitTest:withEvent: @ : {CGPoint=dd} @
nsobject_t 			glkview_hitTest( glkview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ leftAnchor @ :
nsobject_t 			glkview_leftAnchor( glkview_t object );

// Signature from Objective-C Runtime: @ safeAreaLayoutGuide @ :
nsobject_t 			glkview_safeAreaLayoutGuide( glkview_t object );

// Signature from Objective-C Runtime: v setExclusiveTouch: @ : B
void 				glkview_setExclusiveTouch( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v removeConstraint: @ : @
void 				glkview_removeConstraint( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ firstBaselineAnchor @ :
nsobject_t 			glkview_firstBaselineAnchor( glkview_t object );

// Signature from Objective-C Runtime: v removeConstraints: @ : @
void 				glkview_removeConstraints( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B allowsGroupOpacity @ :
bool 				glkview_allowsGroupOpacity( glkview_t object );

// Signature from Objective-C Runtime: v safeAreaInsetsDidChange @ :
void 				glkview_safeAreaInsetsDidChange( glkview_t object );

// Signature from Objective-C Runtime: v didMoveToSuperview @ :
void 				glkview_didMoveToSuperview( glkview_t object );

// Signature from Objective-C Runtime: v didMoveToWindow @ :
void 				glkview_didMoveToWindow( glkview_t object );

// Signature from Objective-C Runtime: B isUserInteractionEnabled @ :
bool 				glkview_isUserInteractionEnabled( glkview_t object );

// Signature from Objective-C Runtime: v addAnimation:forKey: @ : @ @
void 				glkview_addAnimation( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v drawLayer:inContext: @ : @ ^{CGContext=}
void 				glkview_drawLayer( glkview_t object, nsobject_t arg0, CGContext* arg1 );

// Signature from Objective-C Runtime: v layerWillDraw: @ : @
void 				glkview_layerWillDraw( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ actionForLayer:forKey: @ : @ @
nsobject_t 			glkview_actionForLayer( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAllowsGroupBlending: @ : B
void 				glkview_setAllowsGroupBlending( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplay @ :
void 				glkview_setNeedsDisplay( glkview_t object );

// Signature from Objective-C Runtime: v exchangeSubviewAtIndex:withSubviewAtIndex: @ : q q
void 				glkview_exchangeSubviewAtIndex( glkview_t object, long long arg0, long long arg1 );

// Signature from Objective-C Runtime: v bringSubviewToFront: @ : @
void 				glkview_bringSubviewToFront( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ textInputView @ :
nsobject_t 			glkview_textInputView( glkview_t object );

// Signature from Objective-C Runtime: {NSDirectionalEdgeInsets=dddd} directionalLayoutMargins @ :
NSDirectionalEdgeInsets glkview_directionalLayoutMargins( glkview_t object );

// Signature from Objective-C Runtime: v setEdgesPreservingSuperviewLayoutMargins: @ : Q
void 				glkview_setEdgesPreservingSuperviewLayoutMargins( glkview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} alignmentRectForFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				glkview_alignmentRectForFrame( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v drawRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_drawRect( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: B allowsGroupBlending @ :
bool 				glkview_allowsGroupBlending( glkview_t object );

// Signature from Objective-C Runtime: v didAddSubview: @ : @
void 				glkview_didAddSubview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willRemoveSubview: @ : @
void 				glkview_willRemoveSubview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B drawViewHierarchyInRect:afterScreenUpdates: @ : {CGRect={CGPoint=dd}{CGSize=dd}} B
bool 				glkview_drawViewHierarchyInRect( glkview_t object, CGRect arg0, bool arg1 );

// Signature from Objective-C Runtime: B clipsToBounds @ :
bool 				glkview_clipsToBounds( glkview_t object );

// Signature from Objective-C Runtime: @ minimumContentSizeCategory @ :
nsobject_t 			glkview_minimumContentSizeCategory( glkview_t object );

// Signature from Objective-C Runtime: v setMinimumContentSizeCategory: @ : @
void 				glkview_setMinimumContentSizeCategory( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ maximumContentSizeCategory @ :
nsobject_t 			glkview_maximumContentSizeCategory( glkview_t object );

// Signature from Objective-C Runtime: v setMaximumContentSizeCategory: @ : @
void 				glkview_setMaximumContentSizeCategory( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ appliedContentSizeCategoryLimitsDescription @ :
nsobject_t 			glkview_appliedContentSizeCategoryLimitsDescription( glkview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} hitTestInsets @ :
UIEdgeInsets 		glkview_hitTestInsets( glkview_t object );

// Signature from Objective-C Runtime: v setHitTestInsets: @ : {UIEdgeInsets=dddd}
void 				glkview_setHitTestInsets( glkview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: {NSDirectionalEdgeInsets=dddd} hitTestDirectionalInsets @ :
NSDirectionalEdgeInsets glkview_hitTestDirectionalInsets( glkview_t object );

// Signature from Objective-C Runtime: v setHitTestDirectionalInsets: @ : {NSDirectionalEdgeInsets=dddd}
void 				glkview_setHitTestDirectionalInsets( glkview_t object, NSDirectionalEdgeInsets arg0 );

// Signature from Objective-C Runtime: v removeLayoutGuide: @ : @
void 				glkview_removeLayoutGuide( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willMoveToSuperview: @ : @
void 				glkview_willMoveToSuperview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willMoveToWindow: @ : @
void 				glkview_willMoveToWindow( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setCompositingMode: @ : q
void 				glkview_setCompositingMode( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: q effectiveUserInterfaceLayoutDirection @ :
long long 			glkview_effectiveUserInterfaceLayoutDirection( glkview_t object );

// Signature from Objective-C Runtime: v setAutoresizesSubviews: @ : B
void 				glkview_setAutoresizesSubviews( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: f contentCompressionResistancePriorityForAxis: @ : q
float 				glkview_contentCompressionResistancePriorityForAxis( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} frameForAlignmentRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				glkview_frameForAlignmentRect( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setTag: @ : q
void 				glkview_setTag( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: q semanticContentAttribute @ :
long long 			glkview_semanticContentAttribute( glkview_t object );

// Signature from Objective-C Runtime: v setCharge: @ : f
void 				glkview_setCharge( glkview_t object, float arg0 );

// Signature from Objective-C Runtime: v setInsetsLayoutMarginsFromSafeArea: @ : B
void 				glkview_setInsetsLayoutMarginsFromSafeArea( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ snapshotViewAfterScreenUpdates: @ : B
nsobject_t 			glkview_snapshotViewAfterScreenUpdates( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: f contentHuggingPriorityForAxis: @ : q
float 				glkview_contentHuggingPriorityForAxis( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: B insetsLayoutMarginsFromSafeArea @ :
bool 				glkview_insetsLayoutMarginsFromSafeArea( glkview_t object );

// Signature from Objective-C Runtime: v setFocusGroupIdentifier: @ : @
void 				glkview_setFocusGroupIdentifier( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setLargeContentTitle: @ : @
void 				glkview_setLargeContentTitle( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShowsLargeContentViewer: @ : B
void 				glkview_setShowsLargeContentViewer( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ recursiveDescription @ :
nsobject_t 			glkview_recursiveDescription( glkview_t object );

// Signature from Objective-C Runtime: v setMultipleTouchEnabled: @ : B
void 				glkview_setMultipleTouchEnabled( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v forceDisplayIfNeeded @ :
void 				glkview_forceDisplayIfNeeded( glkview_t object );

// Signature from Objective-C Runtime: {CATransform3D=dddddddddddddddd} transform3D @ :
CATransform3D 		glkview_transform3D( glkview_t object );

// Signature from Objective-C Runtime: v setTransform3D: @ : {CATransform3D=dddddddddddddddd}
void 				glkview_setTransform3D( glkview_t object, CATransform3D arg0 );

// Signature from Objective-C Runtime: @ readableContentGuide @ :
nsobject_t 			glkview_readableContentGuide( glkview_t object );

// Signature from Objective-C Runtime: v setSafeAreaInsets: @ : {UIEdgeInsets=dddd}
void 				glkview_setSafeAreaInsets( glkview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: Q edgesInsettingLayoutMarginsFromSafeArea @ :
unsigned long long 	glkview_edgesInsettingLayoutMarginsFromSafeArea( glkview_t object );

// Signature from Objective-C Runtime: B layoutMarginsFollowReadableWidth @ :
bool 				glkview_layoutMarginsFollowReadableWidth( glkview_t object );

// Signature from Objective-C Runtime: v setLayoutMarginsFollowReadableWidth: @ : B
void 				glkview_setLayoutMarginsFollowReadableWidth( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B needsUpdateConstraints @ :
bool 				glkview_needsUpdateConstraints( glkview_t object );

// Signature from Objective-C Runtime: @ viewWithTag: @ : q
nsobject_t 			glkview_viewWithTag( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: B endEditing: @ : B
bool 				glkview_endEditing( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setOrigin: @ : {CGPoint=dd}
void 				glkview_setOrigin( glkview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setMaskView: @ : @
void 				glkview_setMaskView( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDeliversTouchesForGesturesToSuperview: @ : B
void 				glkview_setDeliversTouchesForGesturesToSuperview( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B autoresizesSubviews @ :
bool 				glkview_autoresizesSubviews( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_superitem @ :
nsobject_t 			glkview_nsli_superitem( glkview_t object );

// Signature from Objective-C Runtime: q overrideUserInterfaceStyle @ :
long long 			glkview_overrideUserInterfaceStyle( glkview_t object );

// Signature from Objective-C Runtime: v setOverrideUserInterfaceStyle: @ : q
void 				glkview_setOverrideUserInterfaceStyle( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ layoutGuides @ :
nsobject_t 			glkview_layoutGuides( glkview_t object );

// Signature from Objective-C Runtime: @ resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets: @ : {CGRect={CGPoint=dd}{CGSize=dd}} B {UIEdgeInsets=dddd}
nsobject_t 			glkview_resizableSnapshotViewFromRect( glkview_t object, CGRect arg0, bool arg1, UIEdgeInsets arg2 );

// Signature from Objective-C Runtime: v updateUserActivityState: @ : @
void 				glkview_updateUserActivityState( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreUserActivityState: @ : @
void 				glkview_restoreUserActivityState( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplayOnBoundsChange: @ : B
void 				glkview_setNeedsDisplayOnBoundsChange( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B needsDisplayOnBoundsChange @ :
bool 				glkview_needsDisplayOnBoundsChange( glkview_t object );

// Signature from Objective-C Runtime: @ snapshotView @ :
nsobject_t 			glkview_snapshotView( glkview_t object );

// Signature from Objective-C Runtime: B clearsContextBeforeDrawing @ :
bool 				glkview_clearsContextBeforeDrawing( glkview_t object );

// Signature from Objective-C Runtime: B cancelTouchTracking @ :
bool 				glkview_cancelTouchTracking( glkview_t object );

// Signature from Objective-C Runtime: B cancelMouseTracking @ :
bool 				glkview_cancelMouseTracking( glkview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} hitRect @ :
CGRect 				glkview_hitRect( glkview_t object );

// Signature from Objective-C Runtime: v setClipsSubviews: @ : B
void 				glkview_setClipsSubviews( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: B useBlockyMagnificationInClassic @ :
bool 				glkview_useBlockyMagnificationInClassic( glkview_t object );

// Signature from Objective-C Runtime: f charge @ :
float 				glkview_charge( glkview_t object );

// Signature from Objective-C Runtime: @ inputResponderController @ :
nsobject_t 			glkview_inputResponderController( glkview_t object );

// Signature from Objective-C Runtime: B showsLargeContentViewer @ :
bool 				glkview_showsLargeContentViewer( glkview_t object );

// Signature from Objective-C Runtime: v setLargeContentImage: @ : @
void 				glkview_setLargeContentImage( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setScalesLargeContentImage: @ : B
void 				glkview_setScalesLargeContentImage( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setLargeContentImageInsets: @ : {UIEdgeInsets=dddd}
void 				glkview_setLargeContentImageInsets( glkview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} frameOrigin @ :
CGPoint 			glkview_frameOrigin( glkview_t object );

// Signature from Objective-C Runtime: i textEffectsVisibilityLevel @ :
int 				glkview_textEffectsVisibilityLevel( glkview_t object );

// Signature from Objective-C Runtime: @ gestureParent @ :
nsobject_t 			glkview_gestureParent( glkview_t object );

// Signature from Objective-C Runtime: @ maskView @ :
nsobject_t 			glkview_maskView( glkview_t object );

// Signature from Objective-C Runtime: @ focusGuides @ :
nsobject_t 			glkview_focusGuides( glkview_t object );

// Signature from Objective-C Runtime: v reduceWidth: @ : d
void 				glkview_reduceWidth( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: i textEffectsVisibilityLevelInKeyboardWindow @ :
int 				glkview_textEffectsVisibilityLevelInKeyboardWindow( glkview_t object );

// Signature from Objective-C Runtime: v recursivelyForceDisplayIfNeeded @ :
void 				glkview_recursivelyForceDisplayIfNeeded( glkview_t object );

// Signature from Objective-C Runtime: v constraintsDidChangeInEngine: @ : @
void 				glkview_constraintsDidChangeInEngine( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v resizeSubviewsWithOldSize: @ : {CGSize=dd}
void 				glkview_resizeSubviewsWithOldSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: @ viewPrintFormatter @ :
nsobject_t 			glkview_viewPrintFormatter( glkview_t object );

// Signature from Objective-C Runtime: B deliversButtonsForGesturesToSuperview @ :
bool 				glkview_deliversButtonsForGesturesToSuperview( glkview_t object );

// Signature from Objective-C Runtime: v setGestureRecognizers: @ : @
void 				glkview_setGestureRecognizers( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B deliversTouchesForGesturesToSuperview @ :
bool 				glkview_deliversTouchesForGesturesToSuperview( glkview_t object );

// Signature from Objective-C Runtime: B isMultipleTouchEnabled @ :
bool 				glkview_isMultipleTouchEnabled( glkview_t object );

// Signature from Objective-C Runtime: v movedToSuperview: @ : @
void 				glkview_movedToSuperview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v set_ui_frame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_set_ui_frame( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v set_ui_usesManualLayout: @ : B
void 				glkview_set_ui_usesManualLayout( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: q compareTextEffectsOrdering: @ : @
long long 			glkview_compareTextEffectsOrdering( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v interactionTintColorDidChange @ :
void 				glkview_interactionTintColorDidChange( glkview_t object );

// Signature from Objective-C Runtime: @ viewForBaselineLayout @ :
nsobject_t 			glkview_viewForBaselineLayout( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_engineToUserScalingCoefficients @ :
CGSize 				glkview_nsli_engineToUserScalingCoefficients( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_minYVariable @ :
nsobject_t 			glkview_nsli_minYVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_boundsHeightVariable @ :
nsobject_t 			glkview_nsli_boundsHeightVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_boundsWidthVariable @ :
nsobject_t 			glkview_nsli_boundsWidthVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_minXVariable @ :
nsobject_t 			glkview_nsli_minXVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_contentHeightVariable @ :
nsobject_t 			glkview_nsli_contentHeightVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_contentWidthVariable @ :
nsobject_t 			glkview_nsli_contentWidthVariable( glkview_t object );

// Signature from Objective-C Runtime: v exerciseAmbiguityInLayout @ :
void 				glkview_exerciseAmbiguityInLayout( glkview_t object );

// Signature from Objective-C Runtime: B hasAmbiguousLayout @ :
bool 				glkview_hasAmbiguousLayout( glkview_t object );

// Signature from Objective-C Runtime: v nsli_addConstraint: @ : @
void 				glkview_nsli_addConstraint( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nsli_layoutMarginsItem @ :
nsobject_t 			glkview_nsli_layoutMarginsItem( glkview_t object );

// Signature from Objective-C Runtime: B nsli_removeConstraint: @ : @
bool 				glkview_nsli_removeConstraint( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ constraintsAffectingLayoutForAxis: @ : q
nsobject_t 			glkview_constraintsAffectingLayoutForAxis( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nsli_layoutEngine @ :
nsobject_t 			glkview_nsli_layoutEngine( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_installedConstraints @ :
nsobject_t 			glkview_nsli_installedConstraints( glkview_t object );

// Signature from Objective-C Runtime: d nsli_marginOffsetForAttribute: @ : q
double 				glkview_nsli_marginOffsetForAttribute( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nsli_description @ :
nsobject_t 			glkview_nsli_description( glkview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_engineToUserScalingCoefficientsInEngine: @ : @
CGSize 				glkview_nsli_engineToUserScalingCoefficientsInEngine( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsli_lowerAttribute:intoExpression:withCoefficient:forConstraint:onBehalfOfLayoutGuide: @ : i @ d @ @
bool 				glkview_nsli_lowerAttribute( glkview_t object, int arg0, nsobject_t arg1, double arg2, nsobject_t arg3, nsobject_t arg4 );

// Signature from Objective-C Runtime: @ nsli_contentXOffsetVariable @ :
nsobject_t 			glkview_nsli_contentXOffsetVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_contentYOffsetVariable @ :
nsobject_t 			glkview_nsli_contentYOffsetVariable( glkview_t object );

// Signature from Objective-C Runtime: B nsli_defaultResolvedValue:forSymbolicConstant:inConstraint:error: @ : ^d @ @ ^@
bool 				glkview_nsli_defaultResolvedValue( glkview_t object, double* arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v nsis_valueOfVariable:didChangeInEngine: @ : @ @
void 				glkview_nsis_valueOfVariable( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ nsis_descriptionOfVariable: @ : @
nsobject_t 			glkview_nsis_descriptionOfVariable( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i nsis_orientationHintForVariable: @ : @
int 				glkview_nsis_orientationHintForVariable( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsis_shouldIntegralizeVariable: @ : @
bool 				glkview_nsis_shouldIntegralizeVariable( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsis_valueOfVariableIsUserObservable: @ : @
bool 				glkview_nsis_valueOfVariableIsUserObservable( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_convertSizeToEngineSpace: @ : {CGSize=dd}
CGSize 				glkview_nsli_convertSizeToEngineSpace( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_convertSizeFromEngineSpace: @ : {CGSize=dd}
CGSize 				glkview_nsli_convertSizeFromEngineSpace( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B nsli_resolvedValue:forSymbolicConstant:inConstraint:error: @ : ^d @ @ ^@
bool 				glkview_nsli_resolvedValue( glkview_t object, double* arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: B nsli_descriptionIncludesPointer @ :
bool 				glkview_nsli_descriptionIncludesPointer( glkview_t object );

// Signature from Objective-C Runtime: Q nsli_autoresizingMask @ :
unsigned long long 	glkview_nsli_autoresizingMask( glkview_t object );

// Signature from Objective-C Runtime: B nsli_isFlipped @ :
bool 				glkview_nsli_isFlipped( glkview_t object );

// Signature from Objective-C Runtime: B nsli_isCollectingConstraintChangesForLaterCoordinatedFlush: @ : @
bool 				glkview_nsli_isCollectingConstraintChangesForLaterCoordinatedFlush( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsli_canHostIndependentVariableAnchor @ :
bool 				glkview_nsli_canHostIndependentVariableAnchor( glkview_t object );

// Signature from Objective-C Runtime: B nsli_isLegalConstraintItem @ :
bool 				glkview_nsli_isLegalConstraintItem( glkview_t object );

// Signature from Objective-C Runtime: B nsli_isRTL @ :
bool 				glkview_nsli_isRTL( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_layoutAnchorForAttribute: @ : q
nsobject_t 			glkview_nsli_layoutAnchorForAttribute( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nsli_constraintWithAnchor:relatedBy:toAnchor:withSystemSpacingMultipliedBy: @ : @ q @ d
nsobject_t 			glkview_nsli_constraintWithAnchor( glkview_t object, nsobject_t arg0, long long arg1, nsobject_t arg2, double arg3 );

// Signature from Objective-C Runtime: @ nsli_widthVariable @ :
nsobject_t 			glkview_nsli_widthVariable( glkview_t object );

// Signature from Objective-C Runtime: @ nsli_heightVariable @ :
nsobject_t 			glkview_nsli_heightVariable( glkview_t object );

// Signature from Objective-C Runtime: v solutionDidChangeInEngine: @ : @
void 				glkview_solutionDidChangeInEngine( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ engine:markerForConstraintToBreakAmongConstraints: @ : @ @
nsobject_t 			glkview_engine( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v stopSettingPresentationValueForKey: @ : @
void 				glkview_stopSettingPresentationValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setContentsPosition: @ : i
void 				glkview_setContentsPosition( glkview_t object, int arg0 );

// Signature from Objective-C Runtime: v setContentStretch: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setContentStretch( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: B wantsDeepColorDrawing @ :
bool 				glkview_wantsDeepColorDrawing( glkview_t object );

// Signature from Objective-C Runtime: v setWantsDeepColorDrawing: @ : B
void 				glkview_setWantsDeepColorDrawing( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setClearsContextBeforeDrawing: @ : B
void 				glkview_setClearsContextBeforeDrawing( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v removeAllGestureRecognizers @ :
void 				glkview_removeAllGestureRecognizers( glkview_t object );

// Signature from Objective-C Runtime: Q edgesPreservingSuperviewLayoutMargins @ :
unsigned long long 	glkview_edgesPreservingSuperviewLayoutMargins( glkview_t object );

// Signature from Objective-C Runtime: v setInteractionTintColor: @ : @
void 				glkview_setInteractionTintColor( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ interactionTintColor @ :
nsobject_t 			glkview_interactionTintColor( glkview_t object );

// Signature from Objective-C Runtime: q compositingMode @ :
long long 			glkview_compositingMode( glkview_t object );

// Signature from Objective-C Runtime: @ keyboardLayoutGuide @ :
nsobject_t 			glkview_keyboardLayoutGuide( glkview_t object );

// Signature from Objective-C Runtime: @ resizableSnapshotFromRect:withCapInsets: @ : {CGRect={CGPoint=dd}{CGSize=dd}} {UIEdgeInsets=dddd}
nsobject_t 			glkview_resizableSnapshotFromRect( glkview_t object, CGRect arg0, UIEdgeInsets arg1 );

// Signature from Objective-C Runtime: v setFocusGroupPriority: @ : q
void 				glkview_setFocusGroupPriority( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: v resizeWithOldSuperviewSize: @ : {CGSize=dd}
void 				glkview_resizeWithOldSuperviewSize( glkview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B isExclusiveTouch @ :
bool 				glkview_isExclusiveTouch( glkview_t object );

// Signature from Objective-C Runtime: v setRotationBy: @ : f
void 				glkview_setRotationBy( glkview_t object, float arg0 );

// Signature from Objective-C Runtime: B viewTraversalMark @ :
bool 				glkview_viewTraversalMark( glkview_t object );

// Signature from Objective-C Runtime: v setViewTraversalMark: @ : B
void 				glkview_setViewTraversalMark( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v deferredBecomeFirstResponder @ :
void 				glkview_deferredBecomeFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: v movedFromSuperview: @ : @
void 				glkview_movedFromSuperview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v viewWillMoveToSuperview: @ : @
void 				glkview_viewWillMoveToSuperview( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v viewDidMoveToSuperview @ :
void 				glkview_viewDidMoveToSuperview( glkview_t object );

// Signature from Objective-C Runtime: v movedFromWindow: @ : @
void 				glkview_movedFromWindow( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v movedToWindow: @ : @
void 				glkview_movedToWindow( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setClearsContext: @ : B
void 				glkview_setClearsContext( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} contentStretch @ :
CGRect 				glkview_contentStretch( glkview_t object );

// Signature from Objective-C Runtime: v setFixedBackgroundPattern: @ : B
void 				glkview_setFixedBackgroundPattern( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: ^{CGImage=} newSnapshotWithRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGImage* 			glkview_newSnapshotWithRect( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: B skipsSubviewEnumeration @ :
bool 				glkview_skipsSubviewEnumeration( glkview_t object );

// Signature from Objective-C Runtime: v setSkipsSubviewEnumeration: @ : B
void 				glkview_setSkipsSubviewEnumeration( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setDeliversButtonsForGesturesToSuperview: @ : B
void 				glkview_setDeliversButtonsForGesturesToSuperview( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ scriptingInfoWithChildren @ :
nsobject_t 			glkview_scriptingInfoWithChildren( glkview_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				glkview_doesNotRecognizeSelector( glkview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: q selectionAffinity @ :
long long 			glkview_selectionAffinity( glkview_t object );

// Signature from Objective-C Runtime: B isFirstResponder @ :
bool 				glkview_isFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: @ firstResponder @ :
nsobject_t 			glkview_firstResponder( glkview_t object );

// Signature from Objective-C Runtime: v touchesBegan:withEvent: @ : @ @
void 				glkview_touchesBegan( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesMoved:withEvent: @ : @ @
void 				glkview_touchesMoved( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesEnded:withEvent: @ : @ @
void 				glkview_touchesEnded( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesCancelled:withEvent: @ : @ @
void 				glkview_touchesCancelled( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesBegan:withEvent: @ : @ @
void 				glkview_pressesBegan( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesChanged:withEvent: @ : @ @
void 				glkview_pressesChanged( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesEnded:withEvent: @ : @ @
void 				glkview_pressesEnded( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesCancelled:withEvent: @ : @ @
void 				glkview_pressesCancelled( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B resignFirstResponder @ :
bool 				glkview_resignFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: B canPerformAction:withSender: @ : : @
bool 				glkview_canPerformAction( glkview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B canBecomeFirstResponder @ :
bool 				glkview_canBecomeFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: @ keyCommands @ :
nsobject_t 			glkview_keyCommands( glkview_t object );

// Signature from Objective-C Runtime: @ inputAccessoryView @ :
nsobject_t 			glkview_inputAccessoryView( glkview_t object );

// Signature from Objective-C Runtime: @ inputView @ :
nsobject_t 			glkview_inputView( glkview_t object );

// Signature from Objective-C Runtime: @ inputViewController @ :
nsobject_t 			glkview_inputViewController( glkview_t object );

// Signature from Objective-C Runtime: q editingInteractionConfiguration @ :
long long 			glkview_editingInteractionConfiguration( glkview_t object );

// Signature from Objective-C Runtime: v validateCommand: @ : @
void 				glkview_validateCommand( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ inputAssistantItem @ :
nsobject_t 			glkview_inputAssistantItem( glkview_t object );

// Signature from Objective-C Runtime: v reloadInputViews @ :
void 				glkview_reloadInputViews( glkview_t object );

// Signature from Objective-C Runtime: B canResignFirstResponder @ :
bool 				glkview_canResignFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: B isEditing @ :
bool 				glkview_isEditing( glkview_t object );

// Signature from Objective-C Runtime: @ userActivity @ :
nsobject_t 			glkview_userActivity( glkview_t object );

// Signature from Objective-C Runtime: v encodeRestorableStateWithCoder: @ : @
void 				glkview_encodeRestorableStateWithCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v decodeRestorableStateWithCoder: @ : @
void 				glkview_decodeRestorableStateWithCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ targetForAction:withSender: @ : : @
nsobject_t 			glkview_targetForAction( glkview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ restorationIdentifier @ :
nsobject_t 			glkview_restorationIdentifier( glkview_t object );

// Signature from Objective-C Runtime: v setRestorationIdentifier: @ : @
void 				glkview_setRestorationIdentifier( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserActivity: @ : @
void 				glkview_setUserActivity( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesEstimatedPropertiesUpdated: @ : @
void 				glkview_touchesEstimatedPropertiesUpdated( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isEditable @ :
bool 				glkview_isEditable( glkview_t object );

// Signature from Objective-C Runtime: @ undoManager @ :
nsobject_t 			glkview_undoManager( glkview_t object );

// Signature from Objective-C Runtime: @ pasteConfiguration @ :
nsobject_t 			glkview_pasteConfiguration( glkview_t object );

// Signature from Objective-C Runtime: v beginSelectionChange @ :
void 				glkview_beginSelectionChange( glkview_t object );

// Signature from Objective-C Runtime: v endSelectionChange @ :
void 				glkview_endSelectionChange( glkview_t object );

// Signature from Objective-C Runtime: @ activityItemsConfiguration @ :
nsobject_t 			glkview_activityItemsConfiguration( glkview_t object );

// Signature from Objective-C Runtime: v setActivityItemsConfiguration: @ : @
void 				glkview_setActivityItemsConfiguration( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ inputAccessoryViewController @ :
nsobject_t 			glkview_inputAccessoryViewController( glkview_t object );

// Signature from Objective-C Runtime: @ interactionAssistant @ :
nsobject_t 			glkview_interactionAssistant( glkview_t object );

// Signature from Objective-C Runtime: @ textInputSuggestionDelegate @ :
nsobject_t 			glkview_textInputSuggestionDelegate( glkview_t object );

// Signature from Objective-C Runtime: v set_textInputSource: @ : q
void 				glkview_set_textInputSource( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: v captureTextFromCamera: @ : @
void 				glkview_captureTextFromCamera( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ textInputContextIdentifier @ :
nsobject_t 			glkview_textInputContextIdentifier( glkview_t object );

// Signature from Objective-C Runtime: @ textInputMode @ :
nsobject_t 			glkview_textInputMode( glkview_t object );

// Signature from Objective-C Runtime: @ recentsAccessoryView @ :
nsobject_t 			glkview_recentsAccessoryView( glkview_t object );

// Signature from Objective-C Runtime: v remoteControlReceivedWithEvent: @ : @
void 				glkview_remoteControlReceivedWithEvent( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v motionBegan:withEvent: @ : q @
void 				glkview_motionBegan( glkview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v motionEnded:withEvent: @ : q @
void 				glkview_motionEnded( glkview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v motionCancelled:withEvent: @ : q @
void 				glkview_motionCancelled( glkview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v buildMenuWithBuilder: @ : @
void 				glkview_buildMenuWithBuilder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nextFirstResponder @ :
nsobject_t 			glkview_nextFirstResponder( glkview_t object );

// Signature from Objective-C Runtime: v pasteItemProviders: @ : @
void 				glkview_pasteItemProviders( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateTextAttributesWithConversionHandler: @ : @?
void 				glkview_updateTextAttributesWithConversionHandler( glkview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v scrollWheel: @ : ^{__GSEvent=}
void 				glkview_scrollWheel( glkview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureStarted: @ : ^{__GSEvent=}
void 				glkview_gestureStarted( glkview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureEnded: @ : ^{__GSEvent=}
void 				glkview_gestureEnded( glkview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureChanged: @ : ^{__GSEvent=}
void 				glkview_gestureChanged( glkview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v setPasteConfiguration: @ : @
void 				glkview_setPasteConfiguration( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B canPasteItemProviders: @ : @
bool 				glkview_canPasteItemProviders( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B shouldReloadInputViews @ :
bool 				glkview_shouldReloadInputViews( glkview_t object );

// Signature from Objective-C Runtime: v reloadInputViewsWithoutReset @ :
void 				glkview_reloadInputViewsWithoutReset( glkview_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			glkview_classForCoder( glkview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			glkview_replacementObjectForCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			glkview_awakeAfterUsingCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				glkview_implementsSelector( glkview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				glkview_setObservationInfo( glkview_t object, void* arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			glkview_replacementObjectForPortCoder( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				glkview_willChangeValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				glkview_didChangeValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			glkview_replacementObjectForArchiver( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			glkview_classForArchiver( glkview_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			glkview_valueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			glkview_classForKeyedArchiver( glkview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			glkview_replacementObjectForKeyedArchiver( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* glkview_methodDescriptionForSelector( glkview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			glkview_valueForKeyPath( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			glkview_mutableArrayValueForKeyPath( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			glkview_mutableOrderedSetValueForKeyPath( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			glkview_mutableSetValueForKeyPath( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			glkview_addObserver( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				glkview_removeObservation( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				glkview_receiveObservedValue( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				glkview_receiveObservedError( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				glkview_finishObserving( glkview_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				glkview_setObservation( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				glkview_observeValueForKeyPath( glkview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				glkview_removeObserver( glkview_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			glkview_addChainedObservers( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			glkview_addObserverBlock( glkview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			glkview_addObservationTransformer( glkview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			glkview_valueForUndefinedKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				glkview_setNilValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			glkview_mutableArrayValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			glkview_mutableOrderedSetValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			glkview_mutableSetValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			glkview_dictionaryWithValuesForKeys( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				glkview_setValuesForKeysWithDictionary( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				glkview_willChange( glkview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				glkview_didChange( glkview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				glkview_observationInfo( glkview_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			glkview_autoContentAccessingProxy( glkview_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			glkview_classForPortCoder( glkview_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				glkview_performSelector( glkview_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				glkview_performSelectorOnMainThread( glkview_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				glkview_performSelectorInBackground( glkview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				glkview_isNSDate__( glkview_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				glkview_isNSString__( glkview_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				glkview_isNSCFConstantString__( glkview_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				glkview_isNSNumber__( glkview_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				glkview_isNSArray__( glkview_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				glkview_isNSDictionary__( glkview_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				glkview_isNSData__( glkview_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				glkview_isNSObject__( glkview_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				glkview_isNSOrderedSet__( glkview_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				glkview_isNSSet__( glkview_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				glkview_isNSTimeZone__( glkview_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				glkview_isNSValue__( glkview_t object );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			glkview_methodSignatureForSelector( glkview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				glkview_CA_distanceToValue( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			glkview_CA_copyRenderValueWithColorspace( glkview_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			glkview_CA_copyRenderValue( glkview_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			glkview_CA_interpolateValue( glkview_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			glkview_CA_addValue( glkview_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				glkview_CAMLTypeSupportedForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			glkview_CAMLTypeForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				glkview_CA_validateValue( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				glkview_encodeWithCAMLWriter( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			glkview_CA_interpolateValues( glkview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			glkview_CAMLType( glkview_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				glkview_CA_prepareRenderValue( glkview_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			glkview_CA_archivingValueForKey( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			glkview_CA_roundToIntegerFromValue( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			glkview_className( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			glkview_accessibilityLabel( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				glkview_setAccessibilityLabel( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				glkview_setAccessibilityIdentifier( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				glkview_accessibilityFrame( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			glkview_storedAccessibilityViewIsModal( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			glkview_storedAccessibilityElementsHidden( glkview_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			glkview_storedShouldGroupAccessibilityChildren( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			glkview_storedAccessibilityNavigationStyle( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			glkview_storedAccessibilityRespondsToUserInteraction( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			glkview_accessibilityAttributedLabel( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			glkview_accessibilityValue( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			glkview_accessibilityAttributedValue( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			glkview_accessibilityHint( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			glkview_accessibilityAttributedHint( glkview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			glkview_accessibilityActivationPoint( glkview_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	glkview_accessibilityTraits( glkview_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				glkview_isAccessibilityElement( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			glkview_accessibilityContainer( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			glkview_accessibilityLanguage( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			glkview_accessibilityPath( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				glkview_accessibilityViewIsModal( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				glkview_accessibilityElementsHidden( glkview_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				glkview_shouldGroupAccessibilityChildren( glkview_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			glkview_accessibilityNavigationStyle( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				glkview_accessibilityRespondsToUserInteraction( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			glkview_accessibilityUserInputLabels( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			glkview_accessibilityAttributedUserInputLabels( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			glkview_storedAccessibilityIdentifier( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			glkview_storedAccessibilityTraits( glkview_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			glkview_storedIsAccessibilityElement( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			glkview_storedAccessibilityFrame( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			glkview_storedAccessibilityActivationPoint( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			glkview_accessibilityHeaderElements( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				glkview_setAccessibilityElementsHidden( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				glkview_setAccessibilityViewIsModal( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				glkview_setAccessibilityAttributedLabel( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				glkview_setAccessibilityValue( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				glkview_setAccessibilityAttributedValue( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				glkview_setAccessibilityHint( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				glkview_setAccessibilityAttributedHint( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkview_setAccessibilityFrame( glkview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				glkview_setAccessibilityPath( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				glkview_setAccessibilityActivationPoint( glkview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				glkview_setAccessibilityTraits( glkview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				glkview_setIsAccessibilityElement( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				glkview_setAccessibilityContainer( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				glkview_setAccessibilityLanguage( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				glkview_setShouldGroupAccessibilityChildren( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				glkview_setAccessibilityNavigationStyle( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				glkview_setAccessibilityRespondsToUserInteraction( glkview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				glkview_setAccessibilityUserInputLabels( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				glkview_setAccessibilityAttributedUserInputLabels( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			glkview_accessibilityTextualContext( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				glkview_setAccessibilityTextualContext( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				glkview_setAccessibilityHeaderElements( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				glkview_accessibilityElementDidBecomeFocused( glkview_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				glkview_accessibilityElementDidLoseFocus( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				glkview_accessibilityElementIsFocused( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			glkview_accessibilityAssistiveTechnologyFocusedIdentifiers( glkview_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				glkview_accessibilityIncrement( glkview_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				glkview_accessibilityDecrement( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				glkview_accessibilityScroll( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				glkview_accessibilityPerformEscape( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				glkview_accessibilityPerformMagicTap( glkview_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				glkview_accessibilityActivate( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				glkview_setAccessibilityCustomActions( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			glkview_accessibilityCustomActions( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			glkview_accessibilityIdentification( glkview_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				glkview_accessibilitySetIdentification( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			glkview_accessibilityIdentifier( glkview_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	glkview_defaultAccessibilityTraits( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			glkview_accessibilityLocalizedStringKey( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				glkview_setAccessibilityDragSourceDescriptors( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			glkview_accessibilityDragSourceDescriptors( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				glkview_setAccessibilityDropPointDescriptors( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			glkview_accessibilityDropPointDescriptors( glkview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			glkview_storedAccessibilityContainerType( glkview_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			glkview_accessibilityElementCount( glkview_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			glkview_accessibilityElementAtIndex( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			glkview_indexOfAccessibilityElement( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			glkview_accessibilityElements( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				glkview_setAccessibilityElements( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			glkview_accessibilityContainerType( glkview_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				glkview_setAccessibilityContainerType( glkview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				glkview_setAccessibilityCustomRotors( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			glkview_accessibilityCustomRotors( glkview_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			glkview_uiPresentationManager( glkview_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				glkview_awakeFromNib( glkview_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				glkview_conformsToProtocolCached( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				glkview_prepareForInterfaceBuilder( glkview_t object );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			glkview_initFromPQLResultSet( glkview_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				glkview_supportsRBSXPCSecureCoding( glkview_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				glkview_RBSIsXPCObject( glkview_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			glkview_NSRepresentation( glkview_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			glkview_pep_onMainThread( glkview_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			glkview_pep_onThread( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			glkview_pep_onOperationQueue( glkview_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			glkview_pep_onMainThreadIfNecessary( glkview_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			glkview_pep_afterDelay( glkview_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			glkview_pep_getInvocation( glkview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			glkview_stringValueSafe( glkview_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				glkview_utf8ValueSafe( glkview_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				glkview_boolValueSafe( glkview_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			glkview_int64ValueSafe( glkview_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				glkview_doubleValueSafe( glkview_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				glkview_un_safeBoolValue( glkview_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				glkview_supportsBSXPCSecureCoding( glkview_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				glkview_bs_isPlistableType( glkview_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			glkview_bs_secureEncoded( glkview_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			glkview_bs_encoded( glkview_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				glkview_releaseOnMainThread( glkview_t object );

// Signature from Objective-C Runtime: @ debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			glkview_debugHierarchyAdditionalGroupingIDs( glkview_t object );

// Signature from Objective-C Runtime: @ debugHierarchyObjectsInGroupWithID:outOptions: @ : @ ^@
nsobject_t 			glkview_debugHierarchyObjectsInGroupWithID( glkview_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ debugHierarchyPropertyDescriptions @ :
nsobject_t 			glkview_debugHierarchyPropertyDescriptions( glkview_t object );

// Signature from Objective-C Runtime: @ debugHierarchyValueForPropertyWithName: @ : @
nsobject_t 			glkview_debugHierarchyValueForPropertyWithName( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SCN_setupDisplayLinkWithQueue:screen:policy: @ : @ @ Q
nsobject_t 			glkview_SCN_setupDisplayLinkWithQueue( glkview_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: v postNotificationWithDescription: @ : @
void 				glkview_postNotificationWithDescription( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B okToNotifyFromThisThread @ :
bool 				glkview_okToNotifyFromThisThread( glkview_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPerformSelector:withObject: @ : : @
void 				glkview_fromNotifySafeThreadPerformSelector( glkview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v allowSafePerformSelector @ :
void 				glkview_allowSafePerformSelector( glkview_t object );

// Signature from Objective-C Runtime: v disallowSafePerformSelector @ :
void 				glkview_disallowSafePerformSelector( glkview_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				glkview_fromNotifySafeThreadPostNotificationName( glkview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v fromMainThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				glkview_fromMainThreadPostNotificationName( glkview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v cn_updateDictionaryForKey:withChanges: @ : @ @
void 				glkview_cn_updateDictionaryForKey( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionAtIndent: @ : Q
nsobject_t 			glkview_descriptionAtIndent( glkview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: B isNull @ :
bool 				glkview_isNull( glkview_t object );

// Signature from Objective-C Runtime: @ CKDescription @ :
nsobject_t 			glkview_CKDescription( glkview_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescription @ :
nsobject_t 			glkview_CKPropertiesDescription( glkview_t object );

// Signature from Objective-C Runtime: @ CKUnredactedDescription @ :
nsobject_t 			glkview_CKUnredactedDescription( glkview_t object );

// Signature from Objective-C Runtime: @ CKRedactedDescription @ :
nsobject_t 			glkview_CKRedactedDescription( glkview_t object );

// Signature from Objective-C Runtime: @ CKDescriptionPropertiesWithPublic:private:shouldExpand: @ : B B B
nsobject_t 			glkview_CKDescriptionPropertiesWithPublic( glkview_t object, bool arg0, bool arg1, bool arg2 );

// Signature from Objective-C Runtime: v CKAssignToContainerWithID: @ : @
void 				glkview_CKAssignToContainerWithID( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSingleLineDescription @ :
nsobject_t 			glkview_CKSingleLineDescription( glkview_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescriptionStringFromProperties: @ : @
nsobject_t 			glkview_CKPropertiesDescriptionStringFromProperties( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKExpandedDescription @ :
nsobject_t 			glkview_CKExpandedDescription( glkview_t object );

// Signature from Objective-C Runtime: @ CKHashedDescription @ :
nsobject_t 			glkview_CKHashedDescription( glkview_t object );

// Signature from Objective-C Runtime: v ck_bindInStatement:atIndex: @ : @ Q
void 				glkview_ck_bindInStatement( glkview_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ CKDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			glkview_CKDescriptionRedact( glkview_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ CKObjectDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			glkview_CKObjectDescriptionRedact( glkview_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForName:object:queue:usingBlock: @ : @ @ @ @?
nsobject_t 			glkview_fm_addNotificationBlockObserverForName( glkview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForObject:keyPath:options:usingBlock: @ : @ @ Q @?
nsobject_t 			glkview_fm_addNotificationBlockObserverForObject( glkview_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v fm_removeNotificationBlockObserver: @ : @
void 				glkview_fm_removeNotificationBlockObserver( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_nullToNil @ :
nsobject_t 			glkview_fm_nullToNil( glkview_t object );

// Signature from Objective-C Runtime: @ fm_logID @ :
nsobject_t 			glkview_fm_logID( glkview_t object );

// Signature from Objective-C Runtime: @ nullToNil @ :
nsobject_t 			glkview_nullToNil( glkview_t object );

// Signature from Objective-C Runtime: @ logID @ :
nsobject_t 			glkview_logID( glkview_t object );

// Signature from Objective-C Runtime: v if_setValueIfNonNil:forKey: @ : @ @
void 				glkview_if_setValueIfNonNil( glkview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v if_setValueIfYES:forKey: @ : B @
void 				glkview_if_setValueIfYES( glkview_t object, bool arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ toPBCodable @ :
nsobject_t 			glkview_toPBCodable( glkview_t object );

// Signature from Objective-C Runtime: @ ams_generateDescriptionWithSubObjects: @ : @
nsobject_t 			glkview_ams_generateDescriptionWithSubObjects( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				glkview_isProxy( glkview_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				glkview_isEqual( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			glkview_class( glkview_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			glkview_self( glkview_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				glkview_isKindOfClass( glkview_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				glkview_isMemberOfClass( glkview_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				glkview_conformsToProtocol( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				glkview_respondsToSelector( glkview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			glkview_zone( glkview_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	glkview_hash( glkview_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			glkview_superclass( glkview_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			glkview_debugDescription( glkview_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				glkview_retainWeakReference( glkview_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				glkview_allowsWeakReference( glkview_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			glkview_copy( glkview_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				glkview_finalize( glkview_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				glkview_isFault( glkview_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				glkview_forwardInvocation( glkview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			glkview_forwardingTargetForSelector( glkview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			glkview_mutableCopy( glkview_t object );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyPropertyDescriptions @ :
nsobject_t 			glkview_fallback_debugHierarchyPropertyDescriptions( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyValueForPropertyWithName:onObject:outOptions:outError: @ : @ @ ^@ ^@
nsobject_t 			glkview_fallback_debugHierarchyValueForPropertyWithName( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: # layerClass @ :
nsclass_t 			glkview_layerClass( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyChildGroupingID @ :
nsobject_t 			glkview_fallback_debugHierarchyChildGroupingID( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			glkview_fallback_debugHierarchyAdditionalGroupingIDs( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyObjectsInGroupWithID:onObject:outOptions: @ : @ @ ^@
nsobject_t 			glkview_fallback_debugHierarchyObjectsInGroupWithID( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v initialize @ :
void 				glkview_initialize( );

// Signature from Objective-C Runtime: v flush @ :
void 				glkview_flush( );

// Signature from Objective-C Runtime: @ appearance @ :
nsobject_t 			glkview_appearance( );

// Signature from Objective-C Runtime: v animateWithDuration:delay:options:animations:completion: @ : d d Q @? @?
void 				glkview_animateWithDuration( double arg0, double arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v performWithoutAnimation: @ : @?
void 				glkview_performWithoutAnimation( nsobject_t* arg0 );

// Signature from Objective-C Runtime: B areAnimationsEnabled @ :
bool 				glkview_areAnimationsEnabled( );

// Signature from Objective-C Runtime: @ appearanceWhenContainedInInstancesOfClasses: @ : @
nsobject_t 			glkview_appearanceWhenContainedInInstancesOfClasses( nsobject_t arg0 );

// Signature from Objective-C Runtime: B requiresConstraintBasedLayout @ :
bool 				glkview_requiresConstraintBasedLayout( );

// Signature from Objective-C Runtime: v disableAnimation @ :
void 				glkview_disableAnimation( );

// Signature from Objective-C Runtime: v enableAnimation @ :
void 				glkview_enableAnimation( );

// Signature from Objective-C Runtime: v setAnimationCurve: @ : q
void 				glkview_setAnimationCurve( long long arg0 );

// Signature from Objective-C Runtime: v addKeyframeWithRelativeStartTime:relativeDuration:animations: @ : d d @?
void 				glkview_addKeyframeWithRelativeStartTime( double arg0, double arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v animateKeyframesWithDuration:delay:options:animations:completion: @ : d d Q @? @?
void 				glkview_animateKeyframesWithDuration( double arg0, double arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: d inheritedAnimationDuration @ :
double 				glkview_inheritedAnimationDuration( );

// Signature from Objective-C Runtime: v setAnimationDuration: @ : d
void 				glkview_setAnimationDuration( double arg0 );

// Signature from Objective-C Runtime: @ appearanceWhenContainedIn: @ : #
nsobject_t 			glkview_appearanceWhenContainedIn( nsclass_t arg0 );

// Signature from Objective-C Runtime: @ appearanceForTraitCollection: @ : @
nsobject_t 			glkview_appearanceForTraitCollection( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAnimationsEnabled: @ : B
void 				glkview_setAnimationsEnabled( bool arg0 );

// Signature from Objective-C Runtime: v transitionWithView:duration:options:animations:completion: @ : @ d Q @? @?
void 				glkview_transitionWithView( nsobject_t arg0, double arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v conditionallyAnimate:withAnimation:layout:completion: @ : B @? @? @?
void 				glkview_conditionallyAnimate( bool arg0, nsobject_t* arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: q userInterfaceLayoutDirectionForSemanticContentAttribute: @ : q
long long 			glkview_userInterfaceLayoutDirectionForSemanticContentAttribute( long long arg0 );

// Signature from Objective-C Runtime: @ appearanceMatchingProperties:whenContainedInInstancesOfClasses: @ : @ @
nsobject_t 			glkview_appearanceMatchingProperties( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAnimationRepeatCount: @ : f
void 				glkview_setAnimationRepeatCount( float arg0 );

// Signature from Objective-C Runtime: v modifyAnimationsWithRepeatCount:autoreverses:animations: @ : d B @?
void 				glkview_modifyAnimationsWithRepeatCount( double arg0, bool arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v commitAnimations @ :
void 				glkview_commitAnimations( );

// Signature from Objective-C Runtime: v beginAnimations:context: @ : @ ^v
void 				glkview_beginAnimations( nsobject_t arg0, void* arg1 );

// Signature from Objective-C Runtime: v setAnimationDelegate: @ : @
void 				glkview_setAnimationDelegate( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAnimationDidStopSelector: @ : :
void 				glkview_setAnimationDidStopSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v transitionFromView:toView:duration:options:completion: @ : @ @ d Q @?
void 				glkview_transitionFromView( nsobject_t arg0, nsobject_t arg1, double arg2, unsigned long long arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v throttledFlush @ :
void 				glkview_throttledFlush( );

// Signature from Objective-C Runtime: v setAnimationRepeatAutoreverses: @ : B
void 				glkview_setAnimationRepeatAutoreverses( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationBeginsFromCurrentState: @ : B
void 				glkview_setAnimationBeginsFromCurrentState( bool arg0 );

// Signature from Objective-C Runtime: v endAnimations @ :
void 				glkview_endAnimations( );

// Signature from Objective-C Runtime: v setAnimationPosition: @ : {CGPoint=dd}
void 				glkview_setAnimationPosition( CGPoint arg0 );

// Signature from Objective-C Runtime: v setAnimationDelay: @ : d
void 				glkview_setAnimationDelay( double arg0 );

// Signature from Objective-C Runtime: v setAnimationFrameInterval: @ : d
void 				glkview_setAnimationFrameInterval( double arg0 );

// Signature from Objective-C Runtime: v setAnimationStartDate: @ : @
void 				glkview_setAnimationStartDate( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAnimationStartTime: @ : d
void 				glkview_setAnimationStartTime( double arg0 );

// Signature from Objective-C Runtime: v setAnimationPreventsAdditive: @ : B
void 				glkview_setAnimationPreventsAdditive( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationAutoreverses: @ : B
void 				glkview_setAnimationAutoreverses( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationFromCurrentState: @ : B
void 				glkview_setAnimationFromCurrentState( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationTransition:forView:cache: @ : q @ B
void 				glkview_setAnimationTransition( long long arg0, nsobject_t arg1, bool arg2 );

// Signature from Objective-C Runtime: v setAnimationWillStartSelector: @ : :
void 				glkview_setAnimationWillStartSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v performSystemAnimation:onViews:options:animations:completion: @ : Q @ Q @? @?
void 				glkview_performSystemAnimation( unsigned long long arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: @ objectWithRestorationIdentifierPath: @ : @
nsobject_t 			glkview_objectWithRestorationIdentifierPath( nsobject_t arg0 );

// Signature from Objective-C Runtime: v clearTextInputContextIdentifier: @ : @
void 				glkview_clearTextInputContextIdentifier( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				glkview_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			glkview_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				glkview_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				glkview_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				glkview_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* glkview_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				glkview_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			glkview_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				glkview_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			glkview_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			glkview_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				glkview_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			glkview_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				glkview_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				glkview_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			glkview_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			glkview_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				glkview_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				glkview_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			glkview_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			glkview_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			glkview_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			glkview_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			glkview_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			glkview_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSQLiteClassName @ :
nsobject_t 			glkview_CKSQLiteClassName( );

// Signature from Objective-C Runtime: B brc_swizzleInstanceMethod:with: @ : : :
bool 				glkview_brc_swizzleInstanceMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: B brc_swizzleClassMethod:with: @ : : :
bool 				glkview_brc_swizzleClassMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: @ fromPBCodable: @ : @
nsobject_t 			glkview_fromPBCodable( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			glkview_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			glkview_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			glkview_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				glkview_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				glkview_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
glkview_t 			glkview_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			glkview_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				glkview_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				glkview_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				glkview_instancesRespondToSelector( nsselector_t arg0 );

#endif