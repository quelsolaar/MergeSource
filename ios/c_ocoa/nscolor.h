/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSCOLOR_HEADER
#define SHIMMER_C_OCOA_NSCOLOR_HEADER

typedef void*	nscolor_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nscolor_classForCoder( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nscolor_initWithCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				nscolor_isEqual( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nscolor_hash( nscolor_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nscolor_copyWithZone( nscolor_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: v set @ :
void 				nscolor_set( nscolor_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nscolor_encodeWithCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ writableTypeIdentifiersForItemProvider @ :
nsobject_t 			nscolor_writableTypeIdentifiersForItemProvider( nscolor_t object );

// Signature from Objective-C Runtime: @ loadDataWithTypeIdentifier:forItemProviderCompletionHandler: @ : @ @?
nsobject_t 			nscolor_loadDataWithTypeIdentifier( nscolor_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: ^{CGColor=} CGColor @ :
CGColor* 			nscolor_CGColor( nscolor_t object );

// Signature from Objective-C Runtime: ^{CGColor=} cgColor @ :
CGColor* 			nscolor_cgColor( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithCGColor: @ : ^{CGColor=}
nsobject_t 			nscolor_initWithCGColor( nscolor_t object, CGColor* arg0 );

// Signature from Objective-C Runtime: @ initWithRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_initWithRed( nscolor_t object, double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: B getRed:green:blue:alpha: @ : ^d ^d ^d ^d
bool 				nscolor_getRed( nscolor_t object, double* arg0, double* arg1, double* arg2, double* arg3 );

// Signature from Objective-C Runtime: @ colorWithAlphaComponent: @ : d
nsobject_t 			nscolor_colorWithAlphaComponent( nscolor_t object, double arg0 );

// Signature from Objective-C Runtime: v setStroke @ :
void 				nscolor_setStroke( nscolor_t object );

// Signature from Objective-C Runtime: d alphaComponent @ :
double 				nscolor_alphaComponent( nscolor_t object );

// Signature from Objective-C Runtime: B getWhite:alpha: @ : ^d ^d
bool 				nscolor_getWhite( nscolor_t object, double* arg0, double* arg1 );

// Signature from Objective-C Runtime: @ accessibilityName @ :
nsobject_t 			nscolor_accessibilityName( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithWhite:alpha: @ : d d
nsobject_t 			nscolor_initWithWhite( nscolor_t object, double arg0, double arg1 );

// Signature from Objective-C Runtime: B getHue:saturation:brightness:alpha: @ : ^d ^d ^d ^d
bool 				nscolor_getHue( nscolor_t object, double* arg0, double* arg1, double* arg2, double* arg3 );

// Signature from Objective-C Runtime: @ resolvedColorWithTraitCollection: @ : @
nsobject_t 			nscolor_resolvedColorWithTraitCollection( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setFill @ :
void 				nscolor_setFill( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithHue:saturation:brightness:alpha: @ : d d d d
nsobject_t 			nscolor_initWithHue( nscolor_t object, double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorSpaceName @ :
nsobject_t 			nscolor_colorSpaceName( nscolor_t object );

// Signature from Objective-C Runtime: B isPatternColor @ :
bool 				nscolor_isPatternColor( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithDisplayP3Red:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_initWithDisplayP3Red( nscolor_t object, double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ initWithCIColor: @ : @
nsobject_t 			nscolor_initWithCIColor( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CIColor @ :
nsobject_t 			nscolor_CIColor( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithPatternImage: @ : @
nsobject_t 			nscolor_initWithPatternImage( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ styleString @ :
nsobject_t 			nscolor_styleString( nscolor_t object );

// Signature from Objective-C Runtime: @ initWithDynamicProvider: @ : @?
nsobject_t 			nscolor_initWithDynamicProvider( nscolor_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ initWithItemProviderData:typeIdentifier:error: @ : @ @ ^@
nsobject_t 			nscolor_initWithItemProviderData( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nscolor_replacementObjectForCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nscolor_awakeAfterUsingCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				nscolor_implementsSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nscolor_setObservationInfo( nscolor_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nscolor_setValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nscolor_replacementObjectForPortCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nscolor_willChangeValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nscolor_didChangeValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nscolor_replacementObjectForArchiver( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nscolor_classForArchiver( nscolor_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nscolor_valueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nscolor_classForKeyedArchiver( nscolor_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nscolor_replacementObjectForKeyedArchiver( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nscolor_methodDescriptionForSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nscolor_valueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nscolor_mutableArrayValueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nscolor_mutableOrderedSetValueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nscolor_mutableSetValueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			nscolor_addObserver( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nscolor_removeObservation( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nscolor_receiveObservedValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nscolor_receiveObservedError( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nscolor_finishObserving( nscolor_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nscolor_setObservation( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nscolor_observeValueForKeyPath( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nscolor_removeObserver( nscolor_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nscolor_addChainedObservers( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nscolor_addObserverBlock( nscolor_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nscolor_addObservationTransformer( nscolor_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nscolor_valueForUndefinedKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nscolor_setNilValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nscolor_mutableArrayValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nscolor_mutableOrderedSetValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nscolor_mutableSetValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nscolor_dictionaryWithValuesForKeys( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nscolor_setValuesForKeysWithDictionary( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nscolor_willChange( nscolor_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nscolor_didChange( nscolor_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nscolor_observationInfo( nscolor_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nscolor_autoContentAccessingProxy( nscolor_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nscolor_classForPortCoder( nscolor_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nscolor_performSelector( nscolor_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				nscolor_performSelectorOnMainThread( nscolor_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nscolor_performSelectorInBackground( nscolor_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				nscolor_isNSDate__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				nscolor_isNSString__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				nscolor_isNSCFConstantString__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				nscolor_isNSNumber__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				nscolor_isNSArray__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				nscolor_isNSDictionary__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				nscolor_isNSData__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				nscolor_isNSObject__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				nscolor_isNSOrderedSet__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				nscolor_isNSSet__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				nscolor_isNSTimeZone__( nscolor_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				nscolor_isNSValue__( nscolor_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nscolor_description( nscolor_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nscolor_doesNotRecognizeSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nscolor_methodSignatureForSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nscolor_className( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nscolor_accessibilityLabel( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nscolor_setAccessibilityLabel( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nscolor_setAccessibilityIdentifier( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nscolor_accessibilityFrame( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			nscolor_storedAccessibilityViewIsModal( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			nscolor_storedAccessibilityElementsHidden( nscolor_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			nscolor_storedShouldGroupAccessibilityChildren( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			nscolor_storedAccessibilityNavigationStyle( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			nscolor_storedAccessibilityRespondsToUserInteraction( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			nscolor_accessibilityAttributedLabel( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nscolor_accessibilityValue( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			nscolor_accessibilityAttributedValue( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			nscolor_accessibilityHint( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			nscolor_accessibilityAttributedHint( nscolor_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nscolor_accessibilityActivationPoint( nscolor_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	nscolor_accessibilityTraits( nscolor_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				nscolor_isAccessibilityElement( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			nscolor_accessibilityContainer( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			nscolor_accessibilityLanguage( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			nscolor_accessibilityPath( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				nscolor_accessibilityViewIsModal( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				nscolor_accessibilityElementsHidden( nscolor_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				nscolor_shouldGroupAccessibilityChildren( nscolor_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			nscolor_accessibilityNavigationStyle( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				nscolor_accessibilityRespondsToUserInteraction( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nscolor_accessibilityUserInputLabels( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nscolor_accessibilityAttributedUserInputLabels( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			nscolor_storedAccessibilityIdentifier( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			nscolor_storedAccessibilityTraits( nscolor_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			nscolor_storedIsAccessibilityElement( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			nscolor_storedAccessibilityFrame( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			nscolor_storedAccessibilityActivationPoint( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			nscolor_accessibilityHeaderElements( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				nscolor_setAccessibilityElementsHidden( nscolor_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				nscolor_setAccessibilityViewIsModal( nscolor_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				nscolor_setAccessibilityAttributedLabel( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nscolor_setAccessibilityValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				nscolor_setAccessibilityAttributedValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				nscolor_setAccessibilityHint( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				nscolor_setAccessibilityAttributedHint( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nscolor_setAccessibilityFrame( nscolor_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				nscolor_setAccessibilityPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nscolor_setAccessibilityActivationPoint( nscolor_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				nscolor_setAccessibilityTraits( nscolor_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				nscolor_setIsAccessibilityElement( nscolor_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				nscolor_setAccessibilityContainer( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				nscolor_setAccessibilityLanguage( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				nscolor_setShouldGroupAccessibilityChildren( nscolor_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				nscolor_setAccessibilityNavigationStyle( nscolor_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				nscolor_setAccessibilityRespondsToUserInteraction( nscolor_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nscolor_setAccessibilityUserInputLabels( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nscolor_setAccessibilityAttributedUserInputLabels( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			nscolor_accessibilityTextualContext( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				nscolor_setAccessibilityTextualContext( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				nscolor_setAccessibilityHeaderElements( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				nscolor_accessibilityElementDidBecomeFocused( nscolor_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				nscolor_accessibilityElementDidLoseFocus( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				nscolor_accessibilityElementIsFocused( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			nscolor_accessibilityAssistiveTechnologyFocusedIdentifiers( nscolor_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				nscolor_accessibilityIncrement( nscolor_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				nscolor_accessibilityDecrement( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				nscolor_accessibilityScroll( nscolor_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				nscolor_accessibilityPerformEscape( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				nscolor_accessibilityPerformMagicTap( nscolor_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				nscolor_accessibilityActivate( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nscolor_setAccessibilityCustomActions( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nscolor_accessibilityCustomActions( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			nscolor_accessibilityIdentification( nscolor_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				nscolor_accessibilitySetIdentification( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nscolor_accessibilityIdentifier( nscolor_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	nscolor_defaultAccessibilityTraits( nscolor_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				nscolor_isAccessibilityElementByDefault( nscolor_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				nscolor_isElementAccessibilityExposedToInterfaceBuilder( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			nscolor_accessibilityLocalizedStringKey( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				nscolor_setAccessibilityDragSourceDescriptors( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			nscolor_accessibilityDragSourceDescriptors( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				nscolor_setAccessibilityDropPointDescriptors( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			nscolor_accessibilityDropPointDescriptors( nscolor_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			nscolor_storedAccessibilityContainerType( nscolor_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			nscolor_accessibilityElementCount( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			nscolor_accessibilityElementAtIndex( nscolor_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			nscolor_indexOfAccessibilityElement( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			nscolor_accessibilityElements( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				nscolor_setAccessibilityElements( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nscolor_accessibilityContainerType( nscolor_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nscolor_setAccessibilityContainerType( nscolor_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nscolor_setAccessibilityCustomRotors( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nscolor_accessibilityCustomRotors( nscolor_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			nscolor_uiPresentationManager( nscolor_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nscolor_awakeFromNib( nscolor_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				nscolor_conformsToProtocolCached( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nscolor_prepareForInterfaceBuilder( nscolor_t object );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nscolor_CA_distanceToValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			nscolor_CA_copyRenderValueWithColorspace( nscolor_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			nscolor_CA_copyRenderValue( nscolor_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nscolor_CA_interpolateValue( nscolor_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nscolor_CA_addValue( nscolor_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				nscolor_CAMLTypeSupportedForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nscolor_CAMLTypeForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				nscolor_CA_validateValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nscolor_encodeWithCAMLWriter( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			nscolor_CA_interpolateValues( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nscolor_CAMLType( nscolor_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nscolor_CA_prepareRenderValue( nscolor_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nscolor_CA_archivingValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nscolor_CA_roundToIntegerFromValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			nscolor_initFromPQLResultSet( nscolor_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				nscolor_supportsRBSXPCSecureCoding( nscolor_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				nscolor_RBSIsXPCObject( nscolor_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nscolor_NSRepresentation( nscolor_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			nscolor_pep_onMainThread( nscolor_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			nscolor_pep_onThread( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			nscolor_pep_onOperationQueue( nscolor_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			nscolor_pep_onMainThreadIfNecessary( nscolor_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			nscolor_pep_afterDelay( nscolor_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			nscolor_pep_getInvocation( nscolor_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			nscolor_stringValueSafe( nscolor_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				nscolor_utf8ValueSafe( nscolor_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				nscolor_boolValueSafe( nscolor_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			nscolor_int64ValueSafe( nscolor_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				nscolor_doubleValueSafe( nscolor_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				nscolor_un_safeBoolValue( nscolor_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				nscolor_supportsBSXPCSecureCoding( nscolor_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				nscolor_bs_isPlistableType( nscolor_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nscolor_bs_secureEncoded( nscolor_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nscolor_bs_encoded( nscolor_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				nscolor_releaseOnMainThread( nscolor_t object );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				nscolor_isProxy( nscolor_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nscolor_retainCount( nscolor_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nscolor_dealloc( nscolor_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nscolor_class( nscolor_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nscolor_self( nscolor_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				nscolor_isKindOfClass( nscolor_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				nscolor_isMemberOfClass( nscolor_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				nscolor_conformsToProtocol( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				nscolor_respondsToSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nscolor_retain( nscolor_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nscolor_autorelease( nscolor_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nscolor_zone( nscolor_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nscolor_superclass( nscolor_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nscolor_debugDescription( nscolor_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nscolor_init( nscolor_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				nscolor_retainWeakReference( nscolor_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				nscolor_allowsWeakReference( nscolor_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nscolor_copy( nscolor_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nscolor_finalize( nscolor_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				nscolor_isFault( nscolor_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nscolor_forwardInvocation( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nscolor_forwardingTargetForSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nscolor_mutableCopy( nscolor_t object );

// Signature from Objective-C Runtime: B supportsSecureCoding @ :
bool 				nscolor_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ colorWithCalibratedRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithCalibratedRed( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithCalibratedWhite:alpha: @ : d d
nsobject_t 			nscolor_colorWithCalibratedWhite( double arg0, double arg1 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nscolor_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nscolor_initialize( );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nscolor_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: @ readableTypeIdentifiersForItemProvider @ :
nsobject_t 			nscolor_readableTypeIdentifiersForItemProvider( );

// Signature from Objective-C Runtime: @ objectWithItemProviderData:typeIdentifier:error: @ : @ @ ^@
nsobject_t 			nscolor_objectWithItemProviderData( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ clearColor @ :
nsobject_t 			nscolor_clearColor( );

// Signature from Objective-C Runtime: @ colorWithRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithRed( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithCGColor: @ : ^{CGColor=}
nsobject_t 			nscolor_colorWithCGColor( CGColor* arg0 );

// Signature from Objective-C Runtime: @ blackColor @ :
nsobject_t 			nscolor_blackColor( );

// Signature from Objective-C Runtime: @ whiteColor @ :
nsobject_t 			nscolor_whiteColor( );

// Signature from Objective-C Runtime: @ grayColor @ :
nsobject_t 			nscolor_grayColor( );

// Signature from Objective-C Runtime: @ redColor @ :
nsobject_t 			nscolor_redColor( );

// Signature from Objective-C Runtime: @ greenColor @ :
nsobject_t 			nscolor_greenColor( );

// Signature from Objective-C Runtime: @ blueColor @ :
nsobject_t 			nscolor_blueColor( );

// Signature from Objective-C Runtime: @ cyanColor @ :
nsobject_t 			nscolor_cyanColor( );

// Signature from Objective-C Runtime: @ magentaColor @ :
nsobject_t 			nscolor_magentaColor( );

// Signature from Objective-C Runtime: @ yellowColor @ :
nsobject_t 			nscolor_yellowColor( );

// Signature from Objective-C Runtime: @ colorWithPatternImage: @ : @
nsobject_t 			nscolor_colorWithPatternImage( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ systemRedColor @ :
nsobject_t 			nscolor_systemRedColor( );

// Signature from Objective-C Runtime: @ systemGreenColor @ :
nsobject_t 			nscolor_systemGreenColor( );

// Signature from Objective-C Runtime: @ systemBlueColor @ :
nsobject_t 			nscolor_systemBlueColor( );

// Signature from Objective-C Runtime: @ brownColor @ :
nsobject_t 			nscolor_brownColor( );

// Signature from Objective-C Runtime: @ colorWithWhite:alpha: @ : d d
nsobject_t 			nscolor_colorWithWhite( double arg0, double arg1 );

// Signature from Objective-C Runtime: @ colorWithDisplayP3Red:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithDisplayP3Red( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ labelColor @ :
nsobject_t 			nscolor_labelColor( );

// Signature from Objective-C Runtime: @ tintColor @ :
nsobject_t 			nscolor_tintColor( );

// Signature from Objective-C Runtime: @ systemGrayColor @ :
nsobject_t 			nscolor_systemGrayColor( );

// Signature from Objective-C Runtime: @ systemBackgroundColor @ :
nsobject_t 			nscolor_systemBackgroundColor( );

// Signature from Objective-C Runtime: @ insertionPointColor @ :
nsobject_t 			nscolor_insertionPointColor( );

// Signature from Objective-C Runtime: @ selectionHighlightColor @ :
nsobject_t 			nscolor_selectionHighlightColor( );

// Signature from Objective-C Runtime: @ secondarySystemGroupedBackgroundColor @ :
nsobject_t 			nscolor_secondarySystemGroupedBackgroundColor( );

// Signature from Objective-C Runtime: @ secondaryLabelColor @ :
nsobject_t 			nscolor_secondaryLabelColor( );

// Signature from Objective-C Runtime: @ colorWithHue:saturation:brightness:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithHue( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ lightGrayColor @ :
nsobject_t 			nscolor_lightGrayColor( );

// Signature from Objective-C Runtime: @ systemWhiteColor @ :
nsobject_t 			nscolor_systemWhiteColor( );

// Signature from Objective-C Runtime: @ systemDarkGrayColor @ :
nsobject_t 			nscolor_systemDarkGrayColor( );

// Signature from Objective-C Runtime: @ externalSystemTealColor @ :
nsobject_t 			nscolor_externalSystemTealColor( );

// Signature from Objective-C Runtime: @ separatorColor @ :
nsobject_t 			nscolor_separatorColor( );

// Signature from Objective-C Runtime: @ linkColor @ :
nsobject_t 			nscolor_linkColor( );

// Signature from Objective-C Runtime: @ tertiarySystemFillColor @ :
nsobject_t 			nscolor_tertiarySystemFillColor( );

// Signature from Objective-C Runtime: @ systemFillColor @ :
nsobject_t 			nscolor_systemFillColor( );

// Signature from Objective-C Runtime: @ secondarySystemFillColor @ :
nsobject_t 			nscolor_secondarySystemFillColor( );

// Signature from Objective-C Runtime: @ externalSystemRedColor @ :
nsobject_t 			nscolor_externalSystemRedColor( );

// Signature from Objective-C Runtime: @ secondarySystemBackgroundColor @ :
nsobject_t 			nscolor_secondarySystemBackgroundColor( );

// Signature from Objective-C Runtime: @ tertiarySystemBackgroundColor @ :
nsobject_t 			nscolor_tertiarySystemBackgroundColor( );

// Signature from Objective-C Runtime: @ systemGroupedBackgroundColor @ :
nsobject_t 			nscolor_systemGroupedBackgroundColor( );

// Signature from Objective-C Runtime: @ tertiarySystemGroupedBackgroundColor @ :
nsobject_t 			nscolor_tertiarySystemGroupedBackgroundColor( );

// Signature from Objective-C Runtime: @ systemOrangeColor @ :
nsobject_t 			nscolor_systemOrangeColor( );

// Signature from Objective-C Runtime: @ purpleColor @ :
nsobject_t 			nscolor_purpleColor( );

// Signature from Objective-C Runtime: @ darkGrayColor @ :
nsobject_t 			nscolor_darkGrayColor( );

// Signature from Objective-C Runtime: @ tableBackgroundColor @ :
nsobject_t 			nscolor_tableBackgroundColor( );

// Signature from Objective-C Runtime: @ tableSelectionColor @ :
nsobject_t 			nscolor_tableSelectionColor( );

// Signature from Objective-C Runtime: @ tableShadowColor @ :
nsobject_t 			nscolor_tableShadowColor( );

// Signature from Objective-C Runtime: @ tableGroupedTopShadowColor @ :
nsobject_t 			nscolor_tableGroupedTopShadowColor( );

// Signature from Objective-C Runtime: @ tableSeparatorDarkColor @ :
nsobject_t 			nscolor_tableSeparatorDarkColor( );

// Signature from Objective-C Runtime: @ tableCellGroupedBackgroundColor @ :
nsobject_t 			nscolor_tableCellGroupedBackgroundColor( );

// Signature from Objective-C Runtime: @ tertiaryLabelColor @ :
nsobject_t 			nscolor_tertiaryLabelColor( );

// Signature from Objective-C Runtime: @ systemDarkBlueColor @ :
nsobject_t 			nscolor_systemDarkBlueColor( );

// Signature from Objective-C Runtime: @ systemDarkGreenColor @ :
nsobject_t 			nscolor_systemDarkGreenColor( );

// Signature from Objective-C Runtime: @ orangeColor @ :
nsobject_t 			nscolor_orangeColor( );

// Signature from Objective-C Runtime: @ colorWithDynamicProvider: @ : @?
nsobject_t 			nscolor_colorWithDynamicProvider( nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ keyboardFocusIndicatorColor @ :
nsobject_t 			nscolor_keyboardFocusIndicatorColor( );

// Signature from Objective-C Runtime: @ systemYellowColor @ :
nsobject_t 			nscolor_systemYellowColor( );

// Signature from Objective-C Runtime: @ systemPinkColor @ :
nsobject_t 			nscolor_systemPinkColor( );

// Signature from Objective-C Runtime: @ tableCellPlainBackgroundColor @ :
nsobject_t 			nscolor_tableCellPlainBackgroundColor( );

// Signature from Objective-C Runtime: @ tableCellGroupedBackgroundColorLegacyWhite @ :
nsobject_t 			nscolor_tableCellGroupedBackgroundColorLegacyWhite( );

// Signature from Objective-C Runtime: @ tableCellBackgroundColor @ :
nsobject_t 			nscolor_tableCellBackgroundColor( );

// Signature from Objective-C Runtime: @ tableCellbackgroundColorCarPlay @ :
nsobject_t 			nscolor_tableCellbackgroundColorCarPlay( );

// Signature from Objective-C Runtime: @ tablePlainHeaderFooterBackgroundColor @ :
nsobject_t 			nscolor_tablePlainHeaderFooterBackgroundColor( );

// Signature from Objective-C Runtime: @ tablePlainHeaderFooterFloatingBackgroundColor @ :
nsobject_t 			nscolor_tablePlainHeaderFooterFloatingBackgroundColor( );

// Signature from Objective-C Runtime: @ tableSelectionGradientStartColor @ :
nsobject_t 			nscolor_tableSelectionGradientStartColor( );

// Signature from Objective-C Runtime: @ tableSelectionGradientEndColor @ :
nsobject_t 			nscolor_tableSelectionGradientEndColor( );

// Signature from Objective-C Runtime: @ sectionListBorderColor @ :
nsobject_t 			nscolor_sectionListBorderColor( );

// Signature from Objective-C Runtime: @ sectionHeaderBackgroundColor @ :
nsobject_t 			nscolor_sectionHeaderBackgroundColor( );

// Signature from Objective-C Runtime: @ sectionHeaderOpaqueBackgroundColor @ :
nsobject_t 			nscolor_sectionHeaderOpaqueBackgroundColor( );

// Signature from Objective-C Runtime: @ sectionHeaderBorderColor @ :
nsobject_t 			nscolor_sectionHeaderBorderColor( );

// Signature from Objective-C Runtime: @ tableCellValue1BlueColor @ :
nsobject_t 			nscolor_tableCellValue1BlueColor( );

// Signature from Objective-C Runtime: @ tableCellValue2BlueColor @ :
nsobject_t 			nscolor_tableCellValue2BlueColor( );

// Signature from Objective-C Runtime: @ tableCellGrayTextColor @ :
nsobject_t 			nscolor_tableCellGrayTextColor( );

// Signature from Objective-C Runtime: @ textFieldAtomPurpleColor @ :
nsobject_t 			nscolor_textFieldAtomPurpleColor( );

// Signature from Objective-C Runtime: @ infoTextOverPinStripeTextColor @ :
nsobject_t 			nscolor_infoTextOverPinStripeTextColor( );

// Signature from Objective-C Runtime: @ tableCellDefaultSelectionTintColor @ :
nsobject_t 			nscolor_tableCellDefaultSelectionTintColor( );

// Signature from Objective-C Runtime: @ tableCellPlainSelectedBackgroundColor @ :
nsobject_t 			nscolor_tableCellPlainSelectedBackgroundColor( );

// Signature from Objective-C Runtime: @ tableCellGroupedSelectedBackgroundColor @ :
nsobject_t 			nscolor_tableCellGroupedSelectedBackgroundColor( );

// Signature from Objective-C Runtime: @ tableCellHighlightedBackgroundColor @ :
nsobject_t 			nscolor_tableCellHighlightedBackgroundColor( );

// Signature from Objective-C Runtime: @ tableCellFocusedBackgroundColor @ :
nsobject_t 			nscolor_tableCellFocusedBackgroundColor( );

// Signature from Objective-C Runtime: @ tableCellDisabledBackgroundColor @ :
nsobject_t 			nscolor_tableCellDisabledBackgroundColor( );

// Signature from Objective-C Runtime: @ pinStripeColor @ :
nsobject_t 			nscolor_pinStripeColor( );

// Signature from Objective-C Runtime: @ selectionGrabberColor @ :
nsobject_t 			nscolor_selectionGrabberColor( );

// Signature from Objective-C Runtime: @ lightTextColor @ :
nsobject_t 			nscolor_lightTextColor( );

// Signature from Objective-C Runtime: @ darkTextColor @ :
nsobject_t 			nscolor_darkTextColor( );

// Signature from Objective-C Runtime: @ systemMintColor @ :
nsobject_t 			nscolor_systemMintColor( );

// Signature from Objective-C Runtime: @ systemCyanColor @ :
nsobject_t 			nscolor_systemCyanColor( );

// Signature from Objective-C Runtime: @ systemTealColor @ :
nsobject_t 			nscolor_systemTealColor( );

// Signature from Objective-C Runtime: @ systemMidGrayColor @ :
nsobject_t 			nscolor_systemMidGrayColor( );

// Signature from Objective-C Runtime: @ systemPurpleColor @ :
nsobject_t 			nscolor_systemPurpleColor( );

// Signature from Objective-C Runtime: @ systemDarkRedColor @ :
nsobject_t 			nscolor_systemDarkRedColor( );

// Signature from Objective-C Runtime: @ systemDarkOrangeColor @ :
nsobject_t 			nscolor_systemDarkOrangeColor( );

// Signature from Objective-C Runtime: @ systemDarkYellowColor @ :
nsobject_t 			nscolor_systemDarkYellowColor( );

// Signature from Objective-C Runtime: @ systemDarkTealColor @ :
nsobject_t 			nscolor_systemDarkTealColor( );

// Signature from Objective-C Runtime: @ systemDarkPinkColor @ :
nsobject_t 			nscolor_systemDarkPinkColor( );

// Signature from Objective-C Runtime: @ systemDarkPurpleColor @ :
nsobject_t 			nscolor_systemDarkPurpleColor( );

// Signature from Objective-C Runtime: @ systemExtraLightGrayColor @ :
nsobject_t 			nscolor_systemExtraLightGrayColor( );

// Signature from Objective-C Runtime: @ systemLightGrayColor @ :
nsobject_t 			nscolor_systemLightGrayColor( );

// Signature from Objective-C Runtime: @ systemLightMidGrayColor @ :
nsobject_t 			nscolor_systemLightMidGrayColor( );

// Signature from Objective-C Runtime: @ systemBlackColor @ :
nsobject_t 			nscolor_systemBlackColor( );

// Signature from Objective-C Runtime: @ systemDarkExtraLightGrayColor @ :
nsobject_t 			nscolor_systemDarkExtraLightGrayColor( );

// Signature from Objective-C Runtime: @ systemDarkLightGrayColor @ :
nsobject_t 			nscolor_systemDarkLightGrayColor( );

// Signature from Objective-C Runtime: @ systemDarkLightMidGrayColor @ :
nsobject_t 			nscolor_systemDarkLightMidGrayColor( );

// Signature from Objective-C Runtime: @ systemDarkMidGrayColor @ :
nsobject_t 			nscolor_systemDarkMidGrayColor( );

// Signature from Objective-C Runtime: @ systemExtraLightGrayTintColor @ :
nsobject_t 			nscolor_systemExtraLightGrayTintColor( );

// Signature from Objective-C Runtime: @ systemLightGrayTintColor @ :
nsobject_t 			nscolor_systemLightGrayTintColor( );

// Signature from Objective-C Runtime: @ systemLightMidGrayTintColor @ :
nsobject_t 			nscolor_systemLightMidGrayTintColor( );

// Signature from Objective-C Runtime: @ systemMidGrayTintColor @ :
nsobject_t 			nscolor_systemMidGrayTintColor( );

// Signature from Objective-C Runtime: @ systemGrayTintColor @ :
nsobject_t 			nscolor_systemGrayTintColor( );

// Signature from Objective-C Runtime: @ systemDarkExtraLightGrayTintColor @ :
nsobject_t 			nscolor_systemDarkExtraLightGrayTintColor( );

// Signature from Objective-C Runtime: @ systemDarkLightGrayTintColor @ :
nsobject_t 			nscolor_systemDarkLightGrayTintColor( );

// Signature from Objective-C Runtime: @ systemDarkLightMidGrayTintColor @ :
nsobject_t 			nscolor_systemDarkLightMidGrayTintColor( );

// Signature from Objective-C Runtime: @ systemDarkMidGrayTintColor @ :
nsobject_t 			nscolor_systemDarkMidGrayTintColor( );

// Signature from Objective-C Runtime: @ systemDarkGrayTintColor @ :
nsobject_t 			nscolor_systemDarkGrayTintColor( );

// Signature from Objective-C Runtime: @ externalSystemGreenColor @ :
nsobject_t 			nscolor_externalSystemGreenColor( );

// Signature from Objective-C Runtime: @ tableCellBlueTextColor @ :
nsobject_t 			nscolor_tableCellBlueTextColor( );

// Signature from Objective-C Runtime: @ tableGroupedSeparatorLightColor @ :
nsobject_t 			nscolor_tableGroupedSeparatorLightColor( );

// Signature from Objective-C Runtime: @ tableSeparatorLightColor @ :
nsobject_t 			nscolor_tableSeparatorLightColor( );

// Signature from Objective-C Runtime: @ groupTableViewBackgroundColor @ :
nsobject_t 			nscolor_groupTableViewBackgroundColor( );

// Signature from Objective-C Runtime: @ viewFlipsideBackgroundColor @ :
nsobject_t 			nscolor_viewFlipsideBackgroundColor( );

// Signature from Objective-C Runtime: @ underPageBackgroundColor @ :
nsobject_t 			nscolor_underPageBackgroundColor( );

// Signature from Objective-C Runtime: @ scrollViewTexturedBackgroundColor @ :
nsobject_t 			nscolor_scrollViewTexturedBackgroundColor( );

// Signature from Objective-C Runtime: @ noContentLightGradientBackgroundColor @ :
nsobject_t 			nscolor_noContentLightGradientBackgroundColor( );

// Signature from Objective-C Runtime: @ noContentDarkGradientBackgroundColor @ :
nsobject_t 			nscolor_noContentDarkGradientBackgroundColor( );

// Signature from Objective-C Runtime: @ systemIndigoColor @ :
nsobject_t 			nscolor_systemIndigoColor( );

// Signature from Objective-C Runtime: @ systemBrownColor @ :
nsobject_t 			nscolor_systemBrownColor( );

// Signature from Objective-C Runtime: @ quaternaryLabelColor @ :
nsobject_t 			nscolor_quaternaryLabelColor( );

// Signature from Objective-C Runtime: @ placeholderTextColor @ :
nsobject_t 			nscolor_placeholderTextColor( );

// Signature from Objective-C Runtime: @ opaqueSeparatorColor @ :
nsobject_t 			nscolor_opaqueSeparatorColor( );

// Signature from Objective-C Runtime: @ quaternarySystemFillColor @ :
nsobject_t 			nscolor_quaternarySystemFillColor( );

// Signature from Objective-C Runtime: @ systemGray2Color @ :
nsobject_t 			nscolor_systemGray2Color( );

// Signature from Objective-C Runtime: @ systemGray3Color @ :
nsobject_t 			nscolor_systemGray3Color( );

// Signature from Objective-C Runtime: @ systemGray4Color @ :
nsobject_t 			nscolor_systemGray4Color( );

// Signature from Objective-C Runtime: @ systemGray5Color @ :
nsobject_t 			nscolor_systemGray5Color( );

// Signature from Objective-C Runtime: @ systemGray6Color @ :
nsobject_t 			nscolor_systemGray6Color( );

// Signature from Objective-C Runtime: @ tableSeparatorColor @ :
nsobject_t 			nscolor_tableSeparatorColor( );

// Signature from Objective-C Runtime: @ colorNamed:inBundle:compatibleWithTraitCollection: @ : @ @ @
nsobject_t 			nscolor_colorNamed( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ colorWithCIColor: @ : @
nsobject_t 			nscolor_colorWithCIColor( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ textFieldAtomBlueColor @ :
nsobject_t 			nscolor_textFieldAtomBlueColor( );

// Signature from Objective-C Runtime: v load @ :
void 				nscolor_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nscolor_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				nscolor_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nscolor_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				nscolor_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nscolor_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				nscolor_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nscolor_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nscolor_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nscolor_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nscolor_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nscolor_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nscolor_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				nscolor_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				nscolor_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nscolor_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				nscolor_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				nscolor_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nscolor_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nscolor_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nscolor_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nscolor_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nscolor_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nscolor_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nscolor_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				nscolor_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				nscolor_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nscolor_t 			nscolor_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nscolor_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				nscolor_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				nscolor_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				nscolor_instancesRespondToSelector( nsselector_t arg0 );

#endif