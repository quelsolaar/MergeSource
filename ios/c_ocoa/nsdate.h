/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSDATE_HEADER
#define SHIMMER_C_OCOA_NSDATE_HEADER

typedef void*	nsdate_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsdate_classForCoder( nsdate_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsdate_encodeWithCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsdate_initWithCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsdate_replacementObjectForPortCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dateWithCalendarFormat:timeZone: @ : @ @
nsobject_t 			nsdate_dateWithCalendarFormat( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionWithCalendarFormat:timeZone:locale: @ : @ @ @
nsobject_t 			nsdate_descriptionWithCalendarFormat( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: d bucketToRoundingFactor: @ : I
double 				nsdate_bucketToRoundingFactor( nsdate_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: d timeIntervalSince1970WithBucket: @ : I
double 				nsdate_timeIntervalSince1970WithBucket( nsdate_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: v sqliteBind:index: @ : ^{sqlite3_stmt=} i
void 				nsdate_sqliteBind( nsdate_t object, sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: i daysSince1970 @ :
int 				nsdate_daysSince1970( nsdate_t object );

// Signature from Objective-C Runtime: B isAfterDate: @ : @
bool 				nsdate_isAfterDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isBeforeDate: @ : @
bool 				nsdate_isBeforeDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_dateByAddingDays: @ : q
nsobject_t 			nsdate_bs_dateByAddingDays( nsdate_t object, long long arg0 );

// Signature from Objective-C Runtime: @ cat_internetTimeString @ :
nsobject_t 			nsdate_cat_internetTimeString( nsdate_t object );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				nsdate_isNSDate__( nsdate_t object );

// Signature from Objective-C Runtime: d timeIntervalSince1970 @ :
double 				nsdate_timeIntervalSince1970( nsdate_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				nsdate_isEqual( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsdate_hash( nsdate_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsdate_description( nsdate_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsdate_copyWithZone( nsdate_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: q compare: @ : @
long long 			nsdate_compare( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ descriptionWithLocale: @ : @
nsobject_t 			nsdate_descriptionWithLocale( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeIntervalSinceReferenceDate @ :
double 				nsdate_timeIntervalSinceReferenceDate( nsdate_t object );

// Signature from Objective-C Runtime: @ initWithTimeIntervalSinceReferenceDate: @ : d
nsobject_t 			nsdate_initWithTimeIntervalSinceReferenceDate( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: B isEqualToDate: @ : @
bool 				nsdate_isEqualToDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithString: @ : @
nsobject_t 			nsdate_initWithString( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dateByAddingTimeInterval: @ : d
nsobject_t 			nsdate_dateByAddingTimeInterval( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ earlierDate: @ : @
nsobject_t 			nsdate_earlierDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ laterDate: @ : @
nsobject_t 			nsdate_laterDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeIntervalSinceDate: @ : @
double 				nsdate_timeIntervalSinceDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeIntervalSinceNow @ :
double 				nsdate_timeIntervalSinceNow( nsdate_t object );

// Signature from Objective-C Runtime: @ initWithTimeIntervalSinceNow: @ : d
nsobject_t 			nsdate_initWithTimeIntervalSinceNow( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ initWithTimeIntervalSince1970: @ : d
nsobject_t 			nsdate_initWithTimeIntervalSince1970( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ initWithTimeInterval:sinceDate: @ : d @
nsobject_t 			nsdate_initWithTimeInterval( nsdate_t object, double arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ initWithDate: @ : @
nsobject_t 			nsdate_initWithDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addTimeInterval: @ : d
nsobject_t 			nsdate_addTimeInterval( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: B isInToday @ :
bool 				nsdate_isInToday( nsdate_t object );

// Signature from Objective-C Runtime: B isInTomorrow @ :
bool 				nsdate_isInTomorrow( nsdate_t object );

// Signature from Objective-C Runtime: B isInYesterday @ :
bool 				nsdate_isInYesterday( nsdate_t object );

// Signature from Objective-C Runtime: B isInSameDayAsDate: @ : @
bool 				nsdate_isInSameDayAsDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsdate_replacementObjectForCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsdate_awakeAfterUsingCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				nsdate_implementsSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsdate_setObservationInfo( nsdate_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsdate_setValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsdate_willChangeValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsdate_didChangeValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsdate_replacementObjectForArchiver( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsdate_classForArchiver( nsdate_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsdate_valueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsdate_classForKeyedArchiver( nsdate_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsdate_replacementObjectForKeyedArchiver( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsdate_methodDescriptionForSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsdate_valueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsdate_mutableArrayValueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsdate_mutableOrderedSetValueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsdate_mutableSetValueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			nsdate_addObserver( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsdate_removeObservation( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsdate_receiveObservedValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsdate_receiveObservedError( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsdate_finishObserving( nsdate_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsdate_setObservation( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsdate_observeValueForKeyPath( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsdate_removeObserver( nsdate_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsdate_addChainedObservers( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsdate_addObserverBlock( nsdate_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsdate_addObservationTransformer( nsdate_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsdate_valueForUndefinedKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsdate_setNilValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsdate_mutableArrayValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsdate_mutableOrderedSetValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsdate_mutableSetValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsdate_dictionaryWithValuesForKeys( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsdate_setValuesForKeysWithDictionary( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsdate_willChange( nsdate_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsdate_didChange( nsdate_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsdate_observationInfo( nsdate_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsdate_autoContentAccessingProxy( nsdate_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsdate_classForPortCoder( nsdate_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsdate_performSelector( nsdate_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				nsdate_performSelectorOnMainThread( nsdate_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsdate_performSelectorInBackground( nsdate_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				nsdate_isNSString__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				nsdate_isNSCFConstantString__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				nsdate_isNSNumber__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				nsdate_isNSArray__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				nsdate_isNSDictionary__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				nsdate_isNSData__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				nsdate_isNSObject__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				nsdate_isNSOrderedSet__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				nsdate_isNSSet__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				nsdate_isNSTimeZone__( nsdate_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				nsdate_isNSValue__( nsdate_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsdate_doesNotRecognizeSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsdate_methodSignatureForSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsdate_className( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsdate_accessibilityLabel( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsdate_setAccessibilityLabel( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsdate_setAccessibilityIdentifier( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsdate_accessibilityFrame( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			nsdate_storedAccessibilityViewIsModal( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			nsdate_storedAccessibilityElementsHidden( nsdate_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			nsdate_storedShouldGroupAccessibilityChildren( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			nsdate_storedAccessibilityNavigationStyle( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			nsdate_storedAccessibilityRespondsToUserInteraction( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			nsdate_accessibilityAttributedLabel( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsdate_accessibilityValue( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			nsdate_accessibilityAttributedValue( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			nsdate_accessibilityHint( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			nsdate_accessibilityAttributedHint( nsdate_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsdate_accessibilityActivationPoint( nsdate_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	nsdate_accessibilityTraits( nsdate_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				nsdate_isAccessibilityElement( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			nsdate_accessibilityContainer( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			nsdate_accessibilityLanguage( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			nsdate_accessibilityPath( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				nsdate_accessibilityViewIsModal( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				nsdate_accessibilityElementsHidden( nsdate_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				nsdate_shouldGroupAccessibilityChildren( nsdate_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			nsdate_accessibilityNavigationStyle( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				nsdate_accessibilityRespondsToUserInteraction( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsdate_accessibilityUserInputLabels( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsdate_accessibilityAttributedUserInputLabels( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			nsdate_storedAccessibilityIdentifier( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			nsdate_storedAccessibilityTraits( nsdate_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			nsdate_storedIsAccessibilityElement( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			nsdate_storedAccessibilityFrame( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			nsdate_storedAccessibilityActivationPoint( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			nsdate_accessibilityHeaderElements( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				nsdate_setAccessibilityElementsHidden( nsdate_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				nsdate_setAccessibilityViewIsModal( nsdate_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				nsdate_setAccessibilityAttributedLabel( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsdate_setAccessibilityValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				nsdate_setAccessibilityAttributedValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				nsdate_setAccessibilityHint( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				nsdate_setAccessibilityAttributedHint( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsdate_setAccessibilityFrame( nsdate_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				nsdate_setAccessibilityPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsdate_setAccessibilityActivationPoint( nsdate_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				nsdate_setAccessibilityTraits( nsdate_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				nsdate_setIsAccessibilityElement( nsdate_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				nsdate_setAccessibilityContainer( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				nsdate_setAccessibilityLanguage( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				nsdate_setShouldGroupAccessibilityChildren( nsdate_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				nsdate_setAccessibilityNavigationStyle( nsdate_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				nsdate_setAccessibilityRespondsToUserInteraction( nsdate_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsdate_setAccessibilityUserInputLabels( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsdate_setAccessibilityAttributedUserInputLabels( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			nsdate_accessibilityTextualContext( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				nsdate_setAccessibilityTextualContext( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				nsdate_setAccessibilityHeaderElements( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				nsdate_accessibilityElementDidBecomeFocused( nsdate_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				nsdate_accessibilityElementDidLoseFocus( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				nsdate_accessibilityElementIsFocused( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			nsdate_accessibilityAssistiveTechnologyFocusedIdentifiers( nsdate_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				nsdate_accessibilityIncrement( nsdate_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				nsdate_accessibilityDecrement( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				nsdate_accessibilityScroll( nsdate_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				nsdate_accessibilityPerformEscape( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				nsdate_accessibilityPerformMagicTap( nsdate_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				nsdate_accessibilityActivate( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsdate_setAccessibilityCustomActions( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsdate_accessibilityCustomActions( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			nsdate_accessibilityIdentification( nsdate_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				nsdate_accessibilitySetIdentification( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsdate_accessibilityIdentifier( nsdate_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	nsdate_defaultAccessibilityTraits( nsdate_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				nsdate_isAccessibilityElementByDefault( nsdate_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				nsdate_isElementAccessibilityExposedToInterfaceBuilder( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			nsdate_accessibilityLocalizedStringKey( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				nsdate_setAccessibilityDragSourceDescriptors( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			nsdate_accessibilityDragSourceDescriptors( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				nsdate_setAccessibilityDropPointDescriptors( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			nsdate_accessibilityDropPointDescriptors( nsdate_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			nsdate_storedAccessibilityContainerType( nsdate_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			nsdate_accessibilityElementCount( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			nsdate_accessibilityElementAtIndex( nsdate_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			nsdate_indexOfAccessibilityElement( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			nsdate_accessibilityElements( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				nsdate_setAccessibilityElements( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsdate_accessibilityContainerType( nsdate_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsdate_setAccessibilityContainerType( nsdate_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsdate_setAccessibilityCustomRotors( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsdate_accessibilityCustomRotors( nsdate_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			nsdate_uiPresentationManager( nsdate_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsdate_awakeFromNib( nsdate_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				nsdate_conformsToProtocolCached( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsdate_prepareForInterfaceBuilder( nsdate_t object );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsdate_CA_distanceToValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			nsdate_CA_copyRenderValueWithColorspace( nsdate_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			nsdate_CA_copyRenderValue( nsdate_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsdate_CA_interpolateValue( nsdate_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsdate_CA_addValue( nsdate_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				nsdate_CAMLTypeSupportedForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsdate_CAMLTypeForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				nsdate_CA_validateValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsdate_encodeWithCAMLWriter( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			nsdate_CA_interpolateValues( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsdate_CAMLType( nsdate_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsdate_CA_prepareRenderValue( nsdate_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsdate_CA_archivingValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsdate_CA_roundToIntegerFromValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			nsdate_initFromPQLResultSet( nsdate_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				nsdate_supportsRBSXPCSecureCoding( nsdate_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				nsdate_RBSIsXPCObject( nsdate_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsdate_NSRepresentation( nsdate_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			nsdate_pep_onMainThread( nsdate_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			nsdate_pep_onThread( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			nsdate_pep_onOperationQueue( nsdate_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			nsdate_pep_onMainThreadIfNecessary( nsdate_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			nsdate_pep_afterDelay( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			nsdate_pep_getInvocation( nsdate_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			nsdate_stringValueSafe( nsdate_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				nsdate_utf8ValueSafe( nsdate_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				nsdate_boolValueSafe( nsdate_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			nsdate_int64ValueSafe( nsdate_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				nsdate_doubleValueSafe( nsdate_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				nsdate_un_safeBoolValue( nsdate_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				nsdate_supportsBSXPCSecureCoding( nsdate_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				nsdate_bs_isPlistableType( nsdate_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsdate_bs_secureEncoded( nsdate_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsdate_bs_encoded( nsdate_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				nsdate_releaseOnMainThread( nsdate_t object );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				nsdate_isProxy( nsdate_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsdate_retainCount( nsdate_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsdate_dealloc( nsdate_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsdate_class( nsdate_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsdate_self( nsdate_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				nsdate_isKindOfClass( nsdate_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				nsdate_isMemberOfClass( nsdate_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				nsdate_conformsToProtocol( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				nsdate_respondsToSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsdate_retain( nsdate_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsdate_autorelease( nsdate_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsdate_zone( nsdate_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsdate_superclass( nsdate_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsdate_debugDescription( nsdate_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsdate_init( nsdate_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				nsdate_retainWeakReference( nsdate_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				nsdate_allowsWeakReference( nsdate_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsdate_copy( nsdate_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsdate_finalize( nsdate_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				nsdate_isFault( nsdate_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsdate_forwardInvocation( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsdate_forwardingTargetForSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsdate_mutableCopy( nsdate_t object );

// Signature from Objective-C Runtime: @ dateWithNaturalLanguageString:date:locale: @ : @ @ @
nsobject_t 			nsdate_dateWithNaturalLanguageString( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ newFromSqliteValue: @ : ^{sqlite3_value=}
nsobject_t 			nsdate_newFromSqliteValue( sqlite3_value* arg0 );

// Signature from Objective-C Runtime: @ newFromSqliteStatement:atIndex: @ : ^{sqlite3_stmt=} i
nsobject_t 			nsdate_newFromSqliteStatement( sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: @ dateForDaysSince1970: @ : i
nsobject_t 			nsdate_dateForDaysSince1970( int arg0 );

// Signature from Objective-C Runtime: @ cat_dateWithInternetTimeString: @ : @
nsobject_t 			nsdate_cat_dateWithInternetTimeString( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ cat_dateWithObject: @ : @
nsobject_t 			nsdate_cat_dateWithObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ cat_RFC3339Formatters @ :
nsobject_t 			nsdate_cat_RFC3339Formatters( );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsdate_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B supportsSecureCoding @ :
bool 				nsdate_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ dateWithTimeIntervalSinceReferenceDate: @ : d
nsobject_t 			nsdate_dateWithTimeIntervalSinceReferenceDate( double arg0 );

// Signature from Objective-C Runtime: @ distantFuture @ :
nsobject_t 			nsdate_distantFuture( );

// Signature from Objective-C Runtime: @ distantPast @ :
nsobject_t 			nsdate_distantPast( );

// Signature from Objective-C Runtime: @ now @ :
nsobject_t 			nsdate_now( );

// Signature from Objective-C Runtime: @ date @ :
nsobject_t 			nsdate_date( );

// Signature from Objective-C Runtime: @ dateWithTimeIntervalSinceNow: @ : d
nsobject_t 			nsdate_dateWithTimeIntervalSinceNow( double arg0 );

// Signature from Objective-C Runtime: @ dateWithTimeIntervalSince1970: @ : d
nsobject_t 			nsdate_dateWithTimeIntervalSince1970( double arg0 );

// Signature from Objective-C Runtime: @ dateWithTimeInterval:sinceDate: @ : d @
nsobject_t 			nsdate_dateWithTimeInterval( double arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ dateWithDate: @ : @
nsobject_t 			nsdate_dateWithDate( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dateWithString: @ : @
nsobject_t 			nsdate_dateWithString( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsdate_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsdate_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				nsdate_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsdate_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				nsdate_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsdate_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				nsdate_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsdate_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsdate_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsdate_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsdate_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsdate_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsdate_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsdate_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				nsdate_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				nsdate_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsdate_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				nsdate_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				nsdate_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsdate_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsdate_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsdate_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsdate_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsdate_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsdate_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsdate_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsdate_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				nsdate_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				nsdate_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsdate_t 			nsdate_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsdate_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				nsdate_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				nsdate_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				nsdate_instancesRespondToSelector( nsselector_t arg0 );

#endif