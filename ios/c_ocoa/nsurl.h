/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSURL_HEADER
#define SHIMMER_C_OCOA_NSURL_HEADER

typedef void*	nsurl_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ fallback_debugHierarchyValueWithOutOptions:outError: @ : ^@ ^@
nsobject_t 			nsurl_fallback_debugHierarchyValueWithOutOptions( nsurl_t object, nsobject_t* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsurl_retainCount( nsurl_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsurl_dealloc( nsurl_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				nsurl_isEqual( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				nsurl_isKindOfClass( nsurl_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				nsurl_isMemberOfClass( nsurl_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsurl_retain( nsurl_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsurl_hash( nsurl_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsurl_description( nsurl_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsurl_init( nsurl_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsurl_copyWithZone( nsurl_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsurl_encodeWithCoder( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsurl_initWithCoder( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFileURLWithPath: @ : @
nsobject_t 			nsurl_initFileURLWithPath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ absoluteURL @ :
nsobject_t 			nsurl_absoluteURL( nsurl_t object );

// Signature from Objective-C Runtime: @ relativeString @ :
nsobject_t 			nsurl_relativeString( nsurl_t object );

// Signature from Objective-C Runtime: @ baseURL @ :
nsobject_t 			nsurl_baseURL( nsurl_t object );

// Signature from Objective-C Runtime: @ scheme @ :
nsobject_t 			nsurl_scheme( nsurl_t object );

// Signature from Objective-C Runtime: @ host @ :
nsobject_t 			nsurl_host( nsurl_t object );

// Signature from Objective-C Runtime: @ port @ :
nsobject_t 			nsurl_port( nsurl_t object );

// Signature from Objective-C Runtime: @ user @ :
nsobject_t 			nsurl_user( nsurl_t object );

// Signature from Objective-C Runtime: @ password @ :
nsobject_t 			nsurl_password( nsurl_t object );

// Signature from Objective-C Runtime: @ parameterString @ :
nsobject_t 			nsurl_parameterString( nsurl_t object );

// Signature from Objective-C Runtime: @ query @ :
nsobject_t 			nsurl_query( nsurl_t object );

// Signature from Objective-C Runtime: @ fragment @ :
nsobject_t 			nsurl_fragment( nsurl_t object );

// Signature from Objective-C Runtime: @ initWithString: @ : @
nsobject_t 			nsurl_initWithString( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dataRepresentation @ :
nsobject_t 			nsurl_dataRepresentation( nsurl_t object );

// Signature from Objective-C Runtime: @ absoluteString @ :
nsobject_t 			nsurl_absoluteString( nsurl_t object );

// Signature from Objective-C Runtime: @ resourceSpecifier @ :
nsobject_t 			nsurl_resourceSpecifier( nsurl_t object );

// Signature from Objective-C Runtime: @ path @ :
nsobject_t 			nsurl_path( nsurl_t object );

// Signature from Objective-C Runtime: @ relativePath @ :
nsobject_t 			nsurl_relativePath( nsurl_t object );

// Signature from Objective-C Runtime: B hasDirectoryPath @ :
bool 				nsurl_hasDirectoryPath( nsurl_t object );

// Signature from Objective-C Runtime: r* fileSystemRepresentation @ :
char* 				nsurl_fileSystemRepresentation( nsurl_t object );

// Signature from Objective-C Runtime: @ standardizedURL @ :
nsobject_t 			nsurl_standardizedURL( nsurl_t object );

// Signature from Objective-C Runtime: @ lastPathComponent @ :
nsobject_t 			nsurl_lastPathComponent( nsurl_t object );

// Signature from Objective-C Runtime: @ URLByDeletingLastPathComponent @ :
nsobject_t 			nsurl_URLByDeletingLastPathComponent( nsurl_t object );

// Signature from Objective-C Runtime: B isFileURL @ :
bool 				nsurl_isFileURL( nsurl_t object );

// Signature from Objective-C Runtime: B getFileSystemRepresentation:maxLength: @ : * Q
bool 				nsurl_getFileSystemRepresentation( nsurl_t object, char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ pathExtension @ :
nsobject_t 			nsurl_pathExtension( nsurl_t object );

// Signature from Objective-C Runtime: @ pathComponents @ :
nsobject_t 			nsurl_pathComponents( nsurl_t object );

// Signature from Objective-C Runtime: @ URLByAppendingPathComponent:isDirectory: @ : @ B
nsobject_t 			nsurl_URLByAppendingPathComponent( nsurl_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: B checkPromisedItemIsReachableAndReturnError: @ : ^@
bool 				nsurl_checkPromisedItemIsReachableAndReturnError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ promisedItemResourceValuesForKeys:error: @ : @ ^@
nsobject_t 			nsurl_promisedItemResourceValuesForKeys( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ writableTypeIdentifiersForItemProvider @ :
nsobject_t 			nsurl_writableTypeIdentifiersForItemProvider( nsurl_t object );

// Signature from Objective-C Runtime: @ loadDataWithTypeIdentifier:forItemProviderCompletionHandler: @ : @ @?
nsobject_t 			nsurl_loadDataWithTypeIdentifier( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ initWithDataRepresentation:relativeToURL: @ : @ @
nsobject_t 			nsurl_initWithDataRepresentation( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ initAbsoluteURLWithDataRepresentation:relativeToURL: @ : @ @
nsobject_t 			nsurl_initAbsoluteURLWithDataRepresentation( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL: @ : r* B @
nsobject_t 			nsurl_initFileURLWithFileSystemRepresentation( nsurl_t object, char* arg0, bool arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error: @ : @ Q @ ^B ^@
nsobject_t 			nsurl_initByResolvingBookmarkData( nsurl_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2, bool* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: @ initByResolvingAliasFileAtURL:options:error: @ : @ Q ^@
nsobject_t 			nsurl_initByResolvingAliasFileAtURL( nsurl_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ initWithScheme:host:path: @ : @ @ @
nsobject_t 			nsurl_initWithScheme( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ URLByStandardizingPath @ :
nsobject_t 			nsurl_URLByStandardizingPath( nsurl_t object );

// Signature from Objective-C Runtime: @ URLByResolvingSymlinksInPath @ :
nsobject_t 			nsurl_URLByResolvingSymlinksInPath( nsurl_t object );

// Signature from Objective-C Runtime: @ URLByAppendingPathExtension: @ : @
nsobject_t 			nsurl_URLByAppendingPathExtension( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ URLByDeletingPathExtension @ :
nsobject_t 			nsurl_URLByDeletingPathExtension( nsurl_t object );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsurl_encodeWithCAMLWriter( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsurl_CAMLType( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_withReadWriteAccess: @ : @?
nsobject_t 			nsurl_fp_withReadWriteAccess( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fp_shortDescription @ :
nsobject_t 			nsurl_fp_shortDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_existingURLOfChildWithName:notMatchingFileID:maximumBounceNumber:forceFetchingBounceNumber: @ : @ @ ^@ B
nsobject_t 			nsurl_fp_existingURLOfChildWithName( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, bool arg3 );

// Signature from Objective-C Runtime: B fp_moveUnderFolder:withNewName:coordinationOptions:allowBounce:allowCoordination:completionHandler: @ : @ @ Q B B @?
bool 				nsurl_fp_moveUnderFolder( nsurl_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, bool arg3, bool arg4, nsobject_t* arg5 );

// Signature from Objective-C Runtime: @? fp_defaultMoverBlock @ :
nsobject_t* 		nsurl_fp_defaultMoverBlock( nsurl_t object );

// Signature from Objective-C Runtime: B fp_importUnderFolder:allowCoordination:usingBlock:completionHandler: @ : @ B @? @?
bool 				nsurl_fp_importUnderFolder( nsurl_t object, nsobject_t arg0, bool arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v fp_hideExtension: @ : B
void 				nsurl_fp_hideExtension( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: B fp_reparentUnderFolder:withNewName:allowCoordination:completionHandler: @ : @ @ B @?
bool 				nsurl_fp_reparentUnderFolder( nsurl_t object, nsobject_t arg0, nsobject_t arg1, bool arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: B fp_trashUnderFolder:allowCoordination:completionHandler: @ : @ B @?
bool 				nsurl_fp_trashUnderFolder( nsurl_t object, nsobject_t arg0, bool arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: B fp_renameWithNewName:allowCoordination:completionHandler: @ : @ B @?
bool 				nsurl_fp_renameWithNewName( nsurl_t object, nsobject_t arg0, bool arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ fp_addDocumentTrackingWithError: @ : ^@
nsobject_t 			nsurl_fp_addDocumentTrackingWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v fp_coordinatedDeleteWithHandler: @ : @?
void 				nsurl_fp_coordinatedDeleteWithHandler( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B fp_deleteAllowingCoordination:completionHandler: @ : B @?
bool 				nsurl_fp_deleteAllowingCoordination( nsurl_t object, bool arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fp_isDatalessWithError: @ : ^@
nsobject_t 			nsurl_fp_isDatalessWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B fp_createSubFolder:completionHandler: @ : @ @?
bool 				nsurl_fp_createSubFolder( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B fp_deleteWithCompletionHandler: @ : @?
bool 				nsurl_fp_deleteWithCompletionHandler( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fp_physicalURL @ :
nsobject_t 			nsurl_fp_physicalURL( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_realpathURL @ :
nsobject_t 			nsurl_fp_realpathURL( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_relativePathWithRealpath: @ : @
nsobject_t 			nsurl_fp_relativePathWithRealpath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fp_relativePathOf: @ : @
nsobject_t 			nsurl_fp_relativePathOf( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_makeWritableOnFD:error: @ : i ^@
bool 				nsurl_fp_makeWritableOnFD( nsurl_t object, int arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B fp_removeFileProviderXattrsWithError: @ : ^@
bool 				nsurl_fp_removeFileProviderXattrsWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B fp_matchesFileProviderURL: @ : @
bool 				nsurl_fp_matchesFileProviderURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_matchesApplicationContainerURL: @ : @
bool 				nsurl_fp_matchesApplicationContainerURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_matchesEDSLocation @ :
bool 				nsurl_fp_matchesEDSLocation( nsurl_t object );

// Signature from Objective-C Runtime: B fp_matchesCloudDocsURL: @ : @
bool 				nsurl_fp_matchesCloudDocsURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_matchesFPFSURL: @ : @
bool 				nsurl_fp_matchesFPFSURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_matchesLiveFilesURL: @ : @
bool 				nsurl_fp_matchesLiveFilesURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_matchesAlternateContentsURL: @ : @
bool 				nsurl_fp_matchesAlternateContentsURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_isInSyncableRootFast @ :
bool 				nsurl_fp_isInSyncableRootFast( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_issueSandboxExtensionOfClass:report:error: @ : r* B ^@
nsobject_t 			nsurl_fp_issueSandboxExtensionOfClass( nsurl_t object, char* arg0, bool arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ fp_scopeDescription @ :
nsobject_t 			nsurl_fp_scopeDescription( nsurl_t object );

// Signature from Objective-C Runtime: q fp_relationshipToItemAtURL: @ : @
long long 			nsurl_fp_relationshipToItemAtURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_isSymlink @ :
bool 				nsurl_fp_isSymlink( nsurl_t object );

// Signature from Objective-C Runtime: B fp_isFolder @ :
bool 				nsurl_fp_isFolder( nsurl_t object );

// Signature from Objective-C Runtime: B fp_isPackage @ :
bool 				nsurl_fp_isPackage( nsurl_t object );

// Signature from Objective-C Runtime: B fp_removeACLWithError: @ : ^@
bool 				nsurl_fp_removeACLWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B fp_makeWritableWithError: @ : ^@
bool 				nsurl_fp_makeWritableWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v fp_makeWritableAndRemoveNonExportableAttributes @ :
void 				nsurl_fp_makeWritableAndRemoveNonExportableAttributes( nsurl_t object );

// Signature from Objective-C Runtime: B fp_checkSandboxFileMetadataRead @ :
bool 				nsurl_fp_checkSandboxFileMetadataRead( nsurl_t object );

// Signature from Objective-C Runtime: v fp_attachSecurityScopeFromURL: @ : @
void 				nsurl_fp_attachSecurityScopeFromURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B fp_associateThumbnailFromDocumentAtURL:error: @ : @ ^@
bool 				nsurl_fp_associateThumbnailFromDocumentAtURL( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fp_directorySizeWithError: @ : ^@
nsobject_t 			nsurl_fp_directorySizeWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fp_moveToTempFolderWithFilename:error: @ : @ ^@
nsobject_t 			nsurl_fp_moveToTempFolderWithFilename( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B fp_isAppInboxOrDescendants @ :
bool 				nsurl_fp_isAppInboxOrDescendants( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_fpfsRootURL @ :
nsobject_t 			nsurl_fp_fpfsRootURL( nsurl_t object );

// Signature from Objective-C Runtime: B fp_matchesFileProviderHeuristics: @ : I
bool 				nsurl_fp_matchesFileProviderHeuristics( nsurl_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: @ fp_matchesUbiquitousHeuristics @ :
nsobject_t 			nsurl_fp_matchesUbiquitousHeuristics( nsurl_t object );

// Signature from Objective-C Runtime: @ fp_copyToURL:queue:precomputedItemSize:replacePlaceholder:completion: @ : @ @ Q B @?
nsobject_t 			nsurl_fp_copyToURL( nsurl_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, bool arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: B fp_getSize:error: @ : ^Q ^@
bool 				nsurl_fp_getSize( nsurl_t object, unsigned long long* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fp_copyToTempFolderWithFilename:queue:precomputedItemSize:completion: @ : @ @ Q @?
nsobject_t 			nsurl_fp_copyToTempFolderWithFilename( nsurl_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ ui_issueSandboxExtensionOfClass:error: @ : r* ^@
nsobject_t 			nsurl_ui_issueSandboxExtensionOfClass( nsurl_t object, char* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B ui_hasSandboxExtendedForClass: @ : r*
bool 				nsurl_ui_hasSandboxExtendedForClass( nsurl_t object, char* arg0 );

// Signature from Objective-C Runtime: B ui_isFileProviderURL @ :
bool 				nsurl_ui_isFileProviderURL( nsurl_t object );

// Signature from Objective-C Runtime: @ ui_issueReadSandboxExtensionWithError: @ : ^@
nsobject_t 			nsurl_ui_issueReadSandboxExtensionWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ui_issueReadWriteSandboxExtensionWithError: @ : ^@
nsobject_t 			nsurl_ui_issueReadWriteSandboxExtensionWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B ui_hasReadSandboxExtended @ :
bool 				nsurl_ui_hasReadSandboxExtended( nsurl_t object );

// Signature from Objective-C Runtime: v ui_setIsFileProviderURL: @ : B
void 				nsurl_ui_setIsFileProviderURL( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: B ui_canOpenInPlace @ :
bool 				nsurl_ui_canOpenInPlace( nsurl_t object );

// Signature from Objective-C Runtime: B ui_isUnfulfilledPromiseURL @ :
bool 				nsurl_ui_isUnfulfilledPromiseURL( nsurl_t object );

// Signature from Objective-C Runtime: v ui_setIsContentManaged: @ : B
void 				nsurl_ui_setIsContentManaged( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: B ui_isContentManaged @ :
bool 				nsurl_ui_isContentManaged( nsurl_t object );

// Signature from Objective-C Runtime: @ ui_bookmarkForExportWithError: @ : ^@
nsobject_t 			nsurl_ui_bookmarkForExportWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v ui_scheduleForCleanup @ :
void 				nsurl_ui_scheduleForCleanup( nsurl_t object );

// Signature from Objective-C Runtime: @ ui_resolveOnDiskBookmarkAndPromise @ :
nsobject_t 			nsurl_ui_resolveOnDiskBookmarkAndPromise( nsurl_t object );

// Signature from Objective-C Runtime: @ ui_downloadOperationForActivity: @ : @
nsobject_t 			nsurl_ui_downloadOperationForActivity( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ui_URLByResolvingSymlinksAndCopyingSecurityScope @ :
nsobject_t 			nsurl_ui_URLByResolvingSymlinksAndCopyingSecurityScope( nsurl_t object );

// Signature from Objective-C Runtime: @ phobosURL @ :
nsobject_t 			nsurl_phobosURL( nsurl_t object );

// Signature from Objective-C Runtime: @ radarWebURL @ :
nsobject_t 			nsurl_radarWebURL( nsurl_t object );

// Signature from Objective-C Runtime: @ searchResultDomain @ :
nsobject_t 			nsurl_searchResultDomain( nsurl_t object );

// Signature from Objective-C Runtime: @ searchResultIdentifier @ :
nsobject_t 			nsurl_searchResultIdentifier( nsurl_t object );

// Signature from Objective-C Runtime: B isSpringboardHandledURL @ :
bool 				nsurl_isSpringboardHandledURL( nsurl_t object );

// Signature from Objective-C Runtime: B isWebcalURL @ :
bool 				nsurl_isWebcalURL( nsurl_t object );

// Signature from Objective-C Runtime: B isAccountURL @ :
bool 				nsurl_isAccountURL( nsurl_t object );

// Signature from Objective-C Runtime: B isJavaScriptURL @ :
bool 				nsurl_isJavaScriptURL( nsurl_t object );

// Signature from Objective-C Runtime: B isHTTPOrHTTPSURL @ :
bool 				nsurl_isHTTPOrHTTPSURL( nsurl_t object );

// Signature from Objective-C Runtime: B isInternalUIKitURL @ :
bool 				nsurl_isInternalUIKitURL( nsurl_t object );

// Signature from Objective-C Runtime: @ ls_preferredLocalizations @ :
nsobject_t 			nsurl_ls_preferredLocalizations( nsurl_t object );

// Signature from Objective-C Runtime: v ls_setPreferredLocalizations: @ : @
void 				nsurl_ls_setPreferredLocalizations( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isiWorkURL @ :
bool 				nsurl_isiWorkURL( nsurl_t object );

// Signature from Objective-C Runtime: B conformsToOverridePatternWithKey: @ : @
bool 				nsurl_conformsToOverridePatternWithKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ iWorkApplicationName @ :
nsobject_t 			nsurl_iWorkApplicationName( nsurl_t object );

// Signature from Objective-C Runtime: @ iWorkDocumentName @ :
nsobject_t 			nsurl_iWorkDocumentName( nsurl_t object );

// Signature from Objective-C Runtime: @ mapsURL @ :
nsobject_t 			nsurl_mapsURL( nsurl_t object );

// Signature from Objective-C Runtime: @ fmfURL @ :
nsobject_t 			nsurl_fmfURL( nsurl_t object );

// Signature from Objective-C Runtime: @ fmipURL @ :
nsobject_t 			nsurl_fmipURL( nsurl_t object );

// Signature from Objective-C Runtime: @ iTunesStoreURL @ :
nsobject_t 			nsurl_iTunesStoreURL( nsurl_t object );

// Signature from Objective-C Runtime: @ iCloudEmailPrefsURL @ :
nsobject_t 			nsurl_iCloudEmailPrefsURL( nsurl_t object );

// Signature from Objective-C Runtime: @ photosURL @ :
nsobject_t 			nsurl_photosURL( nsurl_t object );

// Signature from Objective-C Runtime: @ keynoteLiveURL @ :
nsobject_t 			nsurl_keynoteLiveURL( nsurl_t object );

// Signature from Objective-C Runtime: @ keynoteLiveURL_noFragment @ :
nsobject_t 			nsurl_keynoteLiveURL_noFragment( nsurl_t object );

// Signature from Objective-C Runtime: @ iCloudSharingURL @ :
nsobject_t 			nsurl_iCloudSharingURL( nsurl_t object );

// Signature from Objective-C Runtime: @ iCloudSharingURL_noFragment @ :
nsobject_t 			nsurl_iCloudSharingURL_noFragment( nsurl_t object );

// Signature from Objective-C Runtime: v sqliteBind:index: @ : ^{sqlite3_stmt=} i
void 				nsurl_sqliteBind( nsurl_t object, sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: @ URLByAppendingPathExtensionForType: @ : @
nsobject_t 			nsurl_URLByAppendingPathExtensionForType( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ normalizedURL @ :
nsobject_t 			nsurl_normalizedURL( nsurl_t object );

// Signature from Objective-C Runtime: @ MI_URLByAppendingPathComponents:lastIsDirectory: @ : @ B
nsobject_t 			nsurl_MI_URLByAppendingPathComponents( nsurl_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ gs_issueExtension:error: @ : r* ^@
nsobject_t 			nsurl_gs_issueExtension( nsurl_t object, char* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ gs_URLByUpdatingPathExtensionWithPathOrURL: @ : @
nsobject_t 			nsurl_gs_URLByUpdatingPathExtensionWithPathOrURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v gs_chmod: @ : S
void 				nsurl_gs_chmod( nsurl_t object, unsigned short arg0 );

// Signature from Objective-C Runtime: @ dictionaryRepresentation @ :
nsobject_t 			nsurl_dictionaryRepresentation( nsurl_t object );

// Signature from Objective-C Runtime: @ jsonData @ :
nsobject_t 			nsurl_jsonData( nsurl_t object );

// Signature from Objective-C Runtime: @ aa_endpoint @ :
nsobject_t 			nsurl_aa_endpoint( nsurl_t object );

// Signature from Objective-C Runtime: @ fa_URLByAddingQueryParams: @ : @
nsobject_t 			nsurl_fa_URLByAddingQueryParams( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fa_URLByAddingAirdropInviteParams @ :
nsobject_t 			nsurl_fa_URLByAddingAirdropInviteParams( nsurl_t object );

// Signature from Objective-C Runtime: @ cls_createDirectoryIfNeeded: @ : ^@
nsobject_t 			nsurl_cls_createDirectoryIfNeeded( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B cls_isParentOfURL: @ : @
bool 				nsurl_cls_isParentOfURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B cls_isUbiquitous @ :
bool 				nsurl_cls_isUbiquitous( nsurl_t object );

// Signature from Objective-C Runtime: v cls_removeCachedResourceValueForKeys: @ : @
void 				nsurl_cls_removeCachedResourceValueForKeys( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B cls_fileExists @ :
bool 				nsurl_cls_fileExists( nsurl_t object );

// Signature from Objective-C Runtime: @ cls_pathRelativeToURL: @ : @
nsobject_t 			nsurl_cls_pathRelativeToURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B cls_isUploaded @ :
bool 				nsurl_cls_isUploaded( nsurl_t object );

// Signature from Objective-C Runtime: v cls_checkForCKShareWithCompletion: @ : @?
void 				nsurl_cls_checkForCKShareWithCompletion( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v cls_createShareIfNeededWithOrgAdminUserRecordID:userRecordID:completion: @ : @ @ @?
void 				nsurl_cls_createShareIfNeededWithOrgAdminUserRecordID( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v cls_performWithSandboxAccess: @ : @?
void 				nsurl_cls_performWithSandboxAccess( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ CKSanitizedPath @ :
nsobject_t 			nsurl_CKSanitizedPath( nsurl_t object );

// Signature from Objective-C Runtime: @ CKURLSlug @ :
nsobject_t 			nsurl_CKURLSlug( nsurl_t object );

// Signature from Objective-C Runtime: @ CKURLThroughSlug @ :
nsobject_t 			nsurl_CKURLThroughSlug( nsurl_t object );

// Signature from Objective-C Runtime: @ CKPathAfterSlug @ :
nsobject_t 			nsurl_CKPathAfterSlug( nsurl_t object );

// Signature from Objective-C Runtime: @ CKShareURLSlugBasedApplicationName @ :
nsobject_t 			nsurl_CKShareURLSlugBasedApplicationName( nsurl_t object );

// Signature from Objective-C Runtime: @ CKBladerunnerShareURLSlugBasedApplicationBundleID @ :
nsobject_t 			nsurl_CKBladerunnerShareURLSlugBasedApplicationBundleID( nsurl_t object );

// Signature from Objective-C Runtime: v ck_bindInStatement:atIndex: @ : @ Q
void 				nsurl_ck_bindInStatement( nsurl_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ CKXPCSuitableString @ :
nsobject_t 			nsurl_CKXPCSuitableString( nsurl_t object );

// Signature from Objective-C Runtime: @ br_lastEditorDeviceName @ :
nsobject_t 			nsurl_br_lastEditorDeviceName( nsurl_t object );

// Signature from Objective-C Runtime: @ br_lastEditorNameComponents @ :
nsobject_t 			nsurl_br_lastEditorNameComponents( nsurl_t object );

// Signature from Objective-C Runtime: B br_isExternalDocumentReference @ :
bool 				nsurl_br_isExternalDocumentReference( nsurl_t object );

// Signature from Objective-C Runtime: @ br_URLByResolvingExternalDocumentReferenceWithError: @ : ^@
nsobject_t 			nsurl_br_URLByResolvingExternalDocumentReferenceWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ brc_issueSandboxExtensionOfClass:error: @ : r* ^@
nsobject_t 			nsurl_brc_issueSandboxExtensionOfClass( nsurl_t object, char* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B br_isInTrash @ :
bool 				nsurl_br_isInTrash( nsurl_t object );

// Signature from Objective-C Runtime: @ br_cloudDocsContainer @ :
nsobject_t 			nsurl_br_cloudDocsContainer( nsurl_t object );

// Signature from Objective-C Runtime: S br_capabilityToMoveToURL:error: @ : @ ^@
unsigned short 		nsurl_br_capabilityToMoveToURL( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B br_isInSyncedLocation @ :
bool 				nsurl_br_isInSyncedLocation( nsurl_t object );

// Signature from Objective-C Runtime: @ br_logicalURL @ :
nsobject_t 			nsurl_br_logicalURL( nsurl_t object );

// Signature from Objective-C Runtime: @ br_itemID @ :
nsobject_t 			nsurl_br_itemID( nsurl_t object );

// Signature from Objective-C Runtime: @ br_physicalURL @ :
nsobject_t 			nsurl_br_physicalURL( nsurl_t object );

// Signature from Objective-C Runtime: v br_addPhysicalProperty @ :
void 				nsurl_br_addPhysicalProperty( nsurl_t object );

// Signature from Objective-C Runtime: v br_bookmarkableStringWithEtag:completion: @ : B @?
void 				nsurl_br_bookmarkableStringWithEtag( nsurl_t object, bool arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ br_pathRelativeToMobileDocuments @ :
nsobject_t 			nsurl_br_pathRelativeToMobileDocuments( nsurl_t object );

// Signature from Objective-C Runtime: @ br_containerIDIfIsDocumentsContainerURL @ :
nsobject_t 			nsurl_br_containerIDIfIsDocumentsContainerURL( nsurl_t object );

// Signature from Objective-C Runtime: B br_getTagNames:error: @ : ^@ ^@
bool 				nsurl_br_getTagNames( nsurl_t object, nsobject_t* arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B br_setTagNames:error: @ : @ ^@
bool 				nsurl_br_setTagNames( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ br_lastEditorName @ :
nsobject_t 			nsurl_br_lastEditorName( nsurl_t object );

// Signature from Objective-C Runtime: @ br_addFakeConflictLoserFromItemAtURL:lastEditorDeviceName:error: @ : @ @ ^@
nsobject_t 			nsurl_br_addFakeConflictLoserFromItemAtURL( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: B br_isInLocalHomeDirectory @ :
bool 				nsurl_br_isInLocalHomeDirectory( nsurl_t object );

// Signature from Objective-C Runtime: B br_isParentOfURL:strictly: @ : @ B
bool 				nsurl_br_isParentOfURL( nsurl_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ br_pathRelativeToSyncedRootURL:currentPersonaID: @ : @ @
nsobject_t 			nsurl_br_pathRelativeToSyncedRootURL( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ br_debugDescription @ :
nsobject_t 			nsurl_br_debugDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ br_containerIDWithCurrentPersonaID: @ : @
nsobject_t 			nsurl_br_containerIDWithCurrentPersonaID( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ br_externalDocumentPropertiesWithError: @ : ^@
nsobject_t 			nsurl_br_externalDocumentPropertiesWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ br_URLByResolvingInProcessExternalDocumentReferenceWithProperties: @ : @
nsobject_t 			nsurl_br_URLByResolvingInProcessExternalDocumentReferenceWithProperties( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B br_isInCloudDocsPrivateStorages @ :
bool 				nsurl_br_isInCloudDocsPrivateStorages( nsurl_t object );

// Signature from Objective-C Runtime: @ br_realpathURL @ :
nsobject_t 			nsurl_br_realpathURL( nsurl_t object );

// Signature from Objective-C Runtime: v br_preCacheBookmarkData:versionEtag: @ : @ @
void 				nsurl_br_preCacheBookmarkData( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ br_cachedBookmarkData @ :
nsobject_t 			nsurl_br_cachedBookmarkData( nsurl_t object );

// Signature from Objective-C Runtime: v br_bookmarkableStringForRemoteOpeningAppWithBundleID:completion: @ : @ @?
void 				nsurl_br_bookmarkableStringForRemoteOpeningAppWithBundleID( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: v br_containerIDsWithExternalReferencesWithHandler: @ : @?
void 				nsurl_br_containerIDsWithExternalReferencesWithHandler( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ br_pathRelativeToSyncedRootURLForContainerID: @ : @
nsobject_t 			nsurl_br_pathRelativeToSyncedRootURLForContainerID( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B br_isInMobileDocuments @ :
bool 				nsurl_br_isInMobileDocuments( nsurl_t object );

// Signature from Objective-C Runtime: B br_isInSyncedDesktop @ :
bool 				nsurl_br_isInSyncedDesktop( nsurl_t object );

// Signature from Objective-C Runtime: B br_isInSyncedDocuments @ :
bool 				nsurl_br_isInSyncedDocuments( nsurl_t object );

// Signature from Objective-C Runtime: B br_isStrictlyInSyncedLocation @ :
bool 				nsurl_br_isStrictlyInSyncedLocation( nsurl_t object );

// Signature from Objective-C Runtime: B br_isInCloudDocsPrivateStoragesForRemoteDocumentVersions @ :
bool 				nsurl_br_isInCloudDocsPrivateStoragesForRemoteDocumentVersions( nsurl_t object );

// Signature from Objective-C Runtime: v br_isConflictedWithHandler: @ : @?
void 				nsurl_br_isConflictedWithHandler( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B br_isInSharedDocsContainer @ :
bool 				nsurl_br_isInSharedDocsContainer( nsurl_t object );

// Signature from Objective-C Runtime: @ br_containerID @ :
nsobject_t 			nsurl_br_containerID( nsurl_t object );

// Signature from Objective-C Runtime: @ br_containerIDIfIsDesktopOrDocumentsURL @ :
nsobject_t 			nsurl_br_containerIDIfIsDesktopOrDocumentsURL( nsurl_t object );

// Signature from Objective-C Runtime: B br_isDocumentsContainer @ :
bool 				nsurl_br_isDocumentsContainer( nsurl_t object );

// Signature from Objective-C Runtime: B br_mightBeBRAlias @ :
bool 				nsurl_br_mightBeBRAlias( nsurl_t object );

// Signature from Objective-C Runtime: @ br_documentRecordIDWithError: @ : ^@
nsobject_t 			nsurl_br_documentRecordIDWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B br_isPromiseURL @ :
bool 				nsurl_br_isPromiseURL( nsurl_t object );

// Signature from Objective-C Runtime: B br_setAccessTime:error: @ : Q ^@
bool 				nsurl_br_setAccessTime( nsurl_t object, unsigned long long arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ br_typeIdentifierWithError: @ : ^@
nsobject_t 			nsurl_br_typeIdentifierWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: B br_wouldBeExcludedFromSync @ :
bool 				nsurl_br_wouldBeExcludedFromSync( nsurl_t object );

// Signature from Objective-C Runtime: B br_isSymLink @ :
bool 				nsurl_br_isSymLink( nsurl_t object );

// Signature from Objective-C Runtime: B br_isTopLevelSharedItem @ :
bool 				nsurl_br_isTopLevelSharedItem( nsurl_t object );

// Signature from Objective-C Runtime: B br_isModifiedSinceShared @ :
bool 				nsurl_br_isModifiedSinceShared( nsurl_t object );

// Signature from Objective-C Runtime: @ br_creatorNameComponentsWithError: @ : ^@
nsobject_t 			nsurl_br_creatorNameComponentsWithError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ ql_realpathURL @ :
nsobject_t 			nsurl_ql_realpathURL( nsurl_t object );

// Signature from Objective-C Runtime: @ fm_preferencesPathURLForDomain: @ : @
nsobject_t 			nsurl_fm_preferencesPathURLForDomain( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ preferencesPathURLForDomain: @ : @
nsobject_t 			nsurl_preferencesPathURLForDomain( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B cs_addDocumentTracking @ :
bool 				nsurl_cs_addDocumentTracking( nsurl_t object );

// Signature from Objective-C Runtime: B cs_isInMobileDocuments @ :
bool 				nsurl_cs_isInMobileDocuments( nsurl_t object );

// Signature from Objective-C Runtime: B if_isContainedByDirectoryAtURL: @ : @
bool 				nsurl_if_isContainedByDirectoryAtURL( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ams_parameters @ :
nsobject_t 			nsurl_ams_parameters( nsurl_t object );

// Signature from Objective-C Runtime: @ ams_valueForQueryParameter: @ : @
nsobject_t 			nsurl_ams_valueForQueryParameter( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ams_URLByAppendingQueryParameters: @ : @
nsobject_t 			nsurl_ams_URLByAppendingQueryParameters( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ams_URLByDeletingTrailingSlash @ :
nsobject_t 			nsurl_ams_URLByDeletingTrailingSlash( nsurl_t object );

// Signature from Objective-C Runtime: @ ams_URLByReplacingSchemeWithScheme: @ : @
nsobject_t 			nsurl_ams_URLByReplacingSchemeWithScheme( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ams_URLByReplaceingQueryParameters: @ : @
nsobject_t 			nsurl_ams_URLByReplaceingQueryParameters( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ams_URLByAppendingQueryParameter:name: @ : @ @
nsobject_t 			nsurl_ams_URLByAppendingQueryParameter( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ ams_URLBySortingQueryParameters @ :
nsobject_t 			nsurl_ams_URLBySortingQueryParameters( nsurl_t object );

// Signature from Objective-C Runtime: @ ams_unmodifiedParameters @ :
nsobject_t 			nsurl_ams_unmodifiedParameters( nsurl_t object );

// Signature from Objective-C Runtime: @ ams_URLQueryAllowedCharacterSet @ :
nsobject_t 			nsurl_ams_URLQueryAllowedCharacterSet( nsurl_t object );

// Signature from Objective-C Runtime: @ ams_schemeSwizzledURL @ :
nsobject_t 			nsurl_ams_schemeSwizzledURL( nsurl_t object );

// Signature from Objective-C Runtime: B isFileReferenceURL @ :
bool 				nsurl_isFileReferenceURL( nsurl_t object );

// Signature from Objective-C Runtime: @ resourceValuesForKeys:error: @ : @ ^@
nsobject_t 			nsurl_resourceValuesForKeys( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B setResourceValue:forKey:error: @ : @ @ ^@
bool 				nsurl_setResourceValue( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: B setResourceValues:error: @ : @ ^@
bool 				nsurl_setResourceValues( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: v removeCachedResourceValueForKey: @ : @
void 				nsurl_removeCachedResourceValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeAllCachedResourceValues @ :
void 				nsurl_removeAllCachedResourceValues( nsurl_t object );

// Signature from Objective-C Runtime: v setTemporaryResourceValue:forKey: @ : @ @
void 				nsurl_setTemporaryResourceValue( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B checkResourceIsReachableAndReturnError: @ : ^@
bool 				nsurl_checkResourceIsReachableAndReturnError( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fileReferenceURL @ :
nsobject_t 			nsurl_fileReferenceURL( nsurl_t object );

// Signature from Objective-C Runtime: @ filePathURL @ :
nsobject_t 			nsurl_filePathURL( nsurl_t object );

// Signature from Objective-C Runtime: @ bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error: @ : Q @ @ ^@
nsobject_t 			nsurl_bookmarkDataWithOptions( nsurl_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: B startAccessingSecurityScopedResource @ :
bool 				nsurl_startAccessingSecurityScopedResource( nsurl_t object );

// Signature from Objective-C Runtime: v stopAccessingSecurityScopedResource @ :
void 				nsurl_stopAccessingSecurityScopedResource( nsurl_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsurl_classForCoder( nsurl_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsurl_replacementObjectForCoder( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsurl_awakeAfterUsingCoder( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				nsurl_implementsSelector( nsurl_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsurl_setObservationInfo( nsurl_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsurl_setValue( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsurl_replacementObjectForPortCoder( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsurl_willChangeValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsurl_didChangeValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsurl_replacementObjectForArchiver( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsurl_classForArchiver( nsurl_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsurl_valueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsurl_classForKeyedArchiver( nsurl_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsurl_replacementObjectForKeyedArchiver( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsurl_methodDescriptionForSelector( nsurl_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsurl_valueForKeyPath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsurl_mutableArrayValueForKeyPath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsurl_mutableOrderedSetValueForKeyPath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsurl_mutableSetValueForKeyPath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			nsurl_addObserver( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsurl_removeObservation( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsurl_receiveObservedValue( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsurl_receiveObservedError( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsurl_finishObserving( nsurl_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsurl_setObservation( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsurl_observeValueForKeyPath( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsurl_removeObserver( nsurl_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsurl_addChainedObservers( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsurl_addObserverBlock( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsurl_addObservationTransformer( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsurl_valueForUndefinedKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsurl_setNilValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsurl_mutableArrayValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsurl_mutableOrderedSetValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsurl_mutableSetValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsurl_dictionaryWithValuesForKeys( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsurl_setValuesForKeysWithDictionary( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsurl_willChange( nsurl_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsurl_didChange( nsurl_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsurl_observationInfo( nsurl_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsurl_autoContentAccessingProxy( nsurl_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsurl_classForPortCoder( nsurl_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsurl_performSelector( nsurl_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				nsurl_performSelectorOnMainThread( nsurl_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsurl_performSelectorInBackground( nsurl_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				nsurl_isNSDate__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				nsurl_isNSString__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				nsurl_isNSCFConstantString__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				nsurl_isNSNumber__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				nsurl_isNSArray__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				nsurl_isNSDictionary__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				nsurl_isNSData__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				nsurl_isNSObject__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				nsurl_isNSOrderedSet__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				nsurl_isNSSet__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				nsurl_isNSTimeZone__( nsurl_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				nsurl_isNSValue__( nsurl_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsurl_doesNotRecognizeSelector( nsurl_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsurl_methodSignatureForSelector( nsurl_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsurl_CA_distanceToValue( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			nsurl_CA_copyRenderValueWithColorspace( nsurl_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			nsurl_CA_copyRenderValue( nsurl_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsurl_CA_interpolateValue( nsurl_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsurl_CA_addValue( nsurl_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				nsurl_CAMLTypeSupportedForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsurl_CAMLTypeForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				nsurl_CA_validateValue( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			nsurl_CA_interpolateValues( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsurl_CA_prepareRenderValue( nsurl_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsurl_CA_archivingValueForKey( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsurl_CA_roundToIntegerFromValue( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsurl_className( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsurl_accessibilityLabel( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsurl_setAccessibilityLabel( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsurl_setAccessibilityIdentifier( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsurl_accessibilityFrame( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			nsurl_storedAccessibilityViewIsModal( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			nsurl_storedAccessibilityElementsHidden( nsurl_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			nsurl_storedShouldGroupAccessibilityChildren( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			nsurl_storedAccessibilityNavigationStyle( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			nsurl_storedAccessibilityRespondsToUserInteraction( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			nsurl_accessibilityAttributedLabel( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsurl_accessibilityValue( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			nsurl_accessibilityAttributedValue( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			nsurl_accessibilityHint( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			nsurl_accessibilityAttributedHint( nsurl_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsurl_accessibilityActivationPoint( nsurl_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	nsurl_accessibilityTraits( nsurl_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				nsurl_isAccessibilityElement( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			nsurl_accessibilityContainer( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			nsurl_accessibilityLanguage( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			nsurl_accessibilityPath( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				nsurl_accessibilityViewIsModal( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				nsurl_accessibilityElementsHidden( nsurl_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				nsurl_shouldGroupAccessibilityChildren( nsurl_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			nsurl_accessibilityNavigationStyle( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				nsurl_accessibilityRespondsToUserInteraction( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsurl_accessibilityUserInputLabels( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsurl_accessibilityAttributedUserInputLabels( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			nsurl_storedAccessibilityIdentifier( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			nsurl_storedAccessibilityTraits( nsurl_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			nsurl_storedIsAccessibilityElement( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			nsurl_storedAccessibilityFrame( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			nsurl_storedAccessibilityActivationPoint( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			nsurl_accessibilityHeaderElements( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				nsurl_setAccessibilityElementsHidden( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				nsurl_setAccessibilityViewIsModal( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				nsurl_setAccessibilityAttributedLabel( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsurl_setAccessibilityValue( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				nsurl_setAccessibilityAttributedValue( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				nsurl_setAccessibilityHint( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				nsurl_setAccessibilityAttributedHint( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsurl_setAccessibilityFrame( nsurl_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				nsurl_setAccessibilityPath( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsurl_setAccessibilityActivationPoint( nsurl_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				nsurl_setAccessibilityTraits( nsurl_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				nsurl_setIsAccessibilityElement( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				nsurl_setAccessibilityContainer( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				nsurl_setAccessibilityLanguage( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				nsurl_setShouldGroupAccessibilityChildren( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				nsurl_setAccessibilityNavigationStyle( nsurl_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				nsurl_setAccessibilityRespondsToUserInteraction( nsurl_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsurl_setAccessibilityUserInputLabels( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsurl_setAccessibilityAttributedUserInputLabels( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			nsurl_accessibilityTextualContext( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				nsurl_setAccessibilityTextualContext( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				nsurl_setAccessibilityHeaderElements( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				nsurl_accessibilityElementDidBecomeFocused( nsurl_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				nsurl_accessibilityElementDidLoseFocus( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				nsurl_accessibilityElementIsFocused( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			nsurl_accessibilityAssistiveTechnologyFocusedIdentifiers( nsurl_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				nsurl_accessibilityIncrement( nsurl_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				nsurl_accessibilityDecrement( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				nsurl_accessibilityScroll( nsurl_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				nsurl_accessibilityPerformEscape( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				nsurl_accessibilityPerformMagicTap( nsurl_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				nsurl_accessibilityActivate( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsurl_setAccessibilityCustomActions( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsurl_accessibilityCustomActions( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			nsurl_accessibilityIdentification( nsurl_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				nsurl_accessibilitySetIdentification( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsurl_accessibilityIdentifier( nsurl_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	nsurl_defaultAccessibilityTraits( nsurl_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				nsurl_isAccessibilityElementByDefault( nsurl_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				nsurl_isElementAccessibilityExposedToInterfaceBuilder( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			nsurl_accessibilityLocalizedStringKey( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				nsurl_setAccessibilityDragSourceDescriptors( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			nsurl_accessibilityDragSourceDescriptors( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				nsurl_setAccessibilityDropPointDescriptors( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			nsurl_accessibilityDropPointDescriptors( nsurl_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			nsurl_storedAccessibilityContainerType( nsurl_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			nsurl_accessibilityElementCount( nsurl_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			nsurl_accessibilityElementAtIndex( nsurl_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			nsurl_indexOfAccessibilityElement( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			nsurl_accessibilityElements( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				nsurl_setAccessibilityElements( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsurl_accessibilityContainerType( nsurl_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsurl_setAccessibilityContainerType( nsurl_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsurl_setAccessibilityCustomRotors( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsurl_accessibilityCustomRotors( nsurl_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			nsurl_uiPresentationManager( nsurl_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsurl_awakeFromNib( nsurl_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				nsurl_conformsToProtocolCached( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsurl_prepareForInterfaceBuilder( nsurl_t object );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			nsurl_initFromPQLResultSet( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				nsurl_supportsRBSXPCSecureCoding( nsurl_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				nsurl_RBSIsXPCObject( nsurl_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsurl_NSRepresentation( nsurl_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			nsurl_pep_onMainThread( nsurl_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			nsurl_pep_onThread( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			nsurl_pep_onOperationQueue( nsurl_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			nsurl_pep_onMainThreadIfNecessary( nsurl_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			nsurl_pep_afterDelay( nsurl_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			nsurl_pep_getInvocation( nsurl_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			nsurl_stringValueSafe( nsurl_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				nsurl_utf8ValueSafe( nsurl_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				nsurl_boolValueSafe( nsurl_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			nsurl_int64ValueSafe( nsurl_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				nsurl_doubleValueSafe( nsurl_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				nsurl_un_safeBoolValue( nsurl_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				nsurl_supportsBSXPCSecureCoding( nsurl_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				nsurl_bs_isPlistableType( nsurl_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsurl_bs_secureEncoded( nsurl_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsurl_bs_encoded( nsurl_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				nsurl_releaseOnMainThread( nsurl_t object );

// Signature from Objective-C Runtime: @ debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			nsurl_debugHierarchyAdditionalGroupingIDs( nsurl_t object );

// Signature from Objective-C Runtime: @ debugHierarchyObjectsInGroupWithID:outOptions: @ : @ ^@
nsobject_t 			nsurl_debugHierarchyObjectsInGroupWithID( nsurl_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ debugHierarchyPropertyDescriptions @ :
nsobject_t 			nsurl_debugHierarchyPropertyDescriptions( nsurl_t object );

// Signature from Objective-C Runtime: @ debugHierarchyValueForPropertyWithName: @ : @
nsobject_t 			nsurl_debugHierarchyValueForPropertyWithName( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SCN_setupDisplayLinkWithQueue:screen:policy: @ : @ @ Q
nsobject_t 			nsurl_SCN_setupDisplayLinkWithQueue( nsurl_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: v postNotificationWithDescription: @ : @
void 				nsurl_postNotificationWithDescription( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B okToNotifyFromThisThread @ :
bool 				nsurl_okToNotifyFromThisThread( nsurl_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPerformSelector:withObject: @ : : @
void 				nsurl_fromNotifySafeThreadPerformSelector( nsurl_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v allowSafePerformSelector @ :
void 				nsurl_allowSafePerformSelector( nsurl_t object );

// Signature from Objective-C Runtime: v disallowSafePerformSelector @ :
void 				nsurl_disallowSafePerformSelector( nsurl_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				nsurl_fromNotifySafeThreadPostNotificationName( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v fromMainThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				nsurl_fromMainThreadPostNotificationName( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v cn_updateDictionaryForKey:withChanges: @ : @ @
void 				nsurl_cn_updateDictionaryForKey( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionAtIndent: @ : Q
nsobject_t 			nsurl_descriptionAtIndent( nsurl_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: B isNull @ :
bool 				nsurl_isNull( nsurl_t object );

// Signature from Objective-C Runtime: @ CKDescription @ :
nsobject_t 			nsurl_CKDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescription @ :
nsobject_t 			nsurl_CKPropertiesDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKUnredactedDescription @ :
nsobject_t 			nsurl_CKUnredactedDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKRedactedDescription @ :
nsobject_t 			nsurl_CKRedactedDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKDescriptionPropertiesWithPublic:private:shouldExpand: @ : B B B
nsobject_t 			nsurl_CKDescriptionPropertiesWithPublic( nsurl_t object, bool arg0, bool arg1, bool arg2 );

// Signature from Objective-C Runtime: v CKAssignToContainerWithID: @ : @
void 				nsurl_CKAssignToContainerWithID( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSingleLineDescription @ :
nsobject_t 			nsurl_CKSingleLineDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescriptionStringFromProperties: @ : @
nsobject_t 			nsurl_CKPropertiesDescriptionStringFromProperties( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKExpandedDescription @ :
nsobject_t 			nsurl_CKExpandedDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKHashedDescription @ :
nsobject_t 			nsurl_CKHashedDescription( nsurl_t object );

// Signature from Objective-C Runtime: @ CKDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			nsurl_CKDescriptionRedact( nsurl_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ CKObjectDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			nsurl_CKObjectDescriptionRedact( nsurl_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForName:object:queue:usingBlock: @ : @ @ @ @?
nsobject_t 			nsurl_fm_addNotificationBlockObserverForName( nsurl_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForObject:keyPath:options:usingBlock: @ : @ @ Q @?
nsobject_t 			nsurl_fm_addNotificationBlockObserverForObject( nsurl_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v fm_removeNotificationBlockObserver: @ : @
void 				nsurl_fm_removeNotificationBlockObserver( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_nullToNil @ :
nsobject_t 			nsurl_fm_nullToNil( nsurl_t object );

// Signature from Objective-C Runtime: @ fm_logID @ :
nsobject_t 			nsurl_fm_logID( nsurl_t object );

// Signature from Objective-C Runtime: @ nullToNil @ :
nsobject_t 			nsurl_nullToNil( nsurl_t object );

// Signature from Objective-C Runtime: @ logID @ :
nsobject_t 			nsurl_logID( nsurl_t object );

// Signature from Objective-C Runtime: v if_setValueIfNonNil:forKey: @ : @ @
void 				nsurl_if_setValueIfNonNil( nsurl_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v if_setValueIfYES:forKey: @ : B @
void 				nsurl_if_setValueIfYES( nsurl_t object, bool arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ toPBCodable @ :
nsobject_t 			nsurl_toPBCodable( nsurl_t object );

// Signature from Objective-C Runtime: @ ams_generateDescriptionWithSubObjects: @ : @
nsobject_t 			nsurl_ams_generateDescriptionWithSubObjects( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				nsurl_isProxy( nsurl_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsurl_class( nsurl_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsurl_self( nsurl_t object );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				nsurl_conformsToProtocol( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				nsurl_respondsToSelector( nsurl_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsurl_autorelease( nsurl_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsurl_zone( nsurl_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsurl_superclass( nsurl_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsurl_debugDescription( nsurl_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				nsurl_retainWeakReference( nsurl_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				nsurl_allowsWeakReference( nsurl_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsurl_copy( nsurl_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsurl_finalize( nsurl_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				nsurl_isFault( nsurl_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsurl_forwardInvocation( nsurl_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsurl_forwardingTargetForSelector( nsurl_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsurl_mutableCopy( nsurl_t object );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsurl_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				nsurl_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ URLWithString: @ : @
nsobject_t 			nsurl_URLWithString( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fileURLWithPath: @ : @
nsobject_t 			nsurl_fileURLWithPath( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fileURLWithFileSystemRepresentation:isDirectory:relativeToURL: @ : r* B @
nsobject_t 			nsurl_fileURLWithFileSystemRepresentation( char* arg0, bool arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ readableTypeIdentifiersForItemProvider @ :
nsobject_t 			nsurl_readableTypeIdentifiersForItemProvider( );

// Signature from Objective-C Runtime: @ objectWithItemProviderData:typeIdentifier:error: @ : @ @ ^@
nsobject_t 			nsurl_objectWithItemProviderData( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error: @ : @ Q @ ^B ^@
nsobject_t 			nsurl_URLByResolvingBookmarkData( nsobject_t arg0, unsigned long long arg1, nsobject_t arg2, bool* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: @ URLWithDataRepresentation:relativeToURL: @ : @ @
nsobject_t 			nsurl_URLWithDataRepresentation( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ absoluteURLWithDataRepresentation:relativeToURL: @ : @ @
nsobject_t 			nsurl_absoluteURLWithDataRepresentation( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ URLByResolvingAliasFileAtURL:options:error: @ : @ Q ^@
nsobject_t 			nsurl_URLByResolvingAliasFileAtURL( nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ fileURLWithPathComponents: @ : @
nsobject_t 			nsurl_fileURLWithPathComponents( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fp_tempDirectory @ :
nsobject_t 			nsurl_fp_tempDirectory( );

// Signature from Objective-C Runtime: @ fp_uniqueTempFolderWithError: @ : ^@
nsobject_t 			nsurl_fp_uniqueTempFolderWithError( nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ fp_personaHomeDirectoryPathForUserID: @ : I
nsobject_t 			nsurl_fp_personaHomeDirectoryPathForUserID( unsigned int arg0 );

// Signature from Objective-C Runtime: @ fp_homeDirectoryForUserID: @ : I
nsobject_t 			nsurl_fp_homeDirectoryForUserID( unsigned int arg0 );

// Signature from Objective-C Runtime: @ fp_homeDirectoryPathForUserID: @ : I
nsobject_t 			nsurl_fp_homeDirectoryPathForUserID( unsigned int arg0 );

// Signature from Objective-C Runtime: @ fp_personaHomeDirectory @ :
nsobject_t 			nsurl_fp_personaHomeDirectory( );

// Signature from Objective-C Runtime: @ fp_homeDirectory @ :
nsobject_t 			nsurl_fp_homeDirectory( );

// Signature from Objective-C Runtime: @ fp_personaCloudStorageDirectory @ :
nsobject_t 			nsurl_fp_personaCloudStorageDirectory( );

// Signature from Objective-C Runtime: @ fp_supportDirectory @ :
nsobject_t 			nsurl_fp_supportDirectory( );

// Signature from Objective-C Runtime: @ fp_containerDirectoryForDataSeparatedPersonaWithPurposeIdentifier: @ : @
nsobject_t 			nsurl_fp_containerDirectoryForDataSeparatedPersonaWithPurposeIdentifier( nsobject_t arg0 );

// Signature from Objective-C Runtime: v fp_createEmptyTempFileWithName:completion: @ : @ @?
void 				nsurl_fp_createEmptyTempFileWithName( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: v fp_createEmptyTempPackageWithName:completion: @ : @ @?
void 				nsurl_fp_createEmptyTempPackageWithName( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ ui_incomingDirectory: @ : B
nsobject_t 			nsurl_ui_incomingDirectory( bool arg0 );

// Signature from Objective-C Runtime: @ ui_cloudDocsContainerURL @ :
nsobject_t 			nsurl_ui_cloudDocsContainerURL( );

// Signature from Objective-C Runtime: @ ui_URLFromExportBookmark: @ : @
nsobject_t 			nsurl_ui_URLFromExportBookmark( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mapsURLWithQuery: @ : @
nsobject_t 			nsurl_mapsURLWithQuery( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mapsURLWithSourceAddress:destinationAddress: @ : @ @
nsobject_t 			nsurl_mapsURLWithSourceAddress( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ URLWithDisplayIdentifier:forSearchResultDomain:andIdentifier: @ : @ i Q
nsobject_t 			nsurl_URLWithDisplayIdentifier( nsobject_t arg0, int arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ newFromSqliteValue: @ : ^{sqlite3_value=}
nsobject_t 			nsurl_newFromSqliteValue( sqlite3_value* arg0 );

// Signature from Objective-C Runtime: @ newFromSqliteStatement:atIndex: @ : ^{sqlite3_stmt=} i
nsobject_t 			nsurl_newFromSqliteStatement( sqlite3_stmt* arg0, int arg1 );

// Signature from Objective-C Runtime: @ aa_URLWithEndpoint: @ : @
nsobject_t 			nsurl_aa_URLWithEndpoint( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ log @ :
nsobject_t 			nsurl_log( );

// Signature from Objective-C Runtime: @ cls_libraryURL @ :
nsobject_t 			nsurl_cls_libraryURL( );

// Signature from Objective-C Runtime: @ cls_ubiquitousContainerURL_Imp: @ : ^@
nsobject_t 			nsurl_cls_ubiquitousContainerURL_Imp( nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ cls_documentsURLAndReturnError: @ : ^@
nsobject_t 			nsurl_cls_documentsURLAndReturnError( nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ cls_draftsURLAndReturnError: @ : ^@
nsobject_t 			nsurl_cls_draftsURLAndReturnError( nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ cls_configURL @ :
nsobject_t 			nsurl_cls_configURL( );

// Signature from Objective-C Runtime: @ cls_ubiquitousContainerURL @ :
nsobject_t 			nsurl_cls_ubiquitousContainerURL( );

// Signature from Objective-C Runtime: v cls_getUbiquitousContainerURLWithCompletion: @ : @?
void 				nsurl_cls_getUbiquitousContainerURLWithCompletion( nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ cls_documentsURL @ :
nsobject_t 			nsurl_cls_documentsURL( );

// Signature from Objective-C Runtime: @ cls_draftsURL @ :
nsobject_t 			nsurl_cls_draftsURL( );

// Signature from Objective-C Runtime: B cls_deleteFileAtURL:error: @ : @ ^@
bool 				nsurl_cls_deleteFileAtURL( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: v cls_urlSuitableForOpeningForExpectedURL:containerURL:itemID:ownerName:zoneName:completion: @ : @ @ @ @ @ @?
void 				nsurl_cls_urlSuitableForOpeningForExpectedURL( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3, nsobject_t arg4, nsobject_t* arg5 );

// Signature from Objective-C Runtime: v cls_deleteFileAtExpectedURL:containerURL:itemID:ownerName:zoneName:completion: @ : @ @ @ @ @ @?
void 				nsurl_cls_deleteFileAtExpectedURL( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3, nsobject_t arg4, nsobject_t* arg5 );

// Signature from Objective-C Runtime: @ brc_fileURLWithFileDescriptor: @ : i
nsobject_t 			nsurl_brc_fileURLWithFileDescriptor( int arg0 );

// Signature from Objective-C Runtime: @ brc_fileURLWithVolumeDeviceID:fileID:isDirectory: @ : @ @ B
nsobject_t 			nsurl_brc_fileURLWithVolumeDeviceID( nsobject_t arg0, nsobject_t arg1, bool arg2 );

// Signature from Objective-C Runtime: @ br_documentURLFromBookmarkableString:error: @ : @ ^@
nsobject_t 			nsurl_br_documentURLFromBookmarkableString( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: v br_containerIDsWithExternalReferencesTo:completionHandler: @ : @ @?
void 				nsurl_br_containerIDsWithExternalReferencesTo( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ br_documentURLFromFileObjectID:error: @ : @ ^@
nsobject_t 			nsurl_br_documentURLFromFileObjectID( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ ams_cachesDirectory @ :
nsobject_t 			nsurl_ams_cachesDirectory( );

// Signature from Objective-C Runtime: @ ams_engagementDirectory @ :
nsobject_t 			nsurl_ams_engagementDirectory( );

// Signature from Objective-C Runtime: @ ams_realHomeDirectory @ :
nsobject_t 			nsurl_ams_realHomeDirectory( );

// Signature from Objective-C Runtime: @ ams_unescapedStringForString: @ : @
nsobject_t 			nsurl_ams_unescapedStringForString( nsobject_t arg0 );

// Signature from Objective-C Runtime: B supportsSecureCoding @ :
bool 				nsurl_supportsSecureCoding( );

// Signature from Objective-C Runtime: B writeBookmarkData:toURL:options:error: @ : @ @ Q ^@
bool 				nsurl_writeBookmarkData( nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ bookmarkDataWithContentsOfURL:error: @ : @ ^@
nsobject_t 			nsurl_bookmarkDataWithContentsOfURL( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyPropertyDescriptions @ :
nsobject_t 			nsurl_fallback_debugHierarchyPropertyDescriptions( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyValueForPropertyWithName:onObject:outOptions:outError: @ : @ @ ^@ ^@
nsobject_t 			nsurl_fallback_debugHierarchyValueForPropertyWithName( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v load @ :
void 				nsurl_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsurl_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				nsurl_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsurl_setVersion( long long arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsurl_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				nsurl_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsurl_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsurl_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsurl_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsurl_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsurl_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsurl_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				nsurl_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				nsurl_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsurl_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsurl_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				nsurl_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				nsurl_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsurl_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsurl_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsurl_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsurl_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsurl_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsurl_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSQLiteClassName @ :
nsobject_t 			nsurl_CKSQLiteClassName( );

// Signature from Objective-C Runtime: B brc_swizzleInstanceMethod:with: @ : : :
bool 				nsurl_brc_swizzleInstanceMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: B brc_swizzleClassMethod:with: @ : : :
bool 				nsurl_brc_swizzleClassMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: @ fromPBCodable: @ : @
nsobject_t 			nsurl_fromPBCodable( nsobject_t arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsurl_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsurl_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				nsurl_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				nsurl_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsurl_t 			nsurl_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsurl_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				nsurl_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				nsurl_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				nsurl_instancesRespondToSelector( nsselector_t arg0 );

#endif