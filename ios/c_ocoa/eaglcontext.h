/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_EAGLCONTEXT_HEADER
#define SHIMMER_C_OCOA_EAGLCONTEXT_HEADER

typedef void*	eaglcontext_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v dealloc @ :
void 				eaglcontext_dealloc( eaglcontext_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			eaglcontext_init( eaglcontext_t object );

// Signature from Objective-C Runtime: B isMultiThreaded @ :
bool 				eaglcontext_isMultiThreaded( eaglcontext_t object );

// Signature from Objective-C Runtime: Q API @ :
unsigned long long 	eaglcontext_API( eaglcontext_t object );

// Signature from Objective-C Runtime: @ sharegroup @ :
nsobject_t 			eaglcontext_sharegroup( eaglcontext_t object );

// Signature from Objective-C Runtime: @ initWithAPI:properties: @ : Q @
nsobject_t 			eaglcontext_initWithAPI( eaglcontext_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setDebugLabel: @ : @
void 				eaglcontext_setDebugLabel( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q setParameter:to: @ : I ^i
unsigned long long 	eaglcontext_setParameter( eaglcontext_t object, unsigned int arg0, int* arg1 );

// Signature from Objective-C Runtime: ^{EAGLMacroContext=} getMacroContextPrivate @ :
EAGLMacroContext* 	eaglcontext_getMacroContextPrivate( eaglcontext_t object );

// Signature from Objective-C Runtime: B presentRenderbuffer:atTime: @ : Q d
bool 				eaglcontext_presentRenderbuffer( eaglcontext_t object, unsigned long long arg0, double arg1 );

// Signature from Objective-C Runtime: B renderbufferStorage:fromDrawable: @ : Q @
bool 				eaglcontext_renderbufferStorage( eaglcontext_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ debugLabel @ :
nsobject_t 			eaglcontext_debugLabel( eaglcontext_t object );

// Signature from Objective-C Runtime: @ commonInitWithAPI:properties: @ : Q @
nsobject_t 			eaglcontext_commonInitWithAPI( eaglcontext_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: Q getParameter:to: @ : I ^i
unsigned long long 	eaglcontext_getParameter( eaglcontext_t object, unsigned int arg0, int* arg1 );

// Signature from Objective-C Runtime: B texImageIOSurface:target:internalFormat:width:height:format:type:plane:invert: @ : ^{__IOSurface=} Q Q I I Q Q I B
bool 				eaglcontext_texImageIOSurface( eaglcontext_t object, __IOSurface* arg0, unsigned long long arg1, unsigned long long arg2, unsigned int arg3, unsigned int arg4, unsigned long long arg5, unsigned long long arg6, unsigned int arg7, bool arg8 );

// Signature from Objective-C Runtime: v setMultiThreaded: @ : B
void 				eaglcontext_setMultiThreaded( eaglcontext_t object, bool arg0 );

// Signature from Objective-C Runtime: B attachImage:toCoreSurface:invertedRender: @ : Q ^{__IOSurface=} B
bool 				eaglcontext_attachImage( eaglcontext_t object, unsigned long long arg0, __IOSurface* arg1, bool arg2 );

// Signature from Objective-C Runtime: B setBlockFence:onQueue: @ : @? @
bool 				eaglcontext_setBlockFence( eaglcontext_t object, nsobject_t* arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: ^{EAGLMacroContext=} GetMacroContextPrivate @ :
EAGLMacroContext* 	eaglcontext_GetMacroContextPrivate( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				eaglcontext_isNSDate__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				eaglcontext_isNSString__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				eaglcontext_isNSCFConstantString__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				eaglcontext_isNSNumber__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				eaglcontext_isNSArray__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				eaglcontext_isNSDictionary__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				eaglcontext_isNSData__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				eaglcontext_isNSObject__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				eaglcontext_isNSOrderedSet__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				eaglcontext_isNSSet__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				eaglcontext_isNSTimeZone__( eaglcontext_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				eaglcontext_isNSValue__( eaglcontext_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			eaglcontext_description( eaglcontext_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				eaglcontext_doesNotRecognizeSelector( eaglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			eaglcontext_methodSignatureForSelector( eaglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			eaglcontext_className( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			eaglcontext_accessibilityLabel( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				eaglcontext_setAccessibilityLabel( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				eaglcontext_setAccessibilityIdentifier( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				eaglcontext_accessibilityFrame( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			eaglcontext_storedAccessibilityViewIsModal( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			eaglcontext_storedAccessibilityElementsHidden( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			eaglcontext_storedShouldGroupAccessibilityChildren( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			eaglcontext_storedAccessibilityNavigationStyle( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			eaglcontext_storedAccessibilityRespondsToUserInteraction( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			eaglcontext_accessibilityAttributedLabel( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			eaglcontext_accessibilityValue( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			eaglcontext_accessibilityAttributedValue( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			eaglcontext_accessibilityHint( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			eaglcontext_accessibilityAttributedHint( eaglcontext_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			eaglcontext_accessibilityActivationPoint( eaglcontext_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	eaglcontext_accessibilityTraits( eaglcontext_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				eaglcontext_isAccessibilityElement( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			eaglcontext_accessibilityContainer( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			eaglcontext_accessibilityLanguage( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			eaglcontext_accessibilityPath( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				eaglcontext_accessibilityViewIsModal( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				eaglcontext_accessibilityElementsHidden( eaglcontext_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				eaglcontext_shouldGroupAccessibilityChildren( eaglcontext_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			eaglcontext_accessibilityNavigationStyle( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				eaglcontext_accessibilityRespondsToUserInteraction( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			eaglcontext_accessibilityUserInputLabels( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			eaglcontext_accessibilityAttributedUserInputLabels( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			eaglcontext_storedAccessibilityIdentifier( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			eaglcontext_storedAccessibilityTraits( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			eaglcontext_storedIsAccessibilityElement( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			eaglcontext_storedAccessibilityFrame( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			eaglcontext_storedAccessibilityActivationPoint( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			eaglcontext_accessibilityHeaderElements( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				eaglcontext_setAccessibilityElementsHidden( eaglcontext_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				eaglcontext_setAccessibilityViewIsModal( eaglcontext_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				eaglcontext_setAccessibilityAttributedLabel( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				eaglcontext_setAccessibilityValue( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				eaglcontext_setAccessibilityAttributedValue( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				eaglcontext_setAccessibilityHint( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				eaglcontext_setAccessibilityAttributedHint( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				eaglcontext_setAccessibilityFrame( eaglcontext_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				eaglcontext_setAccessibilityPath( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				eaglcontext_setAccessibilityActivationPoint( eaglcontext_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				eaglcontext_setAccessibilityTraits( eaglcontext_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				eaglcontext_setIsAccessibilityElement( eaglcontext_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				eaglcontext_setAccessibilityContainer( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				eaglcontext_setAccessibilityLanguage( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				eaglcontext_setShouldGroupAccessibilityChildren( eaglcontext_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				eaglcontext_setAccessibilityNavigationStyle( eaglcontext_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				eaglcontext_setAccessibilityRespondsToUserInteraction( eaglcontext_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				eaglcontext_setAccessibilityUserInputLabels( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				eaglcontext_setAccessibilityAttributedUserInputLabels( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			eaglcontext_accessibilityTextualContext( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				eaglcontext_setAccessibilityTextualContext( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				eaglcontext_setAccessibilityHeaderElements( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				eaglcontext_accessibilityElementDidBecomeFocused( eaglcontext_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				eaglcontext_accessibilityElementDidLoseFocus( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				eaglcontext_accessibilityElementIsFocused( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			eaglcontext_accessibilityAssistiveTechnologyFocusedIdentifiers( eaglcontext_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				eaglcontext_accessibilityIncrement( eaglcontext_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				eaglcontext_accessibilityDecrement( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				eaglcontext_accessibilityScroll( eaglcontext_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				eaglcontext_accessibilityPerformEscape( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				eaglcontext_accessibilityPerformMagicTap( eaglcontext_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				eaglcontext_accessibilityActivate( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				eaglcontext_setAccessibilityCustomActions( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			eaglcontext_accessibilityCustomActions( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			eaglcontext_accessibilityIdentification( eaglcontext_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				eaglcontext_accessibilitySetIdentification( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			eaglcontext_accessibilityIdentifier( eaglcontext_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	eaglcontext_defaultAccessibilityTraits( eaglcontext_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				eaglcontext_isAccessibilityElementByDefault( eaglcontext_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				eaglcontext_isElementAccessibilityExposedToInterfaceBuilder( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			eaglcontext_accessibilityLocalizedStringKey( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				eaglcontext_setAccessibilityDragSourceDescriptors( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			eaglcontext_accessibilityDragSourceDescriptors( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				eaglcontext_setAccessibilityDropPointDescriptors( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			eaglcontext_accessibilityDropPointDescriptors( eaglcontext_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			eaglcontext_storedAccessibilityContainerType( eaglcontext_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			eaglcontext_accessibilityElementCount( eaglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			eaglcontext_accessibilityElementAtIndex( eaglcontext_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			eaglcontext_indexOfAccessibilityElement( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			eaglcontext_accessibilityElements( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				eaglcontext_setAccessibilityElements( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			eaglcontext_accessibilityContainerType( eaglcontext_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				eaglcontext_setAccessibilityContainerType( eaglcontext_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				eaglcontext_setAccessibilityCustomRotors( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			eaglcontext_accessibilityCustomRotors( eaglcontext_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			eaglcontext_uiPresentationManager( eaglcontext_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				eaglcontext_awakeFromNib( eaglcontext_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				eaglcontext_conformsToProtocolCached( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				eaglcontext_prepareForInterfaceBuilder( eaglcontext_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			eaglcontext_classForCoder( eaglcontext_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			eaglcontext_replacementObjectForCoder( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			eaglcontext_awakeAfterUsingCoder( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				eaglcontext_implementsSelector( eaglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				eaglcontext_setObservationInfo( eaglcontext_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				eaglcontext_setValue( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			eaglcontext_replacementObjectForPortCoder( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				eaglcontext_willChangeValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				eaglcontext_didChangeValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			eaglcontext_replacementObjectForArchiver( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			eaglcontext_classForArchiver( eaglcontext_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			eaglcontext_valueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			eaglcontext_classForKeyedArchiver( eaglcontext_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			eaglcontext_replacementObjectForKeyedArchiver( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* eaglcontext_methodDescriptionForSelector( eaglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			eaglcontext_valueForKeyPath( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			eaglcontext_mutableArrayValueForKeyPath( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			eaglcontext_mutableOrderedSetValueForKeyPath( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			eaglcontext_mutableSetValueForKeyPath( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			eaglcontext_addObserver( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				eaglcontext_removeObservation( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				eaglcontext_receiveObservedValue( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				eaglcontext_receiveObservedError( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				eaglcontext_finishObserving( eaglcontext_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				eaglcontext_setObservation( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				eaglcontext_observeValueForKeyPath( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				eaglcontext_removeObserver( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			eaglcontext_addChainedObservers( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			eaglcontext_addObserverBlock( eaglcontext_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			eaglcontext_addObservationTransformer( eaglcontext_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			eaglcontext_valueForUndefinedKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				eaglcontext_setNilValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			eaglcontext_mutableArrayValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			eaglcontext_mutableOrderedSetValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			eaglcontext_mutableSetValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			eaglcontext_dictionaryWithValuesForKeys( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				eaglcontext_setValuesForKeysWithDictionary( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				eaglcontext_willChange( eaglcontext_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				eaglcontext_didChange( eaglcontext_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				eaglcontext_observationInfo( eaglcontext_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			eaglcontext_autoContentAccessingProxy( eaglcontext_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			eaglcontext_classForPortCoder( eaglcontext_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				eaglcontext_performSelector( eaglcontext_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				eaglcontext_performSelectorOnMainThread( eaglcontext_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				eaglcontext_performSelectorInBackground( eaglcontext_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				eaglcontext_CA_distanceToValue( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			eaglcontext_CA_copyRenderValueWithColorspace( eaglcontext_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			eaglcontext_CA_copyRenderValue( eaglcontext_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			eaglcontext_CA_interpolateValue( eaglcontext_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			eaglcontext_CA_addValue( eaglcontext_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				eaglcontext_CAMLTypeSupportedForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			eaglcontext_CAMLTypeForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				eaglcontext_CA_validateValue( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				eaglcontext_encodeWithCAMLWriter( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			eaglcontext_CA_interpolateValues( eaglcontext_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			eaglcontext_CAMLType( eaglcontext_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				eaglcontext_CA_prepareRenderValue( eaglcontext_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			eaglcontext_CA_archivingValueForKey( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			eaglcontext_CA_roundToIntegerFromValue( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			eaglcontext_initFromPQLResultSet( eaglcontext_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				eaglcontext_supportsRBSXPCSecureCoding( eaglcontext_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				eaglcontext_RBSIsXPCObject( eaglcontext_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			eaglcontext_NSRepresentation( eaglcontext_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			eaglcontext_pep_onMainThread( eaglcontext_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			eaglcontext_pep_onThread( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			eaglcontext_pep_onOperationQueue( eaglcontext_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			eaglcontext_pep_onMainThreadIfNecessary( eaglcontext_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			eaglcontext_pep_afterDelay( eaglcontext_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			eaglcontext_pep_getInvocation( eaglcontext_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			eaglcontext_stringValueSafe( eaglcontext_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				eaglcontext_utf8ValueSafe( eaglcontext_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				eaglcontext_boolValueSafe( eaglcontext_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			eaglcontext_int64ValueSafe( eaglcontext_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				eaglcontext_doubleValueSafe( eaglcontext_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				eaglcontext_un_safeBoolValue( eaglcontext_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				eaglcontext_supportsBSXPCSecureCoding( eaglcontext_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				eaglcontext_bs_isPlistableType( eaglcontext_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			eaglcontext_bs_secureEncoded( eaglcontext_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			eaglcontext_bs_encoded( eaglcontext_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				eaglcontext_releaseOnMainThread( eaglcontext_t object );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				eaglcontext_isProxy( eaglcontext_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	eaglcontext_retainCount( eaglcontext_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				eaglcontext_isEqual( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			eaglcontext_class( eaglcontext_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			eaglcontext_self( eaglcontext_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				eaglcontext_isKindOfClass( eaglcontext_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				eaglcontext_isMemberOfClass( eaglcontext_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				eaglcontext_conformsToProtocol( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				eaglcontext_respondsToSelector( eaglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			eaglcontext_retain( eaglcontext_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			eaglcontext_autorelease( eaglcontext_t object );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			eaglcontext_zone( eaglcontext_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	eaglcontext_hash( eaglcontext_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			eaglcontext_superclass( eaglcontext_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			eaglcontext_debugDescription( eaglcontext_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				eaglcontext_retainWeakReference( eaglcontext_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				eaglcontext_allowsWeakReference( eaglcontext_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			eaglcontext_copy( eaglcontext_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				eaglcontext_finalize( eaglcontext_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				eaglcontext_isFault( eaglcontext_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				eaglcontext_forwardInvocation( eaglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			eaglcontext_forwardingTargetForSelector( eaglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			eaglcontext_mutableCopy( eaglcontext_t object );

// Signature from Objective-C Runtime: @ currentContext @ :
nsobject_t 			eaglcontext_currentContext( );

// Signature from Objective-C Runtime: B setCurrentContext: @ : @
bool 				eaglcontext_setCurrentContext( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				eaglcontext_load( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			eaglcontext_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: q version @ :
long long 			eaglcontext_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				eaglcontext_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				eaglcontext_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				eaglcontext_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* eaglcontext_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				eaglcontext_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			eaglcontext_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				eaglcontext_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			eaglcontext_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			eaglcontext_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				eaglcontext_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				eaglcontext_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				eaglcontext_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			eaglcontext_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			eaglcontext_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				eaglcontext_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				eaglcontext_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			eaglcontext_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			eaglcontext_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			eaglcontext_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			eaglcontext_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			eaglcontext_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			eaglcontext_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			eaglcontext_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			eaglcontext_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				eaglcontext_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			eaglcontext_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				eaglcontext_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				eaglcontext_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
eaglcontext_t 		eaglcontext_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			eaglcontext_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				eaglcontext_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				eaglcontext_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				eaglcontext_instancesRespondToSelector( nsselector_t arg0 );

#endif