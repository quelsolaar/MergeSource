/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_GLKVIEWCONTROLLER_HEADER
#define SHIMMER_C_OCOA_GLKVIEWCONTROLLER_HEADER

typedef void*	glkviewcontroller_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v dealloc @ :
void 				glkviewcontroller_dealloc( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			glkviewcontroller_init( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				glkviewcontroller_encodeWithCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			glkviewcontroller_initWithCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ delegate @ :
nsobject_t 			glkviewcontroller_delegate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setDelegate: @ : @
void 				glkviewcontroller_setDelegate( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q framesPerSecond @ :
long long 			glkviewcontroller_framesPerSecond( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isPaused @ :
bool 				glkviewcontroller_isPaused( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ screen @ :
nsobject_t 			glkviewcontroller_screen( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setPaused: @ : B
void 				glkviewcontroller_setPaused( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setView: @ : @
void 				glkviewcontroller_setView( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v loadView @ :
void 				glkviewcontroller_loadView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setScreen: @ : @
void 				glkviewcontroller_setScreen( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithNibName:bundle: @ : @ @
nsobject_t 			glkviewcontroller_initWithNibName( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v viewWillAppear: @ : B
void 				glkviewcontroller_viewWillAppear( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v viewWillDisappear: @ : B
void 				glkviewcontroller_viewWillDisappear( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v viewDidLoad @ :
void 				glkviewcontroller_viewDidLoad( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v viewDidMoveToWindow:shouldAppearOrDisappear: @ : @ B
void 				glkviewcontroller_viewDidMoveToWindow( glkviewcontroller_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: v viewDidUnload @ :
void 				glkviewcontroller_viewDidUnload( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ displayLink @ :
nsobject_t 			glkviewcontroller_displayLink( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setDisplayLink: @ : @
void 				glkviewcontroller_setDisplayLink( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setPreferredFramesPerSecond: @ : q
void 				glkviewcontroller_setPreferredFramesPerSecond( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v glkView:drawInRect: @ : @ {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkviewcontroller_glkView( glkviewcontroller_t object, nsobject_t arg0, CGRect arg1 );

// Signature from Objective-C Runtime: d timeSinceLastUpdate @ :
double 				glkviewcontroller_timeSinceLastUpdate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q preferredFramesPerSecond @ :
long long 			glkviewcontroller_preferredFramesPerSecond( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setViewIsVisible: @ : B
void 				glkviewcontroller_setViewIsVisible( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B viewIsVisible @ :
bool 				glkviewcontroller_viewIsVisible( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setDisplayLinkMessenger: @ : @
void 				glkviewcontroller_setDisplayLinkMessenger( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeSinceFirstResume @ :
double 				glkviewcontroller_timeSinceFirstResume( glkviewcontroller_t object );

// Signature from Objective-C Runtime: d timeSinceLastResume @ :
double 				glkviewcontroller_timeSinceLastResume( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setPauseOnWillResignActive: @ : B
void 				glkviewcontroller_setPauseOnWillResignActive( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B pauseOnWillResignActive @ :
bool 				glkviewcontroller_pauseOnWillResignActive( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setResumeOnDidBecomeActive: @ : B
void 				glkviewcontroller_setResumeOnDidBecomeActive( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B resumeOnDidBecomeActive @ :
bool 				glkviewcontroller_resumeOnDidBecomeActive( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B displayLinkPaused @ :
bool 				glkviewcontroller_displayLinkPaused( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setDisplayLinkPaused: @ : B
void 				glkviewcontroller_setDisplayLinkPaused( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: @ displayLinkMessenger @ :
nsobject_t 			glkviewcontroller_displayLinkMessenger( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B firstResumeOccurred @ :
bool 				glkviewcontroller_firstResumeOccurred( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setFirstResumeOccurred: @ : B
void 				glkviewcontroller_setFirstResumeOccurred( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: d timeSinceFirstResumeStartTime @ :
double 				glkviewcontroller_timeSinceFirstResumeStartTime( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setTimeSinceFirstResumeStartTime: @ : d
void 				glkviewcontroller_setTimeSinceFirstResumeStartTime( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: B lastResumeOccurred @ :
bool 				glkviewcontroller_lastResumeOccurred( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setLastResumeOccurred: @ : B
void 				glkviewcontroller_setLastResumeOccurred( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: d timeSinceLastResumeStartTime @ :
double 				glkviewcontroller_timeSinceLastResumeStartTime( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setTimeSinceLastResumeStartTime: @ : d
void 				glkviewcontroller_setTimeSinceLastResumeStartTime( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: B lastUpdateOccurred @ :
bool 				glkviewcontroller_lastUpdateOccurred( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setLastUpdateOccurred: @ : B
void 				glkviewcontroller_setLastUpdateOccurred( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: d timeSinceLastUpdatePreviousTime @ :
double 				glkviewcontroller_timeSinceLastUpdatePreviousTime( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setTimeSinceLastUpdatePreviousTime: @ : d
void 				glkviewcontroller_setTimeSinceLastUpdatePreviousTime( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: B lastDrawOccurred @ :
bool 				glkviewcontroller_lastDrawOccurred( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setLastDrawOccurred: @ : B
void 				glkviewcontroller_setLastDrawOccurred( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: d timeSinceLastDrawPreviousTime @ :
double 				glkviewcontroller_timeSinceLastDrawPreviousTime( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setTimeSinceLastDrawPreviousTime: @ : d
void 				glkviewcontroller_setTimeSinceLastDrawPreviousTime( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: q screenFramesPerSecond @ :
long long 			glkviewcontroller_screenFramesPerSecond( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setScreenFramesPerSecond: @ : q
void 				glkviewcontroller_setScreenFramesPerSecond( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: q framesDisplayed @ :
long long 			glkviewcontroller_framesDisplayed( glkviewcontroller_t object );

// Signature from Objective-C Runtime: d timeSinceLastDraw @ :
double 				glkviewcontroller_timeSinceLastDraw( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ doc_appLocationLargeNavigationTitlesForLocation:configuration: @ : @ @
nsobject_t 			glkviewcontroller_doc_appLocationLargeNavigationTitlesForLocation( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				glkviewcontroller_setAccessibilityIdentifier( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			glkviewcontroller_accessibilityIdentifier( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setContentAlpha: @ : d
void 				glkviewcontroller_setContentAlpha( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: @ mk_theme @ :
nsobject_t 			glkviewcontroller_mk_theme( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v infoCardThemeChanged @ :
void 				glkviewcontroller_infoCardThemeChanged( glkviewcontroller_t object );

// Signature from Objective-C Runtime: d contentAlpha @ :
double 				glkviewcontroller_contentAlpha( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q contentVisibility @ :
long long 			glkviewcontroller_contentVisibility( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setContentVisibility: @ : q
void 				glkviewcontroller_setContentVisibility( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v set_cardViewControllerTransitioning: @ : @
void 				glkviewcontroller_set_cardViewControllerTransitioning( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B ab_isInPopover @ :
bool 				glkviewcontroller_ab_isInPopover( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B ab_shouldShowNavBarButtons @ :
bool 				glkviewcontroller_ab_shouldShowNavBarButtons( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B ab_shouldUseTransparentBackgroundInPopovers @ :
bool 				glkviewcontroller_ab_shouldUseTransparentBackgroundInPopovers( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B ab_isDirectlyInPopover @ :
bool 				glkviewcontroller_ab_isDirectlyInPopover( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B ab_isInSheet @ :
bool 				glkviewcontroller_ab_isInSheet( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v cnui_addChildViewController: @ : @
void 				glkviewcontroller_cnui_addChildViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ cnui_appropriatePresentationController @ :
nsobject_t 			glkviewcontroller_cnui_appropriatePresentationController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B ob_isFormSheet @ :
bool 				glkviewcontroller_ob_isFormSheet( glkviewcontroller_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	glkviewcontroller_retainCount( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			glkviewcontroller_retain( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			glkviewcontroller_autorelease( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ invalidate @ :
nsobject_t 			glkviewcontroller_invalidate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				glkviewcontroller_setValue( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ title @ :
nsobject_t 			glkviewcontroller_title( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setTitle: @ : @
void 				glkviewcontroller_setTitle( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ view @ :
nsobject_t 			glkviewcontroller_view( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setModalPresentationStyle: @ : q
void 				glkviewcontroller_setModalPresentationStyle( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: @ popoverPresentationController @ :
nsobject_t 			glkviewcontroller_popoverPresentationController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v presentViewController:animated:completion: @ : @ B @?
void 				glkviewcontroller_presentViewController( glkviewcontroller_t object, nsobject_t arg0, bool arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ traitCollection @ :
nsobject_t 			glkviewcontroller_traitCollection( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q interfaceOrientation @ :
long long 			glkviewcontroller_interfaceOrientation( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v traitCollectionDidChange: @ : @
void 				glkviewcontroller_traitCollectionDidChange( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateFocusIfNeeded @ :
void 				glkviewcontroller_updateFocusIfNeeded( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNeedsFocusUpdate @ :
void 				glkviewcontroller_setNeedsFocusUpdate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B shouldUpdateFocusInContext: @ : @
bool 				glkviewcontroller_shouldUpdateFocusInContext( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didUpdateFocusInContext:withAnimationCoordinator: @ : @ @
void 				glkviewcontroller_didUpdateFocusInContext( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ preferredFocusEnvironments @ :
nsobject_t 			glkviewcontroller_preferredFocusEnvironments( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ parentFocusEnvironment @ :
nsobject_t 			glkviewcontroller_parentFocusEnvironment( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ focusItemContainer @ :
nsobject_t 			glkviewcontroller_focusItemContainer( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ preferredFocusedView @ :
nsobject_t 			glkviewcontroller_preferredFocusedView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ focusGroupIdentifier @ :
nsobject_t 			glkviewcontroller_focusGroupIdentifier( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ nextResponder @ :
nsobject_t 			glkviewcontroller_nextResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ transitionCoordinator @ :
nsobject_t 			glkviewcontroller_transitionCoordinator( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ presentingViewController @ :
nsobject_t 			glkviewcontroller_presentingViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v dismissViewControllerAnimated:completion: @ : B @?
void 				glkviewcontroller_dismissViewControllerAnimated( glkviewcontroller_t object, bool arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ presentedViewController @ :
nsobject_t 			glkviewcontroller_presentedViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q modalPresentationStyle @ :
long long 			glkviewcontroller_modalPresentationStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isBeingPresented @ :
bool 				glkviewcontroller_isBeingPresented( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isBeingDismissed @ :
bool 				glkviewcontroller_isBeingDismissed( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v addChildViewController: @ : @
void 				glkviewcontroller_addChildViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} preferredContentSize @ :
CGSize 				glkviewcontroller_preferredContentSize( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v willTransitionToTraitCollection:withTransitionCoordinator: @ : @ @
void 				glkviewcontroller_willTransitionToTraitCollection( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v viewWillLayoutSubviews @ :
void 				glkviewcontroller_viewWillLayoutSubviews( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setPreferredContentSize: @ : {CGSize=dd}
void 				glkviewcontroller_setPreferredContentSize( glkviewcontroller_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B canPerformAction:withSender: @ : : @
bool 				glkviewcontroller_canPerformAction( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ keyCommands @ :
nsobject_t 			glkviewcontroller_keyCommands( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v preferredContentSizeDidChangeForChildContentContainer: @ : @
void 				glkviewcontroller_preferredContentSizeDidChangeForChildContentContainer( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v viewWillTransitionToSize:withTransitionCoordinator: @ : {CGSize=dd} @
void 				glkviewcontroller_viewWillTransitionToSize( glkviewcontroller_t object, CGSize arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v willMoveToParentViewController: @ : @
void 				glkviewcontroller_willMoveToParentViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didMoveToParentViewController: @ : @
void 				glkviewcontroller_didMoveToParentViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ parentViewController @ :
nsobject_t 			glkviewcontroller_parentViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setTransitioningDelegate: @ : @
void 				glkviewcontroller_setTransitioningDelegate( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v addKeyCommand: @ : @
void 				glkviewcontroller_addKeyCommand( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeKeyCommand: @ : @
void 				glkviewcontroller_removeKeyCommand( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q supportedInterfaceOrientations @ :
unsigned long long 	glkviewcontroller_supportedInterfaceOrientations( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isViewLoaded @ :
bool 				glkviewcontroller_isViewLoaded( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setContentSizeForViewInPopover: @ : {CGSize=dd}
void 				glkviewcontroller_setContentSizeForViewInPopover( glkviewcontroller_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v viewDidLayoutSubviews @ :
void 				glkviewcontroller_viewDidLayoutSubviews( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v removeFromParentViewController @ :
void 				glkviewcontroller_removeFromParentViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v viewDidAppear: @ : B
void 				glkviewcontroller_viewDidAppear( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v viewDidDisappear: @ : B
void 				glkviewcontroller_viewDidDisappear( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: @ presentationController @ :
nsobject_t 			glkviewcontroller_presentationController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B shouldAutorotate @ :
bool 				glkviewcontroller_shouldAutorotate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ transitioningDelegate @ :
nsobject_t 			glkviewcontroller_transitioningDelegate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ safeAreaLayoutGuide @ :
nsobject_t 			glkviewcontroller_safeAreaLayoutGuide( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ extensionContext @ :
nsobject_t 			glkviewcontroller_extensionContext( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v beginRequestWithExtensionContext: @ : @
void 				glkviewcontroller_beginRequestWithExtensionContext( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ navigationItem @ :
nsobject_t 			glkviewcontroller_navigationItem( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storyboard @ :
nsobject_t 			glkviewcontroller_storyboard( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setSearchDisplayController: @ : @
void 				glkviewcontroller_setSearchDisplayController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ searchDisplayController @ :
nsobject_t 			glkviewcontroller_searchDisplayController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setFocusGroupIdentifier: @ : @
void 				glkviewcontroller_setFocusGroupIdentifier( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isEditing @ :
bool 				glkviewcontroller_isEditing( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllers @ :
nsobject_t 			glkviewcontroller_childViewControllers( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ navigationController @ :
nsobject_t 			glkviewcontroller_navigationController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v applicationDidResume @ :
void 				glkviewcontroller_applicationDidResume( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v applicationWillSuspend @ :
void 				glkviewcontroller_applicationWillSuspend( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setInterfaceOrientation: @ : q
void 				glkviewcontroller_setInterfaceOrientation( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: q preferredStatusBarUpdateAnimation @ :
long long 			glkviewcontroller_preferredStatusBarUpdateAnimation( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q preferredStatusBarStyle @ :
long long 			glkviewcontroller_preferredStatusBarStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B prefersHomeIndicatorAutoHidden @ :
bool 				glkviewcontroller_prefersHomeIndicatorAutoHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: Q preferredScreenEdgesDeferringSystemGestures @ :
unsigned long long 	glkviewcontroller_preferredScreenEdgesDeferringSystemGestures( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q preferredWhitePointAdaptivityStyle @ :
long long 			glkviewcontroller_preferredWhitePointAdaptivityStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ viewIfLoaded @ :
nsobject_t 			glkviewcontroller_viewIfLoaded( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setEditing: @ : B
void 				glkviewcontroller_setEditing( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				glkviewcontroller_awakeFromNib( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v encodeRestorableStateWithCoder: @ : @
void 				glkviewcontroller_encodeRestorableStateWithCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B performsActionsWhilePresentingModally @ :
bool 				glkviewcontroller_performsActionsWhilePresentingModally( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ mutableChildViewControllers @ :
nsobject_t 			glkviewcontroller_mutableChildViewControllers( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ actionSheetPresentationController @ :
nsobject_t 			glkviewcontroller_actionSheetPresentationController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setParentViewController: @ : @
void 				glkviewcontroller_setParentViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setPerformingModalTransition: @ : B
void 				glkviewcontroller_setPerformingModalTransition( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: @ childModalViewController @ :
nsobject_t 			glkviewcontroller_childModalViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v systemLayoutFittingSizeDidChangeForChildContentContainer: @ : @
void 				glkviewcontroller_systemLayoutFittingSizeDidChangeForChildContentContainer( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setInAnimatedVCTransition: @ : B
void 				glkviewcontroller_setInAnimatedVCTransition( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setFinishingModalTransition: @ : B
void 				glkviewcontroller_setFinishingModalTransition( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v endAppearanceTransition @ :
void 				glkviewcontroller_endAppearanceTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAppearanceTransitionsAreDisabled: @ : B
void 				glkviewcontroller_setAppearanceTransitionsAreDisabled( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v cancelBeginAppearanceTransition @ :
void 				glkviewcontroller_cancelBeginAppearanceTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setChildModalViewController: @ : @
void 				glkviewcontroller_setChildModalViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v beginAppearanceTransition:animated: @ : B B
void 				glkviewcontroller_beginAppearanceTransition( glkviewcontroller_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: B definesPresentationContext @ :
bool 				glkviewcontroller_definesPresentationContext( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ splitViewController @ :
nsobject_t 			glkviewcontroller_splitViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {CGSize=dd} sizeForChildContentContainer:withParentContainerSize: @ : @ {CGSize=dd}
CGSize 				glkviewcontroller_sizeForChildContentContainer( glkviewcontroller_t object, nsobject_t arg0, CGSize arg1 );

// Signature from Objective-C Runtime: @ overrideTraitCollection @ :
nsobject_t 			glkviewcontroller_overrideTraitCollection( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isModalInPresentation @ :
bool 				glkviewcontroller_isModalInPresentation( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setOverrideTraitCollection: @ : @
void 				glkviewcontroller_setOverrideTraitCollection( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dropShadowView @ :
nsobject_t 			glkviewcontroller_dropShadowView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B disablesAutomaticKeyboardDismissal @ :
bool 				glkviewcontroller_disablesAutomaticKeyboardDismissal( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNeedsStatusBarAppearanceUpdate @ :
void 				glkviewcontroller_setNeedsStatusBarAppearanceUpdate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ tabBarController @ :
nsobject_t 			glkviewcontroller_tabBarController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ moreListTableCell @ :
nsobject_t 			glkviewcontroller_moreListTableCell( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ tabBarItem @ :
nsobject_t 			glkviewcontroller_tabBarItem( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ moreListImage @ :
nsobject_t 			glkviewcontroller_moreListImage( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ moreListSelectedImage @ :
nsobject_t 			glkviewcontroller_moreListSelectedImage( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q preferredInterfaceOrientationForPresentation @ :
long long 			glkviewcontroller_preferredInterfaceOrientationForPresentation( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setContainmentSupport: @ : B
void 				glkviewcontroller_setContainmentSupport( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: Q childViewControllersCount @ :
unsigned long long 	glkviewcontroller_childViewControllersCount( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ preferredFocusedItem @ :
nsobject_t 			glkviewcontroller_preferredFocusedItem( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B restoresFocusAfterTransition @ :
bool 				glkviewcontroller_restoresFocusAfterTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: d durationForTransition: @ : i
double 				glkviewcontroller_durationForTransition( glkviewcontroller_t object, int arg0 );

// Signature from Objective-C Runtime: @ contentScrollViewForEdge: @ : Q
nsobject_t 			glkviewcontroller_contentScrollViewForEdge( glkviewcontroller_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setPreferredFocusedItem: @ : @
void 				glkviewcontroller_setPreferredFocusedItem( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q edgesForExtendedLayout @ :
unsigned long long 	glkviewcontroller_edgesForExtendedLayout( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B extendedLayoutIncludesOpaqueBars @ :
bool 				glkviewcontroller_extendedLayoutIncludesOpaqueBars( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ parentModalViewController @ :
nsobject_t 			glkviewcontroller_parentModalViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B appearanceTransitionsAreDisabled @ :
bool 				glkviewcontroller_appearanceTransitionsAreDisabled( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAfterAppearanceBlock: @ : @?
void 				glkviewcontroller_setAfterAppearanceBlock( glkviewcontroller_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNeedsWhitePointAdaptivityStyleUpdate @ :
void 				glkviewcontroller_setNeedsWhitePointAdaptivityStyleUpdate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNeedsUpdateOfScreenEdgesDeferringSystemGestures @ :
void 				glkviewcontroller_setNeedsUpdateOfScreenEdgesDeferringSystemGestures( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNeedsUpdateOfHomeIndicatorAutoHidden @ :
void 				glkviewcontroller_setNeedsUpdateOfHomeIndicatorAutoHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNeedsUpdateOfPrefersPointerLocked @ :
void 				glkviewcontroller_setNeedsUpdateOfPrefersPointerLocked( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNeedsDidMoveCleanup: @ : B
void 				glkviewcontroller_setNeedsDidMoveCleanup( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B shouldAutorotateToInterfaceOrientation: @ : q
bool 				glkviewcontroller_shouldAutorotateToInterfaceOrientation( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: @ rotatingHeaderView @ :
nsobject_t 			glkviewcontroller_rotatingHeaderView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ rotatingFooterView @ :
nsobject_t 			glkviewcontroller_rotatingFooterView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v willRotateToInterfaceOrientation:duration: @ : q d
void 				glkviewcontroller_willRotateToInterfaceOrientation( glkviewcontroller_t object, long long arg0, double arg1 );

// Signature from Objective-C Runtime: v willAnimateRotationToInterfaceOrientation:duration: @ : q d
void 				glkviewcontroller_willAnimateRotationToInterfaceOrientation( glkviewcontroller_t object, long long arg0, double arg1 );

// Signature from Objective-C Runtime: v willAnimateFirstHalfOfRotationToInterfaceOrientation:duration: @ : q d
void 				glkviewcontroller_willAnimateFirstHalfOfRotationToInterfaceOrientation( glkviewcontroller_t object, long long arg0, double arg1 );

// Signature from Objective-C Runtime: v didAnimateFirstHalfOfRotationToInterfaceOrientation: @ : q
void 				glkviewcontroller_didAnimateFirstHalfOfRotationToInterfaceOrientation( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration: @ : q d
void 				glkviewcontroller_willAnimateSecondHalfOfRotationFromInterfaceOrientation( glkviewcontroller_t object, long long arg0, double arg1 );

// Signature from Objective-C Runtime: v didRotateFromInterfaceOrientation: @ : q
void 				glkviewcontroller_didRotateFromInterfaceOrientation( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v updateTabBarItemForViewController: @ : @
void 				glkviewcontroller_updateTabBarItemForViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unwindForSegue:towardsViewController: @ : @ @
void 				glkviewcontroller_unwindForSegue( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ childViewControllerForStatusBarStyle @ :
nsobject_t 			glkviewcontroller_childViewControllerForStatusBarStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllerForStatusBarHidden @ :
nsobject_t 			glkviewcontroller_childViewControllerForStatusBarHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllerForWhitePointAdaptivityStyle @ :
nsobject_t 			glkviewcontroller_childViewControllerForWhitePointAdaptivityStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllerForScreenEdgesDeferringSystemGestures @ :
nsobject_t 			glkviewcontroller_childViewControllerForScreenEdgesDeferringSystemGestures( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllerForHomeIndicatorAutoHidden @ :
nsobject_t 			glkviewcontroller_childViewControllerForHomeIndicatorAutoHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllerForUserInterfaceStyle @ :
nsobject_t 			glkviewcontroller_childViewControllerForUserInterfaceStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ childViewControllerForPointerLock @ :
nsobject_t 			glkviewcontroller_childViewControllerForPointerLock( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ rotatingSnapshotViewForWindow: @ : @
nsobject_t 			glkviewcontroller_rotatingSnapshotViewForWindow( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ rotatingContentViewForWindow: @ : @
nsobject_t 			glkviewcontroller_rotatingContentViewForWindow( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ rotatingHeaderViewForWindow: @ : @
nsobject_t 			glkviewcontroller_rotatingHeaderViewForWindow( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ rotatingFooterViewForWindow: @ : @
nsobject_t 			glkviewcontroller_rotatingFooterViewForWindow( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B useLayoutToLayoutNavigationTransitions @ :
bool 				glkviewcontroller_useLayoutToLayoutNavigationTransitions( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ nibName @ :
nsobject_t 			glkviewcontroller_nibName( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storyboardIdentifier @ :
nsobject_t 			glkviewcontroller_storyboardIdentifier( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v viewWillUnload @ :
void 				glkviewcontroller_viewWillUnload( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v loadViewIfRequired @ :
void 				glkviewcontroller_loadViewIfRequired( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q modalTransitionStyle @ :
long long 			glkviewcontroller_modalTransitionStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v loadViewIfNeeded @ :
void 				glkviewcontroller_loadViewIfNeeded( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v removeChildViewController:notifyDidMove: @ : @ B
void 				glkviewcontroller_removeChildViewController( glkviewcontroller_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ toolbarItems @ :
nsobject_t 			glkviewcontroller_toolbarItems( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v set_departingParentViewController: @ : @
void 				glkviewcontroller_set_departingParentViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ overrideTraitCollectionForChildViewController: @ : @
nsobject_t 			glkviewcontroller_overrideTraitCollectionForChildViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefinesPresentationContext: @ : B
void 				glkviewcontroller_setDefinesPresentationContext( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B isPerformingModalTransition @ :
bool 				glkviewcontroller_isPerformingModalTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isFinishingModalTransition @ :
bool 				glkviewcontroller_isFinishingModalTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ viewControllerForUnwindSegueAction:fromViewController:withSender: @ : : @ @
nsobject_t 			glkviewcontroller_viewControllerForUnwindSegueAction( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ childViewControllerContainingSegueSource: @ : @
nsobject_t 			glkviewcontroller_childViewControllerContainingSegueSource( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ contentScrollView @ :
nsobject_t 			glkviewcontroller_contentScrollView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {NSDirectionalEdgeInsets=dddd} systemMinimumLayoutMargins @ :
NSDirectionalEdgeInsets glkviewcontroller_systemMinimumLayoutMargins( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v showViewController:sender: @ : @ @
void 				glkviewcontroller_showViewController( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B hidesBottomBarWhenPushed @ :
bool 				glkviewcontroller_hidesBottomBarWhenPushed( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setModalTransitionStyle: @ : q
void 				glkviewcontroller_setModalTransitionStyle( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v setWantsFullScreenLayout: @ : B
void 				glkviewcontroller_setWantsFullScreenLayout( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v presentModalViewController:animated: @ : @ B
void 				glkviewcontroller_presentModalViewController( glkviewcontroller_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: v dismissModalViewControllerAnimated: @ : B
void 				glkviewcontroller_dismissModalViewControllerAnimated( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B canHandleSnapbackIdentifier:animated: @ : @ B
bool 				glkviewcontroller_canHandleSnapbackIdentifier( glkviewcontroller_t object, nsobject_t arg0, bool arg1 );

// Signature from Objective-C Runtime: @ defaultPNGName @ :
nsobject_t 			glkviewcontroller_defaultPNGName( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {CGSize=dd} contentSizeForViewInPopover @ :
CGSize 				glkviewcontroller_contentSizeForViewInPopover( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isModalInPopover @ :
bool 				glkviewcontroller_isModalInPopover( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B searchBarHidNavBar @ :
bool 				glkviewcontroller_searchBarHidNavBar( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setSearchBarHidNavBar: @ : B
void 				glkviewcontroller_setSearchBarHidNavBar( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: @ allowedChildViewControllersForUnwindingFromSource: @ : @
nsobject_t 			glkviewcontroller_allowedChildViewControllersForUnwindingFromSource( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ segueForUnwindingToViewController:fromViewController:identifier: @ : @ @ @
nsobject_t 			glkviewcontroller_segueForUnwindingToViewController( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v collapseSecondaryViewController:forSplitViewController: @ : @ @
void 				glkviewcontroller_collapseSecondaryViewController( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ separateSecondaryViewControllerForSplitViewController: @ : @
nsobject_t 			glkviewcontroller_separateSecondaryViewControllerForSplitViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateTitleForViewController: @ : @
void 				glkviewcontroller_updateTitleForViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B shouldAutomaticallyForwardAppearanceMethods @ :
bool 				glkviewcontroller_shouldAutomaticallyForwardAppearanceMethods( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B shouldAutomaticallyForwardRotationMethods @ :
bool 				glkviewcontroller_shouldAutomaticallyForwardRotationMethods( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setToolbarItems: @ : @
void 				glkviewcontroller_setToolbarItems( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v window:setupWithInterfaceOrientation: @ : @ q
void 				glkviewcontroller_window( glkviewcontroller_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ savedHeaderSuperview @ :
nsobject_t 			glkviewcontroller_savedHeaderSuperview( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v showDetailViewController:sender: @ : @ @
void 				glkviewcontroller_showDetailViewController( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setProvidesPresentationContextTransitionStyle: @ : B
void 				glkviewcontroller_setProvidesPresentationContextTransitionStyle( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setRestoresFocusAfterTransition: @ : B
void 				glkviewcontroller_setRestoresFocusAfterTransition( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setModalPresentationCapturesStatusBarAppearance: @ : B
void 				glkviewcontroller_setModalPresentationCapturesStatusBarAppearance( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setEdgesForExtendedLayout: @ : Q
void 				glkviewcontroller_setEdgesForExtendedLayout( glkviewcontroller_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setExtendedLayoutIncludesOpaqueBars: @ : B
void 				glkviewcontroller_setExtendedLayoutIncludesOpaqueBars( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAutomaticallyAdjustsScrollViewInsets: @ : B
void 				glkviewcontroller_setAutomaticallyAdjustsScrollViewInsets( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setViewRespectsSystemMinimumLayoutMargins: @ : B
void 				glkviewcontroller_setViewRespectsSystemMinimumLayoutMargins( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v unloadViewForced: @ : B
void 				glkviewcontroller_unloadViewForced( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v unloadViewIfReloadable @ :
void 				glkviewcontroller_unloadViewIfReloadable( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ navigationInsetAdjustment @ :
nsobject_t 			glkviewcontroller_navigationInsetAdjustment( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v viewSafeAreaInsetsDidChange @ :
void 				glkviewcontroller_viewSafeAreaInsetsDidChange( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B ignoresParentMargins @ :
bool 				glkviewcontroller_ignoresParentMargins( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B viewRespectsSystemMinimumLayoutMargins @ :
bool 				glkviewcontroller_viewRespectsSystemMinimumLayoutMargins( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} additionalSafeAreaInsets @ :
UIEdgeInsets 		glkviewcontroller_additionalSafeAreaInsets( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {CGSize=dd} contentSizeForViewInPopoverView @ :
CGSize 				glkviewcontroller_contentSizeForViewInPopoverView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v systemLayoutFittingSizeDidChangeForChildViewController: @ : @
void 				glkviewcontroller_systemLayoutFittingSizeDidChangeForChildViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setModalInPopover: @ : B
void 				glkviewcontroller_setModalInPopover( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setModalInPresentation: @ : B
void 				glkviewcontroller_setModalInPresentation( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v applicationWantsViewsToDisappear @ :
void 				glkviewcontroller_applicationWantsViewsToDisappear( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v accessibilityLargeTextDidChange @ :
void 				glkviewcontroller_accessibilityLargeTextDidChange( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setParentModalViewController: @ : @
void 				glkviewcontroller_setParentModalViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q preferredUserInterfaceStyle @ :
long long 			glkviewcontroller_preferredUserInterfaceStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q overrideUserInterfaceStyle @ :
long long 			glkviewcontroller_overrideUserInterfaceStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setOverrideUserInterfaceStyle: @ : q
void 				glkviewcontroller_setOverrideUserInterfaceStyle( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nibBundle @ :
nsobject_t 			glkviewcontroller_nibBundle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setNibName: @ : @
void 				glkviewcontroller_setNibName( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNibBundle: @ : @
void 				glkviewcontroller_setNibBundle( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ storyboardSegueTemplates @ :
nsobject_t 			glkviewcontroller_storyboardSegueTemplates( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B autoresizesArchivedViewToFullSize @ :
bool 				glkviewcontroller_autoresizesArchivedViewToFullSize( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B canPerformUnwindSegueAction:fromViewController:sender: @ : : @ @
bool 				glkviewcontroller_canPerformUnwindSegueAction( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: B containmentSupport @ :
bool 				glkviewcontroller_containmentSupport( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers @ :
bool 				glkviewcontroller_automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isSettingAppearState @ :
bool 				glkviewcontroller_isSettingAppearState( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v viewIsAppearing: @ : B
void 				glkviewcontroller_viewIsAppearing( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B isInAnimatedVCTransition @ :
bool 				glkviewcontroller_isInAnimatedVCTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @? afterAppearanceBlock @ :
nsobject_t* 		glkviewcontroller_afterAppearanceBlock( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v didReceiveMemoryWarning @ :
void 				glkviewcontroller_didReceiveMemoryWarning( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B wantsFullScreenLayout @ :
bool 				glkviewcontroller_wantsFullScreenLayout( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B automaticallyAdjustsScrollViewInsets @ :
bool 				glkviewcontroller_automaticallyAdjustsScrollViewInsets( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ currentAction @ :
nsobject_t 			glkviewcontroller_currentAction( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {CGSize=dd} formSheetSize @ :
CGSize 				glkviewcontroller_formSheetSize( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B providesPresentationContextTransitionStyle @ :
bool 				glkviewcontroller_providesPresentationContextTransitionStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setDropShadowView: @ : @
void 				glkviewcontroller_setDropShadowView( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v dismissViewControllerWithTransition:completion: @ : i @?
void 				glkviewcontroller_dismissViewControllerWithTransition( glkviewcontroller_t object, int arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ customTransitioningView @ :
nsobject_t 			glkviewcontroller_customTransitioningView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setCustomTransitioningView: @ : @
void 				glkviewcontroller_setCustomTransitioningView( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ targetViewControllerForAction:sender: @ : : @
nsobject_t 			glkviewcontroller_targetViewControllerForAction( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v unregisterPreviewing: @ : @
void 				glkviewcontroller_unregisterPreviewing( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ registerForPreviewingWithDelegate:sourceView: @ : @ @
nsobject_t 			glkviewcontroller_registerForPreviewingWithDelegate( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ previewMenuItems @ :
nsobject_t 			glkviewcontroller_previewMenuItems( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ previewActions @ :
nsobject_t 			glkviewcontroller_previewActions( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setInWillRotateCallback: @ : B
void 				glkviewcontroller_setInWillRotateCallback( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: B prefersStatusBarHidden @ :
bool 				glkviewcontroller_prefersStatusBarHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B modalPresentationCapturesStatusBarAppearance @ :
bool 				glkviewcontroller_modalPresentationCapturesStatusBarAppearance( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B shouldWindowUseOnePartInterfaceRotationAnimation: @ : @
bool 				glkviewcontroller_shouldWindowUseOnePartInterfaceRotationAnimation( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAdditionalSafeAreaInsets: @ : {UIEdgeInsets=dddd}
void 				glkviewcontroller_setAdditionalSafeAreaInsets( glkviewcontroller_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: v viewLayoutMarginsDidChange @ :
void 				glkviewcontroller_viewLayoutMarginsDidChange( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ topLayoutGuide @ :
nsobject_t 			glkviewcontroller_topLayoutGuide( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ bottomLayoutGuide @ :
nsobject_t 			glkviewcontroller_bottomLayoutGuide( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setFormSheetSize: @ : {CGSize=dd}
void 				glkviewcontroller_setFormSheetSize( glkviewcontroller_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B modalInPopover @ :
bool 				glkviewcontroller_modalInPopover( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setPreferredUserInterfaceStyle: @ : q
void 				glkviewcontroller_setPreferredUserInterfaceStyle( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v setNeedsUserInterfaceAppearanceUpdate @ :
void 				glkviewcontroller_setNeedsUserInterfaceAppearanceUpdate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v forceUnloadView @ :
void 				glkviewcontroller_forceUnloadView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setContentScrollView:forEdge: @ : @ Q
void 				glkviewcontroller_setContentScrollView( glkviewcontroller_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: v setAutoresizesArchivedViewToFullSize: @ : B
void 				glkviewcontroller_setAutoresizesArchivedViewToFullSize( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v performSegueWithIdentifier:sender: @ : @ @
void 				glkviewcontroller_performSegueWithIdentifier( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B shouldPerformSegueWithIdentifier:sender: @ : @ @
bool 				glkviewcontroller_shouldPerformSegueWithIdentifier( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v prepareForSegue:sender: @ : @ @
void 				glkviewcontroller_prepareForSegue( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setMutableChildViewControllers: @ : @
void 				glkviewcontroller_setMutableChildViewControllers( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B needsDidMoveCleanup @ :
bool 				glkviewcontroller_needsDidMoveCleanup( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v updateViewConstraints @ :
void 				glkviewcontroller_updateViewConstraints( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B inExplicitAppearanceTransition @ :
bool 				glkviewcontroller_inExplicitAppearanceTransition( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v viewWillMoveToWindow: @ : @
void 				glkviewcontroller_viewWillMoveToWindow( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v purgeMemoryForReason: @ : i
void 				glkviewcontroller_purgeMemoryForReason( glkviewcontroller_t object, int arg0 );

// Signature from Objective-C Runtime: v setShouldForceNonAnimatedTransition: @ : B
void 				glkviewcontroller_setShouldForceNonAnimatedTransition( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: @ modalViewController @ :
nsobject_t 			glkviewcontroller_modalViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isSheet @ :
bool 				glkviewcontroller_isSheet( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setIsSheet: @ : B
void 				glkviewcontroller_setIsSheet( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v dismissModalViewControllerWithTransition: @ : i
void 				glkviewcontroller_dismissModalViewControllerWithTransition( glkviewcontroller_t object, int arg0 );

// Signature from Objective-C Runtime: B transitionViewShouldUseViewControllerCallbacks @ :
bool 				glkviewcontroller_transitionViewShouldUseViewControllerCallbacks( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ sheetPresentationController @ :
nsobject_t 			glkviewcontroller_sheetPresentationController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v unregisterForPreviewingWithContext: @ : @
void 				glkviewcontroller_unregisterForPreviewingWithContext( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v registerPreviewSourceView:previewingDelegate: @ : @ @
void 				glkviewcontroller_registerPreviewSourceView( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v unregisterPreviewSourceView: @ : @
void 				glkviewcontroller_unregisterPreviewSourceView( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ previewActionItems @ :
nsobject_t 			glkviewcontroller_previewActionItems( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ leadingPreviewAction @ :
nsobject_t 			glkviewcontroller_leadingPreviewAction( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ trailingPreviewAction @ :
nsobject_t 			glkviewcontroller_trailingPreviewAction( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isInWillRotateCallback @ :
bool 				glkviewcontroller_isInWillRotateCallback( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B prefersPointerLocked @ :
bool 				glkviewcontroller_prefersPointerLocked( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isMovingToParentViewController @ :
bool 				glkviewcontroller_isMovingToParentViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isMovingFromParentViewController @ :
bool 				glkviewcontroller_isMovingFromParentViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setPreferredFocusedView: @ : @
void 				glkviewcontroller_setPreferredFocusedView( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d customNavigationInteractiveTransitionDuration @ :
double 				glkviewcontroller_customNavigationInteractiveTransitionDuration( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setCustomNavigationInteractiveTransitionDuration: @ : d
void 				glkviewcontroller_setCustomNavigationInteractiveTransitionDuration( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: d customNavigationInteractiveTransitionPercentComplete @ :
double 				glkviewcontroller_customNavigationInteractiveTransitionPercentComplete( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setCustomNavigationInteractiveTransitionPercentComplete: @ : d
void 				glkviewcontroller_setCustomNavigationInteractiveTransitionPercentComplete( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: v set_nextResponderIgnoresChildModalVC: @ : B
void 				glkviewcontroller_set_nextResponderIgnoresChildModalVC( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v set_nextResponderIgnoresOverride: @ : B
void 				glkviewcontroller_set_nextResponderIgnoresOverride( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setNavigationInsetAdjustment: @ : @
void 				glkviewcontroller_setNavigationInsetAdjustment( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ storyboardPreviewSegueTemplates @ :
nsobject_t 			glkviewcontroller_storyboardPreviewSegueTemplates( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storyboardCommitSegueTemplates @ :
nsobject_t 			glkviewcontroller_storyboardCommitSegueTemplates( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storyboardPreviewingRegistrants @ :
nsobject_t 			glkviewcontroller_storyboardPreviewingRegistrants( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setIgnoresParentMargins: @ : B
void 				glkviewcontroller_setIgnoresParentMargins( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setTabBarItem: @ : @
void 				glkviewcontroller_setTabBarItem( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ editButtonItem @ :
nsobject_t 			glkviewcontroller_editButtonItem( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setHidesBottomBarWhenPushed: @ : B
void 				glkviewcontroller_setHidesBottomBarWhenPushed( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v transitionFromViewController:toViewController:duration:options:animations:completion: @ : @ @ d Q @? @?
void 				glkviewcontroller_transitionFromViewController( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, double arg2, unsigned long long arg3, nsobject_t* arg4, nsobject_t* arg5 );

// Signature from Objective-C Runtime: @ traitCollectionForChildViewController: @ : @
nsobject_t 			glkviewcontroller_traitCollectionForChildViewController( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setStoryboardIdentifier: @ : @
void 				glkviewcontroller_setStoryboardIdentifier( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # restorationClass @ :
nsclass_t 			glkviewcontroller_restorationClass( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setRestorationClass: @ : #
void 				glkviewcontroller_setRestorationClass( glkviewcontroller_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: v applicationFinishedRestoringState @ :
void 				glkviewcontroller_applicationFinishedRestoringState( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setUserActivity: @ : @
void 				glkviewcontroller_setUserActivity( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateUserActivityState: @ : @
void 				glkviewcontroller_updateUserActivityState( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreUserActivityState: @ : @
void 				glkviewcontroller_restoreUserActivityState( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v attentionClassDumpUser:yesItsUsAgain:althoughSwizzlingAndOverridingPrivateMethodsIsFun:itWasntMuchFunWhenYourAppStoppedWorking:pleaseRefrainFromDoingSoInTheFutureOkayThanksBye: @ : @ @ @ @ @
void 				glkviewcontroller_attentionClassDumpUser( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3, nsobject_t arg4 );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				glkviewcontroller_doesNotRecognizeSelector( glkviewcontroller_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: q selectionAffinity @ :
long long 			glkviewcontroller_selectionAffinity( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isFirstResponder @ :
bool 				glkviewcontroller_isFirstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B becomeFirstResponder @ :
bool 				glkviewcontroller_becomeFirstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ firstResponder @ :
nsobject_t 			glkviewcontroller_firstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v touchesBegan:withEvent: @ : @ @
void 				glkviewcontroller_touchesBegan( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesMoved:withEvent: @ : @ @
void 				glkviewcontroller_touchesMoved( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesEnded:withEvent: @ : @ @
void 				glkviewcontroller_touchesEnded( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesCancelled:withEvent: @ : @ @
void 				glkviewcontroller_touchesCancelled( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesBegan:withEvent: @ : @ @
void 				glkviewcontroller_pressesBegan( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesChanged:withEvent: @ : @ @
void 				glkviewcontroller_pressesChanged( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesEnded:withEvent: @ : @ @
void 				glkviewcontroller_pressesEnded( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesCancelled:withEvent: @ : @ @
void 				glkviewcontroller_pressesCancelled( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B resignFirstResponder @ :
bool 				glkviewcontroller_resignFirstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B canBecomeFirstResponder @ :
bool 				glkviewcontroller_canBecomeFirstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ inputAccessoryView @ :
nsobject_t 			glkviewcontroller_inputAccessoryView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ inputView @ :
nsobject_t 			glkviewcontroller_inputView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ inputViewController @ :
nsobject_t 			glkviewcontroller_inputViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q editingInteractionConfiguration @ :
long long 			glkviewcontroller_editingInteractionConfiguration( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ textInputView @ :
nsobject_t 			glkviewcontroller_textInputView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v validateCommand: @ : @
void 				glkviewcontroller_validateCommand( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ inputAssistantItem @ :
nsobject_t 			glkviewcontroller_inputAssistantItem( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v reloadInputViews @ :
void 				glkviewcontroller_reloadInputViews( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B canResignFirstResponder @ :
bool 				glkviewcontroller_canResignFirstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ userActivity @ :
nsobject_t 			glkviewcontroller_userActivity( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v decodeRestorableStateWithCoder: @ : @
void 				glkviewcontroller_decodeRestorableStateWithCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ targetForAction:withSender: @ : : @
nsobject_t 			glkviewcontroller_targetForAction( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ restorationIdentifier @ :
nsobject_t 			glkviewcontroller_restorationIdentifier( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setRestorationIdentifier: @ : @
void 				glkviewcontroller_setRestorationIdentifier( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesEstimatedPropertiesUpdated: @ : @
void 				glkviewcontroller_touchesEstimatedPropertiesUpdated( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isEditable @ :
bool 				glkviewcontroller_isEditable( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ undoManager @ :
nsobject_t 			glkviewcontroller_undoManager( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ pasteConfiguration @ :
nsobject_t 			glkviewcontroller_pasteConfiguration( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v beginSelectionChange @ :
void 				glkviewcontroller_beginSelectionChange( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v endSelectionChange @ :
void 				glkviewcontroller_endSelectionChange( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ activityItemsConfiguration @ :
nsobject_t 			glkviewcontroller_activityItemsConfiguration( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setActivityItemsConfiguration: @ : @
void 				glkviewcontroller_setActivityItemsConfiguration( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ inputAccessoryViewController @ :
nsobject_t 			glkviewcontroller_inputAccessoryViewController( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ interactionAssistant @ :
nsobject_t 			glkviewcontroller_interactionAssistant( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ textInputSuggestionDelegate @ :
nsobject_t 			glkviewcontroller_textInputSuggestionDelegate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v set_textInputSource: @ : q
void 				glkviewcontroller_set_textInputSource( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v captureTextFromCamera: @ : @
void 				glkviewcontroller_captureTextFromCamera( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ textInputContextIdentifier @ :
nsobject_t 			glkviewcontroller_textInputContextIdentifier( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ textInputMode @ :
nsobject_t 			glkviewcontroller_textInputMode( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ recentsAccessoryView @ :
nsobject_t 			glkviewcontroller_recentsAccessoryView( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v remoteControlReceivedWithEvent: @ : @
void 				glkviewcontroller_remoteControlReceivedWithEvent( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v motionBegan:withEvent: @ : q @
void 				glkviewcontroller_motionBegan( glkviewcontroller_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v motionEnded:withEvent: @ : q @
void 				glkviewcontroller_motionEnded( glkviewcontroller_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v motionCancelled:withEvent: @ : q @
void 				glkviewcontroller_motionCancelled( glkviewcontroller_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v buildMenuWithBuilder: @ : @
void 				glkviewcontroller_buildMenuWithBuilder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nextFirstResponder @ :
nsobject_t 			glkviewcontroller_nextFirstResponder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v pasteItemProviders: @ : @
void 				glkviewcontroller_pasteItemProviders( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateTextAttributesWithConversionHandler: @ : @?
void 				glkviewcontroller_updateTextAttributesWithConversionHandler( glkviewcontroller_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v scrollWheel: @ : ^{__GSEvent=}
void 				glkviewcontroller_scrollWheel( glkviewcontroller_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureStarted: @ : ^{__GSEvent=}
void 				glkviewcontroller_gestureStarted( glkviewcontroller_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureEnded: @ : ^{__GSEvent=}
void 				glkviewcontroller_gestureEnded( glkviewcontroller_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureChanged: @ : ^{__GSEvent=}
void 				glkviewcontroller_gestureChanged( glkviewcontroller_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v setPasteConfiguration: @ : @
void 				glkviewcontroller_setPasteConfiguration( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B canPasteItemProviders: @ : @
bool 				glkviewcontroller_canPasteItemProviders( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B shouldReloadInputViews @ :
bool 				glkviewcontroller_shouldReloadInputViews( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v reloadInputViewsWithoutReset @ :
void 				glkviewcontroller_reloadInputViewsWithoutReset( glkviewcontroller_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			glkviewcontroller_classForCoder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			glkviewcontroller_replacementObjectForCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			glkviewcontroller_awakeAfterUsingCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				glkviewcontroller_implementsSelector( glkviewcontroller_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				glkviewcontroller_setObservationInfo( glkviewcontroller_t object, void* arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			glkviewcontroller_replacementObjectForPortCoder( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				glkviewcontroller_willChangeValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				glkviewcontroller_didChangeValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			glkviewcontroller_replacementObjectForArchiver( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			glkviewcontroller_classForArchiver( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			glkviewcontroller_valueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			glkviewcontroller_classForKeyedArchiver( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			glkviewcontroller_replacementObjectForKeyedArchiver( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* glkviewcontroller_methodDescriptionForSelector( glkviewcontroller_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			glkviewcontroller_valueForKeyPath( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			glkviewcontroller_mutableArrayValueForKeyPath( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			glkviewcontroller_mutableOrderedSetValueForKeyPath( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			glkviewcontroller_mutableSetValueForKeyPath( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			glkviewcontroller_addObserver( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				glkviewcontroller_removeObservation( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				glkviewcontroller_receiveObservedValue( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				glkviewcontroller_receiveObservedError( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				glkviewcontroller_finishObserving( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				glkviewcontroller_setObservation( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				glkviewcontroller_observeValueForKeyPath( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				glkviewcontroller_removeObserver( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			glkviewcontroller_addChainedObservers( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			glkviewcontroller_addObserverBlock( glkviewcontroller_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			glkviewcontroller_addObservationTransformer( glkviewcontroller_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			glkviewcontroller_valueForUndefinedKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				glkviewcontroller_setNilValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			glkviewcontroller_mutableArrayValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			glkviewcontroller_mutableOrderedSetValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			glkviewcontroller_mutableSetValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			glkviewcontroller_dictionaryWithValuesForKeys( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				glkviewcontroller_setValuesForKeysWithDictionary( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				glkviewcontroller_willChange( glkviewcontroller_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				glkviewcontroller_didChange( glkviewcontroller_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				glkviewcontroller_observationInfo( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			glkviewcontroller_autoContentAccessingProxy( glkviewcontroller_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			glkviewcontroller_classForPortCoder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				glkviewcontroller_performSelector( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				glkviewcontroller_performSelectorOnMainThread( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				glkviewcontroller_performSelectorInBackground( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				glkviewcontroller_isNSDate__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				glkviewcontroller_isNSString__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				glkviewcontroller_isNSCFConstantString__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				glkviewcontroller_isNSNumber__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				glkviewcontroller_isNSArray__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				glkviewcontroller_isNSDictionary__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				glkviewcontroller_isNSData__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				glkviewcontroller_isNSObject__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				glkviewcontroller_isNSOrderedSet__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				glkviewcontroller_isNSSet__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				glkviewcontroller_isNSTimeZone__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				glkviewcontroller_isNSValue__( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			glkviewcontroller_description( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			glkviewcontroller_methodSignatureForSelector( glkviewcontroller_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				glkviewcontroller_CA_distanceToValue( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			glkviewcontroller_CA_copyRenderValueWithColorspace( glkviewcontroller_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			glkviewcontroller_CA_copyRenderValue( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			glkviewcontroller_CA_interpolateValue( glkviewcontroller_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			glkviewcontroller_CA_addValue( glkviewcontroller_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				glkviewcontroller_CAMLTypeSupportedForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			glkviewcontroller_CAMLTypeForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				glkviewcontroller_CA_validateValue( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				glkviewcontroller_encodeWithCAMLWriter( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			glkviewcontroller_CA_interpolateValues( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			glkviewcontroller_CAMLType( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				glkviewcontroller_CA_prepareRenderValue( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			glkviewcontroller_CA_archivingValueForKey( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			glkviewcontroller_CA_roundToIntegerFromValue( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			glkviewcontroller_className( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			glkviewcontroller_accessibilityLabel( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				glkviewcontroller_setAccessibilityLabel( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				glkviewcontroller_accessibilityFrame( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			glkviewcontroller_storedAccessibilityViewIsModal( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			glkviewcontroller_storedAccessibilityElementsHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			glkviewcontroller_storedShouldGroupAccessibilityChildren( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			glkviewcontroller_storedAccessibilityNavigationStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			glkviewcontroller_storedAccessibilityRespondsToUserInteraction( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			glkviewcontroller_accessibilityAttributedLabel( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			glkviewcontroller_accessibilityValue( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			glkviewcontroller_accessibilityAttributedValue( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			glkviewcontroller_accessibilityHint( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			glkviewcontroller_accessibilityAttributedHint( glkviewcontroller_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			glkviewcontroller_accessibilityActivationPoint( glkviewcontroller_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	glkviewcontroller_accessibilityTraits( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				glkviewcontroller_isAccessibilityElement( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			glkviewcontroller_accessibilityContainer( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			glkviewcontroller_accessibilityLanguage( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			glkviewcontroller_accessibilityPath( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				glkviewcontroller_accessibilityViewIsModal( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				glkviewcontroller_accessibilityElementsHidden( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				glkviewcontroller_shouldGroupAccessibilityChildren( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			glkviewcontroller_accessibilityNavigationStyle( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				glkviewcontroller_accessibilityRespondsToUserInteraction( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			glkviewcontroller_accessibilityUserInputLabels( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			glkviewcontroller_accessibilityAttributedUserInputLabels( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			glkviewcontroller_storedAccessibilityIdentifier( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			glkviewcontroller_storedAccessibilityTraits( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			glkviewcontroller_storedIsAccessibilityElement( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			glkviewcontroller_storedAccessibilityFrame( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			glkviewcontroller_storedAccessibilityActivationPoint( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			glkviewcontroller_accessibilityHeaderElements( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				glkviewcontroller_setAccessibilityElementsHidden( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				glkviewcontroller_setAccessibilityViewIsModal( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				glkviewcontroller_setAccessibilityAttributedLabel( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				glkviewcontroller_setAccessibilityValue( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				glkviewcontroller_setAccessibilityAttributedValue( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				glkviewcontroller_setAccessibilityHint( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				glkviewcontroller_setAccessibilityAttributedHint( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				glkviewcontroller_setAccessibilityFrame( glkviewcontroller_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				glkviewcontroller_setAccessibilityPath( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				glkviewcontroller_setAccessibilityActivationPoint( glkviewcontroller_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				glkviewcontroller_setAccessibilityTraits( glkviewcontroller_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				glkviewcontroller_setIsAccessibilityElement( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				glkviewcontroller_setAccessibilityContainer( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				glkviewcontroller_setAccessibilityLanguage( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				glkviewcontroller_setShouldGroupAccessibilityChildren( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				glkviewcontroller_setAccessibilityNavigationStyle( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				glkviewcontroller_setAccessibilityRespondsToUserInteraction( glkviewcontroller_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				glkviewcontroller_setAccessibilityUserInputLabels( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				glkviewcontroller_setAccessibilityAttributedUserInputLabels( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			glkviewcontroller_accessibilityTextualContext( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				glkviewcontroller_setAccessibilityTextualContext( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				glkviewcontroller_setAccessibilityHeaderElements( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				glkviewcontroller_accessibilityElementDidBecomeFocused( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				glkviewcontroller_accessibilityElementDidLoseFocus( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				glkviewcontroller_accessibilityElementIsFocused( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			glkviewcontroller_accessibilityAssistiveTechnologyFocusedIdentifiers( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				glkviewcontroller_accessibilityIncrement( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				glkviewcontroller_accessibilityDecrement( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				glkviewcontroller_accessibilityScroll( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				glkviewcontroller_accessibilityPerformEscape( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				glkviewcontroller_accessibilityPerformMagicTap( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				glkviewcontroller_accessibilityActivate( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				glkviewcontroller_setAccessibilityCustomActions( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			glkviewcontroller_accessibilityCustomActions( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			glkviewcontroller_accessibilityIdentification( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				glkviewcontroller_accessibilitySetIdentification( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	glkviewcontroller_defaultAccessibilityTraits( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				glkviewcontroller_isAccessibilityElementByDefault( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				glkviewcontroller_isElementAccessibilityExposedToInterfaceBuilder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			glkviewcontroller_accessibilityLocalizedStringKey( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				glkviewcontroller_setAccessibilityDragSourceDescriptors( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			glkviewcontroller_accessibilityDragSourceDescriptors( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				glkviewcontroller_setAccessibilityDropPointDescriptors( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			glkviewcontroller_accessibilityDropPointDescriptors( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			glkviewcontroller_storedAccessibilityContainerType( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			glkviewcontroller_accessibilityElementCount( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			glkviewcontroller_accessibilityElementAtIndex( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			glkviewcontroller_indexOfAccessibilityElement( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			glkviewcontroller_accessibilityElements( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				glkviewcontroller_setAccessibilityElements( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			glkviewcontroller_accessibilityContainerType( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				glkviewcontroller_setAccessibilityContainerType( glkviewcontroller_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				glkviewcontroller_setAccessibilityCustomRotors( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			glkviewcontroller_accessibilityCustomRotors( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			glkviewcontroller_uiPresentationManager( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				glkviewcontroller_conformsToProtocolCached( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				glkviewcontroller_prepareForInterfaceBuilder( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			glkviewcontroller_initFromPQLResultSet( glkviewcontroller_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				glkviewcontroller_supportsRBSXPCSecureCoding( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				glkviewcontroller_RBSIsXPCObject( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			glkviewcontroller_NSRepresentation( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			glkviewcontroller_pep_onMainThread( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			glkviewcontroller_pep_onThread( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			glkviewcontroller_pep_onOperationQueue( glkviewcontroller_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			glkviewcontroller_pep_onMainThreadIfNecessary( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			glkviewcontroller_pep_afterDelay( glkviewcontroller_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			glkviewcontroller_pep_getInvocation( glkviewcontroller_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			glkviewcontroller_stringValueSafe( glkviewcontroller_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				glkviewcontroller_utf8ValueSafe( glkviewcontroller_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				glkviewcontroller_boolValueSafe( glkviewcontroller_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			glkviewcontroller_int64ValueSafe( glkviewcontroller_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				glkviewcontroller_doubleValueSafe( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				glkviewcontroller_un_safeBoolValue( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				glkviewcontroller_supportsBSXPCSecureCoding( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				glkviewcontroller_bs_isPlistableType( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			glkviewcontroller_bs_secureEncoded( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			glkviewcontroller_bs_encoded( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				glkviewcontroller_releaseOnMainThread( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			glkviewcontroller_debugHierarchyAdditionalGroupingIDs( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ debugHierarchyObjectsInGroupWithID:outOptions: @ : @ ^@
nsobject_t 			glkviewcontroller_debugHierarchyObjectsInGroupWithID( glkviewcontroller_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ debugHierarchyPropertyDescriptions @ :
nsobject_t 			glkviewcontroller_debugHierarchyPropertyDescriptions( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ debugHierarchyValueForPropertyWithName: @ : @
nsobject_t 			glkviewcontroller_debugHierarchyValueForPropertyWithName( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SCN_setupDisplayLinkWithQueue:screen:policy: @ : @ @ Q
nsobject_t 			glkviewcontroller_SCN_setupDisplayLinkWithQueue( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: v postNotificationWithDescription: @ : @
void 				glkviewcontroller_postNotificationWithDescription( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B okToNotifyFromThisThread @ :
bool 				glkviewcontroller_okToNotifyFromThisThread( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPerformSelector:withObject: @ : : @
void 				glkviewcontroller_fromNotifySafeThreadPerformSelector( glkviewcontroller_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v allowSafePerformSelector @ :
void 				glkviewcontroller_allowSafePerformSelector( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v disallowSafePerformSelector @ :
void 				glkviewcontroller_disallowSafePerformSelector( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				glkviewcontroller_fromNotifySafeThreadPostNotificationName( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v fromMainThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				glkviewcontroller_fromMainThreadPostNotificationName( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v cn_updateDictionaryForKey:withChanges: @ : @ @
void 				glkviewcontroller_cn_updateDictionaryForKey( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionAtIndent: @ : Q
nsobject_t 			glkviewcontroller_descriptionAtIndent( glkviewcontroller_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: B isNull @ :
bool 				glkviewcontroller_isNull( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKDescription @ :
nsobject_t 			glkviewcontroller_CKDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescription @ :
nsobject_t 			glkviewcontroller_CKPropertiesDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKUnredactedDescription @ :
nsobject_t 			glkviewcontroller_CKUnredactedDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKRedactedDescription @ :
nsobject_t 			glkviewcontroller_CKRedactedDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKDescriptionPropertiesWithPublic:private:shouldExpand: @ : B B B
nsobject_t 			glkviewcontroller_CKDescriptionPropertiesWithPublic( glkviewcontroller_t object, bool arg0, bool arg1, bool arg2 );

// Signature from Objective-C Runtime: v CKAssignToContainerWithID: @ : @
void 				glkviewcontroller_CKAssignToContainerWithID( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSingleLineDescription @ :
nsobject_t 			glkviewcontroller_CKSingleLineDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescriptionStringFromProperties: @ : @
nsobject_t 			glkviewcontroller_CKPropertiesDescriptionStringFromProperties( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKExpandedDescription @ :
nsobject_t 			glkviewcontroller_CKExpandedDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ CKHashedDescription @ :
nsobject_t 			glkviewcontroller_CKHashedDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v ck_bindInStatement:atIndex: @ : @ Q
void 				glkviewcontroller_ck_bindInStatement( glkviewcontroller_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ CKDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			glkviewcontroller_CKDescriptionRedact( glkviewcontroller_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ CKObjectDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			glkviewcontroller_CKObjectDescriptionRedact( glkviewcontroller_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForName:object:queue:usingBlock: @ : @ @ @ @?
nsobject_t 			glkviewcontroller_fm_addNotificationBlockObserverForName( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForObject:keyPath:options:usingBlock: @ : @ @ Q @?
nsobject_t 			glkviewcontroller_fm_addNotificationBlockObserverForObject( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v fm_removeNotificationBlockObserver: @ : @
void 				glkviewcontroller_fm_removeNotificationBlockObserver( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_nullToNil @ :
nsobject_t 			glkviewcontroller_fm_nullToNil( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ fm_logID @ :
nsobject_t 			glkviewcontroller_fm_logID( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ nullToNil @ :
nsobject_t 			glkviewcontroller_nullToNil( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ logID @ :
nsobject_t 			glkviewcontroller_logID( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v if_setValueIfNonNil:forKey: @ : @ @
void 				glkviewcontroller_if_setValueIfNonNil( glkviewcontroller_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v if_setValueIfYES:forKey: @ : B @
void 				glkviewcontroller_if_setValueIfYES( glkviewcontroller_t object, bool arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ toPBCodable @ :
nsobject_t 			glkviewcontroller_toPBCodable( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ ams_generateDescriptionWithSubObjects: @ : @
nsobject_t 			glkviewcontroller_ams_generateDescriptionWithSubObjects( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				glkviewcontroller_isProxy( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				glkviewcontroller_isEqual( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			glkviewcontroller_class( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			glkviewcontroller_self( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				glkviewcontroller_isKindOfClass( glkviewcontroller_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				glkviewcontroller_isMemberOfClass( glkviewcontroller_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				glkviewcontroller_conformsToProtocol( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				glkviewcontroller_respondsToSelector( glkviewcontroller_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			glkviewcontroller_zone( glkviewcontroller_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	glkviewcontroller_hash( glkviewcontroller_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			glkviewcontroller_superclass( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			glkviewcontroller_debugDescription( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				glkviewcontroller_retainWeakReference( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				glkviewcontroller_allowsWeakReference( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			glkviewcontroller_copy( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				glkviewcontroller_finalize( glkviewcontroller_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				glkviewcontroller_isFault( glkviewcontroller_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				glkviewcontroller_forwardInvocation( glkviewcontroller_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			glkviewcontroller_forwardingTargetForSelector( glkviewcontroller_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			glkviewcontroller_mutableCopy( glkviewcontroller_t object );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyChildGroupingID @ :
nsobject_t 			glkviewcontroller_fallback_debugHierarchyChildGroupingID( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			glkviewcontroller_fallback_debugHierarchyAdditionalGroupingIDs( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyObjectsInGroupWithID:onObject:outOptions: @ : @ @ ^@
nsobject_t 			glkviewcontroller_fallback_debugHierarchyObjectsInGroupWithID( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyPropertyDescriptions @ :
nsobject_t 			glkviewcontroller_fallback_debugHierarchyPropertyDescriptions( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyValueForPropertyWithName:onObject:outOptions:outError: @ : @ @ ^@ ^@
nsobject_t 			glkviewcontroller_fallback_debugHierarchyValueForPropertyWithName( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v initialize @ :
void 				glkviewcontroller_initialize( );

// Signature from Objective-C Runtime: @ XPCInterface @ :
nsobject_t 			glkviewcontroller_XPCInterface( );

// Signature from Objective-C Runtime: @ viewControllerForView: @ : @
nsobject_t 			glkviewcontroller_viewControllerForView( nsobject_t arg0 );

// Signature from Objective-C Runtime: B doesOverrideViewControllerMethod:inBaseClass: @ : : #
bool 				glkviewcontroller_doesOverrideViewControllerMethod( nsselector_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: B doesOverridePreferredInterfaceOrientationForPresentation @ :
bool 				glkviewcontroller_doesOverridePreferredInterfaceOrientationForPresentation( );

// Signature from Objective-C Runtime: {CGSize=dd} defaultFormSheetSize @ :
CGSize 				glkviewcontroller_defaultFormSheetSize( );

// Signature from Objective-C Runtime: v setViewController:forView: @ : @ @
void 				glkviewcontroller_setViewController( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeViewControllerForView: @ : @
void 				glkviewcontroller_removeViewControllerForView( nsobject_t arg0 );

// Signature from Objective-C Runtime: v attemptRotationToDeviceOrientation @ :
void 				glkviewcontroller_attemptRotationToDeviceOrientation( );

// Signature from Objective-C Runtime: @ objectWithRestorationIdentifierPath: @ : @
nsobject_t 			glkviewcontroller_objectWithRestorationIdentifierPath( nsobject_t arg0 );

// Signature from Objective-C Runtime: v clearTextInputContextIdentifier: @ : @
void 				glkviewcontroller_clearTextInputContextIdentifier( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				glkviewcontroller_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			glkviewcontroller_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				glkviewcontroller_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				glkviewcontroller_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				glkviewcontroller_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* glkviewcontroller_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				glkviewcontroller_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			glkviewcontroller_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				glkviewcontroller_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			glkviewcontroller_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			glkviewcontroller_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				glkviewcontroller_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			glkviewcontroller_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				glkviewcontroller_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				glkviewcontroller_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			glkviewcontroller_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			glkviewcontroller_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				glkviewcontroller_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				glkviewcontroller_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			glkviewcontroller_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			glkviewcontroller_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			glkviewcontroller_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			glkviewcontroller_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			glkviewcontroller_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			glkviewcontroller_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSQLiteClassName @ :
nsobject_t 			glkviewcontroller_CKSQLiteClassName( );

// Signature from Objective-C Runtime: B brc_swizzleInstanceMethod:with: @ : : :
bool 				glkviewcontroller_brc_swizzleInstanceMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: B brc_swizzleClassMethod:with: @ : : :
bool 				glkviewcontroller_brc_swizzleClassMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: @ fromPBCodable: @ : @
nsobject_t 			glkviewcontroller_fromPBCodable( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			glkviewcontroller_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			glkviewcontroller_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			glkviewcontroller_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				glkviewcontroller_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				glkviewcontroller_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
glkviewcontroller_t glkviewcontroller_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			glkviewcontroller_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				glkviewcontroller_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				glkviewcontroller_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				glkviewcontroller_instancesRespondToSelector( nsselector_t arg0 );

#endif