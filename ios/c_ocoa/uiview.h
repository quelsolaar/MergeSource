/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_UIVIEW_HEADER
#define SHIMMER_C_OCOA_UIVIEW_HEADER

typedef void*	uiview_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ mk_theme @ :
nsobject_t 			uiview_mk_theme( uiview_t object );

// Signature from Objective-C Runtime: v infoCardThemeChanged @ :
void 				uiview_infoCardThemeChanged( uiview_t object );

// Signature from Objective-C Runtime: @ tintColorOverride @ :
nsobject_t 			uiview_tintColorOverride( uiview_t object );

// Signature from Objective-C Runtime: v abSetLayoutDebuggingColor: @ : @
void 				uiview_abSetLayoutDebuggingColor( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ tintColorOverrideDarkened @ :
nsobject_t 			uiview_tintColorOverrideDarkened( uiview_t object );

// Signature from Objective-C Runtime: v setLayoutSize:withContentPriority: @ : {CGSize=dd} f
void 				uiview_setLayoutSize( uiview_t object, CGSize arg0, float arg1 );

// Signature from Objective-C Runtime: v setMinimumLayoutSize: @ : {CGSize=dd}
void 				uiview_setMinimumLayoutSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v setMaximumLayoutSize: @ : {CGSize=dd}
void 				uiview_setMaximumLayoutSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} effectiveLayoutSizeFittingSize: @ : {CGSize=dd}
CGSize 				uiview_effectiveLayoutSizeFittingSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} minimumLayoutSize @ :
CGSize 				uiview_minimumLayoutSize( uiview_t object );

// Signature from Objective-C Runtime: v setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview: @ : B
void 				uiview_setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B isLayoutSizeDependentOnPerpendicularAxis @ :
bool 				uiview_isLayoutSizeDependentOnPerpendicularAxis( uiview_t object );

// Signature from Objective-C Runtime: d effectiveBaselineOffsetFromBottom @ :
double 				uiview_effectiveBaselineOffsetFromBottom( uiview_t object );

// Signature from Objective-C Runtime: d effectiveFirstBaselineOffsetFromTop @ :
double 				uiview_effectiveFirstBaselineOffsetFromTop( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} calculateLayoutSizeFittingSize: @ : {CGSize=dd}
CGSize 				uiview_calculateLayoutSizeFittingSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v setNeverCacheEffectiveLayoutSize: @ : B
void 				uiview_setNeverCacheEffectiveLayoutSize( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B neverCacheEffectiveLayoutSize @ :
bool 				uiview_neverCacheEffectiveLayoutSize( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} maximumLayoutSize @ :
CGSize 				uiview_maximumLayoutSize( uiview_t object );

// Signature from Objective-C Runtime: v setCustomAlignmentRectInsets: @ : {UIEdgeInsets=dddd}
void 				uiview_setCustomAlignmentRectInsets( uiview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} customAlignmentRectInsets @ :
UIEdgeInsets 		uiview_customAlignmentRectInsets( uiview_t object );

// Signature from Objective-C Runtime: v setCustomBaselineOffsetFromBottom: @ : d
void 				uiview_setCustomBaselineOffsetFromBottom( uiview_t object, double arg0 );

// Signature from Objective-C Runtime: d customBaselineOffsetFromBottom @ :
double 				uiview_customBaselineOffsetFromBottom( uiview_t object );

// Signature from Objective-C Runtime: v setCustomFirstBaselineOffsetFromTop: @ : d
void 				uiview_setCustomFirstBaselineOffsetFromTop( uiview_t object, double arg0 );

// Signature from Objective-C Runtime: d customFirstBaselineOffsetFromTop @ :
double 				uiview_customFirstBaselineOffsetFromTop( uiview_t object );

// Signature from Objective-C Runtime: B invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview @ :
bool 				uiview_invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview( uiview_t object );

// Signature from Objective-C Runtime: v setUntransformedFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_setUntransformedFrame( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v nukeContentLayoutSizeCacheFromOrbit @ :
void 				uiview_nukeContentLayoutSizeCacheFromOrbit( uiview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} effectiveAlignmentRectInsets @ :
UIEdgeInsets 		uiview_effectiveAlignmentRectInsets( uiview_t object );

// Signature from Objective-C Runtime: v setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached @ :
void 				uiview_setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached( uiview_t object );

// Signature from Objective-C Runtime: d effectiveScreenScale @ :
double 				uiview_effectiveScreenScale( uiview_t object );

// Signature from Objective-C Runtime: d effectiveBaselineOffsetFromContentBottom @ :
double 				uiview_effectiveBaselineOffsetFromContentBottom( uiview_t object );

// Signature from Objective-C Runtime: d effectiveFirstBaselineOffsetFromContentTop @ :
double 				uiview_effectiveFirstBaselineOffsetFromContentTop( uiview_t object );

// Signature from Objective-C Runtime: d systemSpacingToAdjecentSiblingView:axis:baselineRelative:multiplier: @ : @ q B d
double 				uiview_systemSpacingToAdjecentSiblingView( uiview_t object, nsobject_t arg0, long long arg1, bool arg2, double arg3 );

// Signature from Objective-C Runtime: d systemSpacingToSuperView:edge:baselineRelative:multiplier: @ : @ Q B d
double 				uiview_systemSpacingToSuperView( uiview_t object, nsobject_t arg0, unsigned long long arg1, bool arg2, double arg3 );

// Signature from Objective-C Runtime: @ debugSizeCache @ :
nsobject_t 			uiview_debugSizeCache( uiview_t object );

// Signature from Objective-C Runtime: B canUseFastLayoutSizeCalulation @ :
bool 				uiview_canUseFastLayoutSizeCalulation( uiview_t object );

// Signature from Objective-C Runtime: @ contentLayoutSizeCacheDescription @ :
nsobject_t 			uiview_contentLayoutSizeCacheDescription( uiview_t object );

// Signature from Objective-C Runtime: @ debugSizeCacheDict @ :
nsobject_t 			uiview_debugSizeCacheDict( uiview_t object );

// Signature from Objective-C Runtime: @ ob_pinToEdgesConstraints: @ : @
nsobject_t 			uiview_ob_pinToEdgesConstraints( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v ob_pinToEdges: @ : @
void 				uiview_ob_pinToEdges( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v tlk_updateForAppearance: @ : @
void 				uiview_tlk_updateForAppearance( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v tlk_updateWithCurrentAppearance @ :
void 				uiview_tlk_updateWithCurrentAppearance( uiview_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	uiview_retainCount( uiview_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				uiview_dealloc( uiview_t object );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			uiview_retain( uiview_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			uiview_autorelease( uiview_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			uiview_description( uiview_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			uiview_init( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} size @ :
CGSize 				uiview_size( uiview_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				uiview_encodeWithCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			uiview_initWithCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isHidden @ :
bool 				uiview_isHidden( uiview_t object );

// Signature from Objective-C Runtime: v setHidden: @ : B
void 				uiview_setHidden( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				uiview_setValue( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setEnabled: @ : B
void 				uiview_setEnabled( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: {CGAffineTransform=dddddd} transform @ :
CGAffineTransform 	uiview_transform( uiview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} position @ :
CGPoint 			uiview_position( uiview_t object );

// Signature from Objective-C Runtime: v setPosition: @ : {CGPoint=dd}
void 				uiview_setPosition( uiview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: B isEnabled @ :
bool 				uiview_isEnabled( uiview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} extent @ :
CGRect 				uiview_extent( uiview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} bounds @ :
CGRect 				uiview_bounds( uiview_t object );

// Signature from Objective-C Runtime: d alpha @ :
double 				uiview_alpha( uiview_t object );

// Signature from Objective-C Runtime: B isOpaque @ :
bool 				uiview_isOpaque( uiview_t object );

// Signature from Objective-C Runtime: v setBounds: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_setBounds( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} origin @ :
CGPoint 			uiview_origin( uiview_t object );

// Signature from Objective-C Runtime: v setSize: @ : {CGSize=dd}
void 				uiview_setSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} frame @ :
CGRect 				uiview_frame( uiview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} center @ :
CGPoint 			uiview_center( uiview_t object );

// Signature from Objective-C Runtime: v setCenter: @ : {CGPoint=dd}
void 				uiview_setCenter( uiview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setTransform: @ : {CGAffineTransform=dddddd}
void 				uiview_setTransform( uiview_t object, CGAffineTransform arg0 );

// Signature from Objective-C Runtime: @ interactions @ :
nsobject_t 			uiview_interactions( uiview_t object );

// Signature from Objective-C Runtime: v setInteractions: @ : @
void 				uiview_setInteractions( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q contentMode @ :
long long 			uiview_contentMode( uiview_t object );

// Signature from Objective-C Runtime: @ snapshot @ :
nsobject_t 			uiview_snapshot( uiview_t object );

// Signature from Objective-C Runtime: @ constraints @ :
nsobject_t 			uiview_constraints( uiview_t object );

// Signature from Objective-C Runtime: q tag @ :
long long 			uiview_tag( uiview_t object );

// Signature from Objective-C Runtime: v setOpaque: @ : B
void 				uiview_setOpaque( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setNeedsLayout @ :
void 				uiview_setNeedsLayout( uiview_t object );

// Signature from Objective-C Runtime: @ superview @ :
nsobject_t 			uiview_superview( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} convertSize:toView: @ : {CGSize=dd} @
CGSize 				uiview_convertSize( uiview_t object, CGSize arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setFrameOrigin: @ : {CGPoint=dd}
void 				uiview_setFrameOrigin( uiview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRect:fromView: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
CGRect 				uiview_convertRect( uiview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d contentScaleFactor @ :
double 				uiview_contentScaleFactor( uiview_t object );

// Signature from Objective-C Runtime: @ initWithSize: @ : {CGSize=dd}
nsobject_t 			uiview_initWithSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B needsDisplay @ :
bool 				uiview_needsDisplay( uiview_t object );

// Signature from Objective-C Runtime: @ backgroundColor @ :
nsobject_t 			uiview_backgroundColor( uiview_t object );

// Signature from Objective-C Runtime: v setBackgroundColor: @ : @
void 				uiview_setBackgroundColor( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplayInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_setNeedsDisplayInRect( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v removeFromSuperview @ :
void 				uiview_removeFromSuperview( uiview_t object );

// Signature from Objective-C Runtime: v setFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_setFrame( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v addSubview: @ : @
void 				uiview_addSubview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} intrinsicContentSize @ :
CGSize 				uiview_intrinsicContentSize( uiview_t object );

// Signature from Objective-C Runtime: @ initWithFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			uiview_initWithFrame( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v addInteraction: @ : @
void 				uiview_addInteraction( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v layoutSubviews @ :
void 				uiview_layoutSubviews( uiview_t object );

// Signature from Objective-C Runtime: @ traitCollection @ :
nsobject_t 			uiview_traitCollection( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} sizeThatFits: @ : {CGSize=dd}
CGSize 				uiview_sizeThatFits( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} safeAreaInsets @ :
UIEdgeInsets 		uiview_safeAreaInsets( uiview_t object );

// Signature from Objective-C Runtime: v setTranslatesAutoresizingMaskIntoConstraints: @ : B
void 				uiview_setTranslatesAutoresizingMaskIntoConstraints( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ layer @ :
nsobject_t 			uiview_layer( uiview_t object );

// Signature from Objective-C Runtime: @ centerXAnchor @ :
nsobject_t 			uiview_centerXAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ widthAnchor @ :
nsobject_t 			uiview_widthAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ heightAnchor @ :
nsobject_t 			uiview_heightAnchor( uiview_t object );

// Signature from Objective-C Runtime: v setContentHuggingPriority:forAxis: @ : f q
void 				uiview_setContentHuggingPriority( uiview_t object, float arg0, long long arg1 );

// Signature from Objective-C Runtime: v setContentCompressionResistancePriority:forAxis: @ : f q
void 				uiview_setContentCompressionResistancePriority( uiview_t object, float arg0, long long arg1 );

// Signature from Objective-C Runtime: v addLayoutGuide: @ : @
void 				uiview_addLayoutGuide( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ topAnchor @ :
nsobject_t 			uiview_topAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ bottomAnchor @ :
nsobject_t 			uiview_bottomAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ leadingAnchor @ :
nsobject_t 			uiview_leadingAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ trailingAnchor @ :
nsobject_t 			uiview_trailingAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ centerYAnchor @ :
nsobject_t 			uiview_centerYAnchor( uiview_t object );

// Signature from Objective-C Runtime: v layoutIfNeeded @ :
void 				uiview_layoutIfNeeded( uiview_t object );

// Signature from Objective-C Runtime: v traitCollectionDidChange: @ : @
void 				uiview_traitCollectionDidChange( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isHiddenOrHasHiddenAncestor @ :
bool 				uiview_isHiddenOrHasHiddenAncestor( uiview_t object );

// Signature from Objective-C Runtime: @ window @ :
nsobject_t 			uiview_window( uiview_t object );

// Signature from Objective-C Runtime: B isAccessibilityElementByDefault @ :
bool 				uiview_isAccessibilityElementByDefault( uiview_t object );

// Signature from Objective-C Runtime: B isElementAccessibilityExposedToInterfaceBuilder @ :
bool 				uiview_isElementAccessibilityExposedToInterfaceBuilder( uiview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPoint:toView: @ : {CGPoint=dd} @
CGPoint 			uiview_convertPoint( uiview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAccessibilityIgnoresInvertColors: @ : B
void 				uiview_setAccessibilityIgnoresInvertColors( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B accessibilityIgnoresInvertColors @ :
bool 				uiview_accessibilityIgnoresInvertColors( uiview_t object );

// Signature from Objective-C Runtime: v accessibilityUnapplyInvertFilter @ :
void 				uiview_accessibilityUnapplyInvertFilter( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityInvertFilterApplied @ :
bool 				uiview_accessibilityInvertFilterApplied( uiview_t object );

// Signature from Objective-C Runtime: v accessibilityApplyInvertFilter @ :
void 				uiview_accessibilityApplyInvertFilter( uiview_t object );

// Signature from Objective-C Runtime: @ gestureRecognizers @ :
nsobject_t 			uiview_gestureRecognizers( uiview_t object );

// Signature from Objective-C Runtime: v updateFocusIfNeeded @ :
void 				uiview_updateFocusIfNeeded( uiview_t object );

// Signature from Objective-C Runtime: @ coordinateSpace @ :
nsobject_t 			uiview_coordinateSpace( uiview_t object );

// Signature from Objective-C Runtime: v setNeedsFocusUpdate @ :
void 				uiview_setNeedsFocusUpdate( uiview_t object );

// Signature from Objective-C Runtime: B shouldUpdateFocusInContext: @ : @
bool 				uiview_shouldUpdateFocusInContext( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didUpdateFocusInContext:withAnimationCoordinator: @ : @ @
void 				uiview_didUpdateFocusInContext( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ preferredFocusEnvironments @ :
nsobject_t 			uiview_preferredFocusEnvironments( uiview_t object );

// Signature from Objective-C Runtime: @ parentFocusEnvironment @ :
nsobject_t 			uiview_parentFocusEnvironment( uiview_t object );

// Signature from Objective-C Runtime: @ focusItemContainer @ :
nsobject_t 			uiview_focusItemContainer( uiview_t object );

// Signature from Objective-C Runtime: @ preferredFocusedView @ :
nsobject_t 			uiview_preferredFocusedView( uiview_t object );

// Signature from Objective-C Runtime: @ focusGroupIdentifier @ :
nsobject_t 			uiview_focusGroupIdentifier( uiview_t object );

// Signature from Objective-C Runtime: B areChildrenFocused @ :
bool 				uiview_areChildrenFocused( uiview_t object );

// Signature from Objective-C Runtime: v setAreChildrenFocused: @ : B
void 				uiview_setAreChildrenFocused( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B canBecomeFocused @ :
bool 				uiview_canBecomeFocused( uiview_t object );

// Signature from Objective-C Runtime: @ focusEffect @ :
nsobject_t 			uiview_focusEffect( uiview_t object );

// Signature from Objective-C Runtime: q focusGroupPriority @ :
long long 			uiview_focusGroupPriority( uiview_t object );

// Signature from Objective-C Runtime: B isTransparentFocusItem @ :
bool 				uiview_isTransparentFocusItem( uiview_t object );

// Signature from Objective-C Runtime: @ focusItemsInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			uiview_focusItemsInRect( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ nextResponder @ :
nsobject_t 			uiview_nextResponder( uiview_t object );

// Signature from Objective-C Runtime: v addGestureRecognizer: @ : @
void 				uiview_addGestureRecognizer( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeGestureRecognizer: @ : @
void 				uiview_removeGestureRecognizer( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B gestureRecognizerShouldBegin: @ : @
bool 				uiview_gestureRecognizerShouldBegin( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAutoresizingMask: @ : Q
void 				uiview_setAutoresizingMask( uiview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setUserInteractionEnabled: @ : B
void 				uiview_setUserInteractionEnabled( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ largeContentTitle @ :
nsobject_t 			uiview_largeContentTitle( uiview_t object );

// Signature from Objective-C Runtime: @ largeContentImage @ :
nsobject_t 			uiview_largeContentImage( uiview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} largeContentImageInsets @ :
UIEdgeInsets 		uiview_largeContentImageInsets( uiview_t object );

// Signature from Objective-C Runtime: B scalesLargeContentImage @ :
bool 				uiview_scalesLargeContentImage( uiview_t object );

// Signature from Objective-C Runtime: v setClipsToBounds: @ : B
void 				uiview_setClipsToBounds( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setContentMode: @ : q
void 				uiview_setContentMode( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAlpha: @ : d
void 				uiview_setAlpha( uiview_t object, double arg0 );

// Signature from Objective-C Runtime: v sizeToFit @ :
void 				uiview_sizeToFit( uiview_t object );

// Signature from Objective-C Runtime: B becomeFirstResponder @ :
bool 				uiview_becomeFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: v addConstraints: @ : @
void 				uiview_addConstraints( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ tintColor @ :
nsobject_t 			uiview_tintColor( uiview_t object );

// Signature from Objective-C Runtime: v setTintColor: @ : @
void 				uiview_setTintColor( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isFocused @ :
bool 				uiview_isFocused( uiview_t object );

// Signature from Objective-C Runtime: v setLayoutMargins: @ : {UIEdgeInsets=dddd}
void 				uiview_setLayoutMargins( uiview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: q tintAdjustmentMode @ :
long long 			uiview_tintAdjustmentMode( uiview_t object );

// Signature from Objective-C Runtime: v setTintAdjustmentMode: @ : q
void 				uiview_setTintAdjustmentMode( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ motionEffects @ :
nsobject_t 			uiview_motionEffects( uiview_t object );

// Signature from Objective-C Runtime: v addMotionEffect: @ : @
void 				uiview_addMotionEffect( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeMotionEffect: @ : @
void 				uiview_removeMotionEffect( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setMotionEffects: @ : @
void 				uiview_setMotionEffects( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ rightAnchor @ :
nsobject_t 			uiview_rightAnchor( uiview_t object );

// Signature from Objective-C Runtime: v setSemanticContentAttribute: @ : q
void 				uiview_setSemanticContentAttribute( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} alignmentRectInsets @ :
UIEdgeInsets 		uiview_alignmentRectInsets( uiview_t object );

// Signature from Objective-C Runtime: v setNeedsUpdateConstraints @ :
void 				uiview_setNeedsUpdateConstraints( uiview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} layoutMargins @ :
UIEdgeInsets 		uiview_layoutMargins( uiview_t object );

// Signature from Objective-C Runtime: v updateConstraintsIfNeeded @ :
void 				uiview_updateConstraintsIfNeeded( uiview_t object );

// Signature from Objective-C Runtime: @ subviews @ :
nsobject_t 			uiview_subviews( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} systemLayoutSizeFittingSize: @ : {CGSize=dd}
CGSize 				uiview_systemLayoutSizeFittingSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v updateConstraints @ :
void 				uiview_updateConstraints( uiview_t object );

// Signature from Objective-C Runtime: v sendSubviewToBack: @ : @
void 				uiview_sendSubviewToBack( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B pointInside:withEvent: @ : {CGPoint=dd} @
bool 				uiview_pointInside( uiview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v invalidateIntrinsicContentSize @ :
void 				uiview_invalidateIntrinsicContentSize( uiview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds @ :
CGRect 				uiview_visibleBounds( uiview_t object );

// Signature from Objective-C Runtime: B isDescendantOfView: @ : @
bool 				uiview_isDescendantOfView( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v tintColorDidChange @ :
void 				uiview_tintColorDidChange( uiview_t object );

// Signature from Objective-C Runtime: @ viewForFirstBaselineLayout @ :
nsobject_t 			uiview_viewForFirstBaselineLayout( uiview_t object );

// Signature from Objective-C Runtime: @ viewForLastBaselineLayout @ :
nsobject_t 			uiview_viewForLastBaselineLayout( uiview_t object );

// Signature from Objective-C Runtime: v setFocusEffect: @ : @
void 				uiview_setFocusEffect( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v layoutMarginsDidChange @ :
void 				uiview_layoutMarginsDidChange( uiview_t object );

// Signature from Objective-C Runtime: v removeInteraction: @ : @
void 				uiview_removeInteraction( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B preservesSuperviewLayoutMargins @ :
bool 				uiview_preservesSuperviewLayoutMargins( uiview_t object );

// Signature from Objective-C Runtime: v setPreservesSuperviewLayoutMargins: @ : B
void 				uiview_setPreservesSuperviewLayoutMargins( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v layoutBelowIfNeeded @ :
void 				uiview_layoutBelowIfNeeded( uiview_t object );

// Signature from Objective-C Runtime: v insertSubview:atIndex: @ : @ q
void 				uiview_insertSubview( uiview_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ layoutMarginsGuide @ :
nsobject_t 			uiview_layoutMarginsGuide( uiview_t object );

// Signature from Objective-C Runtime: @ lastBaselineAnchor @ :
nsobject_t 			uiview_lastBaselineAnchor( uiview_t object );

// Signature from Objective-C Runtime: v setEdgesInsettingLayoutMarginsFromSafeArea: @ : Q
void 				uiview_setEdgesInsettingLayoutMarginsFromSafeArea( uiview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v layoutSublayersOfLayer: @ : @
void 				uiview_layoutSublayersOfLayer( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDirectionalLayoutMargins: @ : {NSDirectionalEdgeInsets=dddd}
void 				uiview_setDirectionalLayoutMargins( uiview_t object, NSDirectionalEdgeInsets arg0 );

// Signature from Objective-C Runtime: v addConstraint: @ : @
void 				uiview_addConstraint( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAllowsGroupOpacity: @ : B
void 				uiview_setAllowsGroupOpacity( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B translatesAutoresizingMaskIntoConstraints @ :
bool 				uiview_translatesAutoresizingMaskIntoConstraints( uiview_t object );

// Signature from Objective-C Runtime: Q autoresizingMask @ :
unsigned long long 	uiview_autoresizingMask( uiview_t object );

// Signature from Objective-C Runtime: B containsView: @ : @
bool 				uiview_containsView( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyboardSceneDelegate @ :
nsobject_t 			uiview_keyboardSceneDelegate( uiview_t object );

// Signature from Objective-C Runtime: @ hitTest:withEvent: @ : {CGPoint=dd} @
nsobject_t 			uiview_hitTest( uiview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ leftAnchor @ :
nsobject_t 			uiview_leftAnchor( uiview_t object );

// Signature from Objective-C Runtime: @ safeAreaLayoutGuide @ :
nsobject_t 			uiview_safeAreaLayoutGuide( uiview_t object );

// Signature from Objective-C Runtime: v setExclusiveTouch: @ : B
void 				uiview_setExclusiveTouch( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v removeConstraint: @ : @
void 				uiview_removeConstraint( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ firstBaselineAnchor @ :
nsobject_t 			uiview_firstBaselineAnchor( uiview_t object );

// Signature from Objective-C Runtime: v removeConstraints: @ : @
void 				uiview_removeConstraints( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B allowsGroupOpacity @ :
bool 				uiview_allowsGroupOpacity( uiview_t object );

// Signature from Objective-C Runtime: v safeAreaInsetsDidChange @ :
void 				uiview_safeAreaInsetsDidChange( uiview_t object );

// Signature from Objective-C Runtime: v didMoveToSuperview @ :
void 				uiview_didMoveToSuperview( uiview_t object );

// Signature from Objective-C Runtime: v didMoveToWindow @ :
void 				uiview_didMoveToWindow( uiview_t object );

// Signature from Objective-C Runtime: B isUserInteractionEnabled @ :
bool 				uiview_isUserInteractionEnabled( uiview_t object );

// Signature from Objective-C Runtime: v addAnimation:forKey: @ : @ @
void 				uiview_addAnimation( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setContentScaleFactor: @ : d
void 				uiview_setContentScaleFactor( uiview_t object, double arg0 );

// Signature from Objective-C Runtime: v drawLayer:inContext: @ : @ ^{CGContext=}
void 				uiview_drawLayer( uiview_t object, nsobject_t arg0, CGContext* arg1 );

// Signature from Objective-C Runtime: v layerWillDraw: @ : @
void 				uiview_layerWillDraw( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ actionForLayer:forKey: @ : @ @
nsobject_t 			uiview_actionForLayer( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAllowsGroupBlending: @ : B
void 				uiview_setAllowsGroupBlending( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplay @ :
void 				uiview_setNeedsDisplay( uiview_t object );

// Signature from Objective-C Runtime: v exchangeSubviewAtIndex:withSubviewAtIndex: @ : q q
void 				uiview_exchangeSubviewAtIndex( uiview_t object, long long arg0, long long arg1 );

// Signature from Objective-C Runtime: v bringSubviewToFront: @ : @
void 				uiview_bringSubviewToFront( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ textInputView @ :
nsobject_t 			uiview_textInputView( uiview_t object );

// Signature from Objective-C Runtime: {NSDirectionalEdgeInsets=dddd} directionalLayoutMargins @ :
NSDirectionalEdgeInsets uiview_directionalLayoutMargins( uiview_t object );

// Signature from Objective-C Runtime: v setEdgesPreservingSuperviewLayoutMargins: @ : Q
void 				uiview_setEdgesPreservingSuperviewLayoutMargins( uiview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} alignmentRectForFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				uiview_alignmentRectForFrame( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v drawRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_drawRect( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: B allowsGroupBlending @ :
bool 				uiview_allowsGroupBlending( uiview_t object );

// Signature from Objective-C Runtime: v didAddSubview: @ : @
void 				uiview_didAddSubview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willRemoveSubview: @ : @
void 				uiview_willRemoveSubview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B drawViewHierarchyInRect:afterScreenUpdates: @ : {CGRect={CGPoint=dd}{CGSize=dd}} B
bool 				uiview_drawViewHierarchyInRect( uiview_t object, CGRect arg0, bool arg1 );

// Signature from Objective-C Runtime: B clipsToBounds @ :
bool 				uiview_clipsToBounds( uiview_t object );

// Signature from Objective-C Runtime: @ minimumContentSizeCategory @ :
nsobject_t 			uiview_minimumContentSizeCategory( uiview_t object );

// Signature from Objective-C Runtime: v setMinimumContentSizeCategory: @ : @
void 				uiview_setMinimumContentSizeCategory( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ maximumContentSizeCategory @ :
nsobject_t 			uiview_maximumContentSizeCategory( uiview_t object );

// Signature from Objective-C Runtime: v setMaximumContentSizeCategory: @ : @
void 				uiview_setMaximumContentSizeCategory( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ appliedContentSizeCategoryLimitsDescription @ :
nsobject_t 			uiview_appliedContentSizeCategoryLimitsDescription( uiview_t object );

// Signature from Objective-C Runtime: {UIEdgeInsets=dddd} hitTestInsets @ :
UIEdgeInsets 		uiview_hitTestInsets( uiview_t object );

// Signature from Objective-C Runtime: v setHitTestInsets: @ : {UIEdgeInsets=dddd}
void 				uiview_setHitTestInsets( uiview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: {NSDirectionalEdgeInsets=dddd} hitTestDirectionalInsets @ :
NSDirectionalEdgeInsets uiview_hitTestDirectionalInsets( uiview_t object );

// Signature from Objective-C Runtime: v setHitTestDirectionalInsets: @ : {NSDirectionalEdgeInsets=dddd}
void 				uiview_setHitTestDirectionalInsets( uiview_t object, NSDirectionalEdgeInsets arg0 );

// Signature from Objective-C Runtime: v removeLayoutGuide: @ : @
void 				uiview_removeLayoutGuide( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willMoveToSuperview: @ : @
void 				uiview_willMoveToSuperview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willMoveToWindow: @ : @
void 				uiview_willMoveToWindow( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setCompositingMode: @ : q
void 				uiview_setCompositingMode( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: q effectiveUserInterfaceLayoutDirection @ :
long long 			uiview_effectiveUserInterfaceLayoutDirection( uiview_t object );

// Signature from Objective-C Runtime: v setAutoresizesSubviews: @ : B
void 				uiview_setAutoresizesSubviews( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: f contentCompressionResistancePriorityForAxis: @ : q
float 				uiview_contentCompressionResistancePriorityForAxis( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} frameForAlignmentRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				uiview_frameForAlignmentRect( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setTag: @ : q
void 				uiview_setTag( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: q semanticContentAttribute @ :
long long 			uiview_semanticContentAttribute( uiview_t object );

// Signature from Objective-C Runtime: v setCharge: @ : f
void 				uiview_setCharge( uiview_t object, float arg0 );

// Signature from Objective-C Runtime: v setInsetsLayoutMarginsFromSafeArea: @ : B
void 				uiview_setInsetsLayoutMarginsFromSafeArea( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ snapshotViewAfterScreenUpdates: @ : B
nsobject_t 			uiview_snapshotViewAfterScreenUpdates( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: f contentHuggingPriorityForAxis: @ : q
float 				uiview_contentHuggingPriorityForAxis( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: B insetsLayoutMarginsFromSafeArea @ :
bool 				uiview_insetsLayoutMarginsFromSafeArea( uiview_t object );

// Signature from Objective-C Runtime: v setFocusGroupIdentifier: @ : @
void 				uiview_setFocusGroupIdentifier( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setLargeContentTitle: @ : @
void 				uiview_setLargeContentTitle( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShowsLargeContentViewer: @ : B
void 				uiview_setShowsLargeContentViewer( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ recursiveDescription @ :
nsobject_t 			uiview_recursiveDescription( uiview_t object );

// Signature from Objective-C Runtime: v setMultipleTouchEnabled: @ : B
void 				uiview_setMultipleTouchEnabled( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v forceDisplayIfNeeded @ :
void 				uiview_forceDisplayIfNeeded( uiview_t object );

// Signature from Objective-C Runtime: {CATransform3D=dddddddddddddddd} transform3D @ :
CATransform3D 		uiview_transform3D( uiview_t object );

// Signature from Objective-C Runtime: v setTransform3D: @ : {CATransform3D=dddddddddddddddd}
void 				uiview_setTransform3D( uiview_t object, CATransform3D arg0 );

// Signature from Objective-C Runtime: @ readableContentGuide @ :
nsobject_t 			uiview_readableContentGuide( uiview_t object );

// Signature from Objective-C Runtime: v setSafeAreaInsets: @ : {UIEdgeInsets=dddd}
void 				uiview_setSafeAreaInsets( uiview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: Q edgesInsettingLayoutMarginsFromSafeArea @ :
unsigned long long 	uiview_edgesInsettingLayoutMarginsFromSafeArea( uiview_t object );

// Signature from Objective-C Runtime: B layoutMarginsFollowReadableWidth @ :
bool 				uiview_layoutMarginsFollowReadableWidth( uiview_t object );

// Signature from Objective-C Runtime: v setLayoutMarginsFollowReadableWidth: @ : B
void 				uiview_setLayoutMarginsFollowReadableWidth( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B needsUpdateConstraints @ :
bool 				uiview_needsUpdateConstraints( uiview_t object );

// Signature from Objective-C Runtime: @ viewWithTag: @ : q
nsobject_t 			uiview_viewWithTag( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: B endEditing: @ : B
bool 				uiview_endEditing( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setOrigin: @ : {CGPoint=dd}
void 				uiview_setOrigin( uiview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setMaskView: @ : @
void 				uiview_setMaskView( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDeliversTouchesForGesturesToSuperview: @ : B
void 				uiview_setDeliversTouchesForGesturesToSuperview( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B autoresizesSubviews @ :
bool 				uiview_autoresizesSubviews( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_superitem @ :
nsobject_t 			uiview_nsli_superitem( uiview_t object );

// Signature from Objective-C Runtime: q overrideUserInterfaceStyle @ :
long long 			uiview_overrideUserInterfaceStyle( uiview_t object );

// Signature from Objective-C Runtime: v setOverrideUserInterfaceStyle: @ : q
void 				uiview_setOverrideUserInterfaceStyle( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ layoutGuides @ :
nsobject_t 			uiview_layoutGuides( uiview_t object );

// Signature from Objective-C Runtime: @ resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets: @ : {CGRect={CGPoint=dd}{CGSize=dd}} B {UIEdgeInsets=dddd}
nsobject_t 			uiview_resizableSnapshotViewFromRect( uiview_t object, CGRect arg0, bool arg1, UIEdgeInsets arg2 );

// Signature from Objective-C Runtime: v updateUserActivityState: @ : @
void 				uiview_updateUserActivityState( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreUserActivityState: @ : @
void 				uiview_restoreUserActivityState( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplayOnBoundsChange: @ : B
void 				uiview_setNeedsDisplayOnBoundsChange( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B needsDisplayOnBoundsChange @ :
bool 				uiview_needsDisplayOnBoundsChange( uiview_t object );

// Signature from Objective-C Runtime: @ snapshotView @ :
nsobject_t 			uiview_snapshotView( uiview_t object );

// Signature from Objective-C Runtime: B clearsContextBeforeDrawing @ :
bool 				uiview_clearsContextBeforeDrawing( uiview_t object );

// Signature from Objective-C Runtime: B cancelTouchTracking @ :
bool 				uiview_cancelTouchTracking( uiview_t object );

// Signature from Objective-C Runtime: B cancelMouseTracking @ :
bool 				uiview_cancelMouseTracking( uiview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} hitRect @ :
CGRect 				uiview_hitRect( uiview_t object );

// Signature from Objective-C Runtime: v setClipsSubviews: @ : B
void 				uiview_setClipsSubviews( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: B useBlockyMagnificationInClassic @ :
bool 				uiview_useBlockyMagnificationInClassic( uiview_t object );

// Signature from Objective-C Runtime: f charge @ :
float 				uiview_charge( uiview_t object );

// Signature from Objective-C Runtime: @ inputResponderController @ :
nsobject_t 			uiview_inputResponderController( uiview_t object );

// Signature from Objective-C Runtime: B showsLargeContentViewer @ :
bool 				uiview_showsLargeContentViewer( uiview_t object );

// Signature from Objective-C Runtime: v setLargeContentImage: @ : @
void 				uiview_setLargeContentImage( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setScalesLargeContentImage: @ : B
void 				uiview_setScalesLargeContentImage( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setLargeContentImageInsets: @ : {UIEdgeInsets=dddd}
void 				uiview_setLargeContentImageInsets( uiview_t object, UIEdgeInsets arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} frameOrigin @ :
CGPoint 			uiview_frameOrigin( uiview_t object );

// Signature from Objective-C Runtime: i textEffectsVisibilityLevel @ :
int 				uiview_textEffectsVisibilityLevel( uiview_t object );

// Signature from Objective-C Runtime: @ gestureParent @ :
nsobject_t 			uiview_gestureParent( uiview_t object );

// Signature from Objective-C Runtime: @ maskView @ :
nsobject_t 			uiview_maskView( uiview_t object );

// Signature from Objective-C Runtime: @ focusGuides @ :
nsobject_t 			uiview_focusGuides( uiview_t object );

// Signature from Objective-C Runtime: v reduceWidth: @ : d
void 				uiview_reduceWidth( uiview_t object, double arg0 );

// Signature from Objective-C Runtime: i textEffectsVisibilityLevelInKeyboardWindow @ :
int 				uiview_textEffectsVisibilityLevelInKeyboardWindow( uiview_t object );

// Signature from Objective-C Runtime: v recursivelyForceDisplayIfNeeded @ :
void 				uiview_recursivelyForceDisplayIfNeeded( uiview_t object );

// Signature from Objective-C Runtime: v constraintsDidChangeInEngine: @ : @
void 				uiview_constraintsDidChangeInEngine( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v resizeSubviewsWithOldSize: @ : {CGSize=dd}
void 				uiview_resizeSubviewsWithOldSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: @ viewPrintFormatter @ :
nsobject_t 			uiview_viewPrintFormatter( uiview_t object );

// Signature from Objective-C Runtime: B deliversButtonsForGesturesToSuperview @ :
bool 				uiview_deliversButtonsForGesturesToSuperview( uiview_t object );

// Signature from Objective-C Runtime: v setGestureRecognizers: @ : @
void 				uiview_setGestureRecognizers( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B deliversTouchesForGesturesToSuperview @ :
bool 				uiview_deliversTouchesForGesturesToSuperview( uiview_t object );

// Signature from Objective-C Runtime: B isMultipleTouchEnabled @ :
bool 				uiview_isMultipleTouchEnabled( uiview_t object );

// Signature from Objective-C Runtime: v movedToSuperview: @ : @
void 				uiview_movedToSuperview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v set_ui_frame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_set_ui_frame( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v set_ui_usesManualLayout: @ : B
void 				uiview_set_ui_usesManualLayout( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: q compareTextEffectsOrdering: @ : @
long long 			uiview_compareTextEffectsOrdering( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v interactionTintColorDidChange @ :
void 				uiview_interactionTintColorDidChange( uiview_t object );

// Signature from Objective-C Runtime: @ viewForBaselineLayout @ :
nsobject_t 			uiview_viewForBaselineLayout( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_engineToUserScalingCoefficients @ :
CGSize 				uiview_nsli_engineToUserScalingCoefficients( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_minYVariable @ :
nsobject_t 			uiview_nsli_minYVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_boundsHeightVariable @ :
nsobject_t 			uiview_nsli_boundsHeightVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_boundsWidthVariable @ :
nsobject_t 			uiview_nsli_boundsWidthVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_minXVariable @ :
nsobject_t 			uiview_nsli_minXVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_contentHeightVariable @ :
nsobject_t 			uiview_nsli_contentHeightVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_contentWidthVariable @ :
nsobject_t 			uiview_nsli_contentWidthVariable( uiview_t object );

// Signature from Objective-C Runtime: v exerciseAmbiguityInLayout @ :
void 				uiview_exerciseAmbiguityInLayout( uiview_t object );

// Signature from Objective-C Runtime: B hasAmbiguousLayout @ :
bool 				uiview_hasAmbiguousLayout( uiview_t object );

// Signature from Objective-C Runtime: v nsli_addConstraint: @ : @
void 				uiview_nsli_addConstraint( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nsli_layoutMarginsItem @ :
nsobject_t 			uiview_nsli_layoutMarginsItem( uiview_t object );

// Signature from Objective-C Runtime: B nsli_removeConstraint: @ : @
bool 				uiview_nsli_removeConstraint( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ constraintsAffectingLayoutForAxis: @ : q
nsobject_t 			uiview_constraintsAffectingLayoutForAxis( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nsli_layoutEngine @ :
nsobject_t 			uiview_nsli_layoutEngine( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_installedConstraints @ :
nsobject_t 			uiview_nsli_installedConstraints( uiview_t object );

// Signature from Objective-C Runtime: d nsli_marginOffsetForAttribute: @ : q
double 				uiview_nsli_marginOffsetForAttribute( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nsli_description @ :
nsobject_t 			uiview_nsli_description( uiview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_engineToUserScalingCoefficientsInEngine: @ : @
CGSize 				uiview_nsli_engineToUserScalingCoefficientsInEngine( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsli_lowerAttribute:intoExpression:withCoefficient:forConstraint:onBehalfOfLayoutGuide: @ : i @ d @ @
bool 				uiview_nsli_lowerAttribute( uiview_t object, int arg0, nsobject_t arg1, double arg2, nsobject_t arg3, nsobject_t arg4 );

// Signature from Objective-C Runtime: @ nsli_contentXOffsetVariable @ :
nsobject_t 			uiview_nsli_contentXOffsetVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_contentYOffsetVariable @ :
nsobject_t 			uiview_nsli_contentYOffsetVariable( uiview_t object );

// Signature from Objective-C Runtime: B nsli_defaultResolvedValue:forSymbolicConstant:inConstraint:error: @ : ^d @ @ ^@
bool 				uiview_nsli_defaultResolvedValue( uiview_t object, double* arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v nsis_valueOfVariable:didChangeInEngine: @ : @ @
void 				uiview_nsis_valueOfVariable( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ nsis_descriptionOfVariable: @ : @
nsobject_t 			uiview_nsis_descriptionOfVariable( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i nsis_orientationHintForVariable: @ : @
int 				uiview_nsis_orientationHintForVariable( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsis_shouldIntegralizeVariable: @ : @
bool 				uiview_nsis_shouldIntegralizeVariable( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsis_valueOfVariableIsUserObservable: @ : @
bool 				uiview_nsis_valueOfVariableIsUserObservable( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_convertSizeToEngineSpace: @ : {CGSize=dd}
CGSize 				uiview_nsli_convertSizeToEngineSpace( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_convertSizeFromEngineSpace: @ : {CGSize=dd}
CGSize 				uiview_nsli_convertSizeFromEngineSpace( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B nsli_resolvedValue:forSymbolicConstant:inConstraint:error: @ : ^d @ @ ^@
bool 				uiview_nsli_resolvedValue( uiview_t object, double* arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: B nsli_descriptionIncludesPointer @ :
bool 				uiview_nsli_descriptionIncludesPointer( uiview_t object );

// Signature from Objective-C Runtime: Q nsli_autoresizingMask @ :
unsigned long long 	uiview_nsli_autoresizingMask( uiview_t object );

// Signature from Objective-C Runtime: B nsli_isFlipped @ :
bool 				uiview_nsli_isFlipped( uiview_t object );

// Signature from Objective-C Runtime: B nsli_isCollectingConstraintChangesForLaterCoordinatedFlush: @ : @
bool 				uiview_nsli_isCollectingConstraintChangesForLaterCoordinatedFlush( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B nsli_canHostIndependentVariableAnchor @ :
bool 				uiview_nsli_canHostIndependentVariableAnchor( uiview_t object );

// Signature from Objective-C Runtime: B nsli_isLegalConstraintItem @ :
bool 				uiview_nsli_isLegalConstraintItem( uiview_t object );

// Signature from Objective-C Runtime: B nsli_isRTL @ :
bool 				uiview_nsli_isRTL( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_layoutAnchorForAttribute: @ : q
nsobject_t 			uiview_nsli_layoutAnchorForAttribute( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ nsli_constraintWithAnchor:relatedBy:toAnchor:withSystemSpacingMultipliedBy: @ : @ q @ d
nsobject_t 			uiview_nsli_constraintWithAnchor( uiview_t object, nsobject_t arg0, long long arg1, nsobject_t arg2, double arg3 );

// Signature from Objective-C Runtime: @ nsli_widthVariable @ :
nsobject_t 			uiview_nsli_widthVariable( uiview_t object );

// Signature from Objective-C Runtime: @ nsli_heightVariable @ :
nsobject_t 			uiview_nsli_heightVariable( uiview_t object );

// Signature from Objective-C Runtime: v solutionDidChangeInEngine: @ : @
void 				uiview_solutionDidChangeInEngine( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ engine:markerForConstraintToBreakAmongConstraints: @ : @ @
nsobject_t 			uiview_engine( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v stopSettingPresentationValueForKey: @ : @
void 				uiview_stopSettingPresentationValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setContentsPosition: @ : i
void 				uiview_setContentsPosition( uiview_t object, int arg0 );

// Signature from Objective-C Runtime: v setContentStretch: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_setContentStretch( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: B wantsDeepColorDrawing @ :
bool 				uiview_wantsDeepColorDrawing( uiview_t object );

// Signature from Objective-C Runtime: v setWantsDeepColorDrawing: @ : B
void 				uiview_setWantsDeepColorDrawing( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setClearsContextBeforeDrawing: @ : B
void 				uiview_setClearsContextBeforeDrawing( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v removeAllGestureRecognizers @ :
void 				uiview_removeAllGestureRecognizers( uiview_t object );

// Signature from Objective-C Runtime: Q edgesPreservingSuperviewLayoutMargins @ :
unsigned long long 	uiview_edgesPreservingSuperviewLayoutMargins( uiview_t object );

// Signature from Objective-C Runtime: v setInteractionTintColor: @ : @
void 				uiview_setInteractionTintColor( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ interactionTintColor @ :
nsobject_t 			uiview_interactionTintColor( uiview_t object );

// Signature from Objective-C Runtime: q compositingMode @ :
long long 			uiview_compositingMode( uiview_t object );

// Signature from Objective-C Runtime: @ keyboardLayoutGuide @ :
nsobject_t 			uiview_keyboardLayoutGuide( uiview_t object );

// Signature from Objective-C Runtime: @ resizableSnapshotFromRect:withCapInsets: @ : {CGRect={CGPoint=dd}{CGSize=dd}} {UIEdgeInsets=dddd}
nsobject_t 			uiview_resizableSnapshotFromRect( uiview_t object, CGRect arg0, UIEdgeInsets arg1 );

// Signature from Objective-C Runtime: v setFocusGroupPriority: @ : q
void 				uiview_setFocusGroupPriority( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: v resizeWithOldSuperviewSize: @ : {CGSize=dd}
void 				uiview_resizeWithOldSuperviewSize( uiview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: B isExclusiveTouch @ :
bool 				uiview_isExclusiveTouch( uiview_t object );

// Signature from Objective-C Runtime: v setRotationBy: @ : f
void 				uiview_setRotationBy( uiview_t object, float arg0 );

// Signature from Objective-C Runtime: B viewTraversalMark @ :
bool 				uiview_viewTraversalMark( uiview_t object );

// Signature from Objective-C Runtime: v setViewTraversalMark: @ : B
void 				uiview_setViewTraversalMark( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v deferredBecomeFirstResponder @ :
void 				uiview_deferredBecomeFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: v movedFromSuperview: @ : @
void 				uiview_movedFromSuperview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v viewWillMoveToSuperview: @ : @
void 				uiview_viewWillMoveToSuperview( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v viewDidMoveToSuperview @ :
void 				uiview_viewDidMoveToSuperview( uiview_t object );

// Signature from Objective-C Runtime: v movedFromWindow: @ : @
void 				uiview_movedFromWindow( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v movedToWindow: @ : @
void 				uiview_movedToWindow( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setClearsContext: @ : B
void 				uiview_setClearsContext( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} contentStretch @ :
CGRect 				uiview_contentStretch( uiview_t object );

// Signature from Objective-C Runtime: v setFixedBackgroundPattern: @ : B
void 				uiview_setFixedBackgroundPattern( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: ^{CGImage=} newSnapshotWithRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGImage* 			uiview_newSnapshotWithRect( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: B skipsSubviewEnumeration @ :
bool 				uiview_skipsSubviewEnumeration( uiview_t object );

// Signature from Objective-C Runtime: v setSkipsSubviewEnumeration: @ : B
void 				uiview_setSkipsSubviewEnumeration( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setDeliversButtonsForGesturesToSuperview: @ : B
void 				uiview_setDeliversButtonsForGesturesToSuperview( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: @ scriptingInfoWithChildren @ :
nsobject_t 			uiview_scriptingInfoWithChildren( uiview_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				uiview_doesNotRecognizeSelector( uiview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: q selectionAffinity @ :
long long 			uiview_selectionAffinity( uiview_t object );

// Signature from Objective-C Runtime: B isFirstResponder @ :
bool 				uiview_isFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: @ firstResponder @ :
nsobject_t 			uiview_firstResponder( uiview_t object );

// Signature from Objective-C Runtime: v touchesBegan:withEvent: @ : @ @
void 				uiview_touchesBegan( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesMoved:withEvent: @ : @ @
void 				uiview_touchesMoved( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesEnded:withEvent: @ : @ @
void 				uiview_touchesEnded( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v touchesCancelled:withEvent: @ : @ @
void 				uiview_touchesCancelled( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesBegan:withEvent: @ : @ @
void 				uiview_pressesBegan( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesChanged:withEvent: @ : @ @
void 				uiview_pressesChanged( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesEnded:withEvent: @ : @ @
void 				uiview_pressesEnded( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v pressesCancelled:withEvent: @ : @ @
void 				uiview_pressesCancelled( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B resignFirstResponder @ :
bool 				uiview_resignFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: B canPerformAction:withSender: @ : : @
bool 				uiview_canPerformAction( uiview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B canBecomeFirstResponder @ :
bool 				uiview_canBecomeFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: @ keyCommands @ :
nsobject_t 			uiview_keyCommands( uiview_t object );

// Signature from Objective-C Runtime: @ inputAccessoryView @ :
nsobject_t 			uiview_inputAccessoryView( uiview_t object );

// Signature from Objective-C Runtime: @ inputView @ :
nsobject_t 			uiview_inputView( uiview_t object );

// Signature from Objective-C Runtime: @ inputViewController @ :
nsobject_t 			uiview_inputViewController( uiview_t object );

// Signature from Objective-C Runtime: q editingInteractionConfiguration @ :
long long 			uiview_editingInteractionConfiguration( uiview_t object );

// Signature from Objective-C Runtime: v validateCommand: @ : @
void 				uiview_validateCommand( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ inputAssistantItem @ :
nsobject_t 			uiview_inputAssistantItem( uiview_t object );

// Signature from Objective-C Runtime: v reloadInputViews @ :
void 				uiview_reloadInputViews( uiview_t object );

// Signature from Objective-C Runtime: B canResignFirstResponder @ :
bool 				uiview_canResignFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: B isEditing @ :
bool 				uiview_isEditing( uiview_t object );

// Signature from Objective-C Runtime: @ userActivity @ :
nsobject_t 			uiview_userActivity( uiview_t object );

// Signature from Objective-C Runtime: v encodeRestorableStateWithCoder: @ : @
void 				uiview_encodeRestorableStateWithCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v decodeRestorableStateWithCoder: @ : @
void 				uiview_decodeRestorableStateWithCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ targetForAction:withSender: @ : : @
nsobject_t 			uiview_targetForAction( uiview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ restorationIdentifier @ :
nsobject_t 			uiview_restorationIdentifier( uiview_t object );

// Signature from Objective-C Runtime: v setRestorationIdentifier: @ : @
void 				uiview_setRestorationIdentifier( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserActivity: @ : @
void 				uiview_setUserActivity( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesEstimatedPropertiesUpdated: @ : @
void 				uiview_touchesEstimatedPropertiesUpdated( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isEditable @ :
bool 				uiview_isEditable( uiview_t object );

// Signature from Objective-C Runtime: @ undoManager @ :
nsobject_t 			uiview_undoManager( uiview_t object );

// Signature from Objective-C Runtime: @ pasteConfiguration @ :
nsobject_t 			uiview_pasteConfiguration( uiview_t object );

// Signature from Objective-C Runtime: v beginSelectionChange @ :
void 				uiview_beginSelectionChange( uiview_t object );

// Signature from Objective-C Runtime: v endSelectionChange @ :
void 				uiview_endSelectionChange( uiview_t object );

// Signature from Objective-C Runtime: @ activityItemsConfiguration @ :
nsobject_t 			uiview_activityItemsConfiguration( uiview_t object );

// Signature from Objective-C Runtime: v setActivityItemsConfiguration: @ : @
void 				uiview_setActivityItemsConfiguration( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ inputAccessoryViewController @ :
nsobject_t 			uiview_inputAccessoryViewController( uiview_t object );

// Signature from Objective-C Runtime: @ interactionAssistant @ :
nsobject_t 			uiview_interactionAssistant( uiview_t object );

// Signature from Objective-C Runtime: @ textInputSuggestionDelegate @ :
nsobject_t 			uiview_textInputSuggestionDelegate( uiview_t object );

// Signature from Objective-C Runtime: v set_textInputSource: @ : q
void 				uiview_set_textInputSource( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: v captureTextFromCamera: @ : @
void 				uiview_captureTextFromCamera( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ textInputContextIdentifier @ :
nsobject_t 			uiview_textInputContextIdentifier( uiview_t object );

// Signature from Objective-C Runtime: @ textInputMode @ :
nsobject_t 			uiview_textInputMode( uiview_t object );

// Signature from Objective-C Runtime: @ recentsAccessoryView @ :
nsobject_t 			uiview_recentsAccessoryView( uiview_t object );

// Signature from Objective-C Runtime: v remoteControlReceivedWithEvent: @ : @
void 				uiview_remoteControlReceivedWithEvent( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v motionBegan:withEvent: @ : q @
void 				uiview_motionBegan( uiview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v motionEnded:withEvent: @ : q @
void 				uiview_motionEnded( uiview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v motionCancelled:withEvent: @ : q @
void 				uiview_motionCancelled( uiview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v buildMenuWithBuilder: @ : @
void 				uiview_buildMenuWithBuilder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nextFirstResponder @ :
nsobject_t 			uiview_nextFirstResponder( uiview_t object );

// Signature from Objective-C Runtime: v pasteItemProviders: @ : @
void 				uiview_pasteItemProviders( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateTextAttributesWithConversionHandler: @ : @?
void 				uiview_updateTextAttributesWithConversionHandler( uiview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v scrollWheel: @ : ^{__GSEvent=}
void 				uiview_scrollWheel( uiview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureStarted: @ : ^{__GSEvent=}
void 				uiview_gestureStarted( uiview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureEnded: @ : ^{__GSEvent=}
void 				uiview_gestureEnded( uiview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v gestureChanged: @ : ^{__GSEvent=}
void 				uiview_gestureChanged( uiview_t object, __GSEvent* arg0 );

// Signature from Objective-C Runtime: v setPasteConfiguration: @ : @
void 				uiview_setPasteConfiguration( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B canPasteItemProviders: @ : @
bool 				uiview_canPasteItemProviders( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B shouldReloadInputViews @ :
bool 				uiview_shouldReloadInputViews( uiview_t object );

// Signature from Objective-C Runtime: v reloadInputViewsWithoutReset @ :
void 				uiview_reloadInputViewsWithoutReset( uiview_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			uiview_classForCoder( uiview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			uiview_replacementObjectForCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			uiview_awakeAfterUsingCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B implementsSelector: @ : :
bool 				uiview_implementsSelector( uiview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				uiview_setObservationInfo( uiview_t object, void* arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			uiview_replacementObjectForPortCoder( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				uiview_willChangeValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				uiview_didChangeValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			uiview_replacementObjectForArchiver( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			uiview_classForArchiver( uiview_t object );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			uiview_valueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			uiview_classForKeyedArchiver( uiview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			uiview_replacementObjectForKeyedArchiver( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* uiview_methodDescriptionForSelector( uiview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			uiview_valueForKeyPath( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			uiview_mutableArrayValueForKeyPath( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			uiview_mutableOrderedSetValueForKeyPath( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			uiview_mutableSetValueForKeyPath( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver:forObservableKeyPath: @ : @ @
nsobject_t 			uiview_addObserver( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				uiview_removeObservation( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				uiview_receiveObservedValue( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				uiview_receiveObservedError( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				uiview_finishObserving( uiview_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				uiview_setObservation( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				uiview_observeValueForKeyPath( uiview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				uiview_removeObserver( uiview_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			uiview_addChainedObservers( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			uiview_addObserverBlock( uiview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			uiview_addObservationTransformer( uiview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			uiview_valueForUndefinedKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				uiview_setNilValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			uiview_mutableArrayValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			uiview_mutableOrderedSetValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			uiview_mutableSetValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			uiview_dictionaryWithValuesForKeys( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				uiview_setValuesForKeysWithDictionary( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				uiview_willChange( uiview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				uiview_didChange( uiview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				uiview_observationInfo( uiview_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			uiview_autoContentAccessingProxy( uiview_t object );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			uiview_classForPortCoder( uiview_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				uiview_performSelector( uiview_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ B @
void 				uiview_performSelectorOnMainThread( uiview_t object, nsselector_t arg0, nsobject_t arg1, bool arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				uiview_performSelectorInBackground( uiview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: B isNSDate__ @ :
bool 				uiview_isNSDate__( uiview_t object );

// Signature from Objective-C Runtime: B isNSString__ @ :
bool 				uiview_isNSString__( uiview_t object );

// Signature from Objective-C Runtime: B isNSCFConstantString__ @ :
bool 				uiview_isNSCFConstantString__( uiview_t object );

// Signature from Objective-C Runtime: B isNSNumber__ @ :
bool 				uiview_isNSNumber__( uiview_t object );

// Signature from Objective-C Runtime: B isNSArray__ @ :
bool 				uiview_isNSArray__( uiview_t object );

// Signature from Objective-C Runtime: B isNSDictionary__ @ :
bool 				uiview_isNSDictionary__( uiview_t object );

// Signature from Objective-C Runtime: B isNSData__ @ :
bool 				uiview_isNSData__( uiview_t object );

// Signature from Objective-C Runtime: B isNSObject__ @ :
bool 				uiview_isNSObject__( uiview_t object );

// Signature from Objective-C Runtime: B isNSOrderedSet__ @ :
bool 				uiview_isNSOrderedSet__( uiview_t object );

// Signature from Objective-C Runtime: B isNSSet__ @ :
bool 				uiview_isNSSet__( uiview_t object );

// Signature from Objective-C Runtime: B isNSTimeZone__ @ :
bool 				uiview_isNSTimeZone__( uiview_t object );

// Signature from Objective-C Runtime: B isNSValue__ @ :
bool 				uiview_isNSValue__( uiview_t object );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			uiview_methodSignatureForSelector( uiview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				uiview_CA_distanceToValue( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValueWithColorspace: @ : ^{CGColorSpace=}
Object* 			uiview_CA_copyRenderValueWithColorspace( uiview_t object, CGColorSpace* arg0 );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}I} CA_copyRenderValue @ :
Object* 			uiview_CA_copyRenderValue( uiview_t object );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			uiview_CA_interpolateValue( uiview_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			uiview_CA_addValue( uiview_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: B CAMLTypeSupportedForKey: @ : @
bool 				uiview_CAMLTypeSupportedForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			uiview_CAMLTypeForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B CA_validateValue:forKey: @ : @ @
bool 				uiview_CA_validateValue( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				uiview_encodeWithCAMLWriter( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=ddddddddddddddB}
nsobject_t 			uiview_CA_interpolateValues( uiview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			uiview_CAMLType( uiview_t object );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				uiview_CA_prepareRenderValue( uiview_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			uiview_CA_archivingValueForKey( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			uiview_CA_roundToIntegerFromValue( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			uiview_className( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			uiview_accessibilityLabel( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				uiview_setAccessibilityLabel( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				uiview_setAccessibilityIdentifier( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				uiview_accessibilityFrame( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityViewIsModal @ :
nsobject_t 			uiview_storedAccessibilityViewIsModal( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityElementsHidden @ :
nsobject_t 			uiview_storedAccessibilityElementsHidden( uiview_t object );

// Signature from Objective-C Runtime: @ storedShouldGroupAccessibilityChildren @ :
nsobject_t 			uiview_storedShouldGroupAccessibilityChildren( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityNavigationStyle @ :
nsobject_t 			uiview_storedAccessibilityNavigationStyle( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityRespondsToUserInteraction @ :
nsobject_t 			uiview_storedAccessibilityRespondsToUserInteraction( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedLabel @ :
nsobject_t 			uiview_accessibilityAttributedLabel( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			uiview_accessibilityValue( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedValue @ :
nsobject_t 			uiview_accessibilityAttributedValue( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityHint @ :
nsobject_t 			uiview_accessibilityHint( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedHint @ :
nsobject_t 			uiview_accessibilityAttributedHint( uiview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			uiview_accessibilityActivationPoint( uiview_t object );

// Signature from Objective-C Runtime: Q accessibilityTraits @ :
unsigned long long 	uiview_accessibilityTraits( uiview_t object );

// Signature from Objective-C Runtime: B isAccessibilityElement @ :
bool 				uiview_isAccessibilityElement( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityContainer @ :
nsobject_t 			uiview_accessibilityContainer( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityLanguage @ :
nsobject_t 			uiview_accessibilityLanguage( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityPath @ :
nsobject_t 			uiview_accessibilityPath( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityViewIsModal @ :
bool 				uiview_accessibilityViewIsModal( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityElementsHidden @ :
bool 				uiview_accessibilityElementsHidden( uiview_t object );

// Signature from Objective-C Runtime: B shouldGroupAccessibilityChildren @ :
bool 				uiview_shouldGroupAccessibilityChildren( uiview_t object );

// Signature from Objective-C Runtime: q accessibilityNavigationStyle @ :
long long 			uiview_accessibilityNavigationStyle( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityRespondsToUserInteraction @ :
bool 				uiview_accessibilityRespondsToUserInteraction( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			uiview_accessibilityUserInputLabels( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			uiview_accessibilityAttributedUserInputLabels( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityIdentifier @ :
nsobject_t 			uiview_storedAccessibilityIdentifier( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityTraits @ :
nsobject_t 			uiview_storedAccessibilityTraits( uiview_t object );

// Signature from Objective-C Runtime: @ storedIsAccessibilityElement @ :
nsobject_t 			uiview_storedIsAccessibilityElement( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityFrame @ :
nsobject_t 			uiview_storedAccessibilityFrame( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityActivationPoint @ :
nsobject_t 			uiview_storedAccessibilityActivationPoint( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityHeaderElements @ :
nsobject_t 			uiview_accessibilityHeaderElements( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityElementsHidden: @ : B
void 				uiview_setAccessibilityElementsHidden( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityViewIsModal: @ : B
void 				uiview_setAccessibilityViewIsModal( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedLabel: @ : @
void 				uiview_setAccessibilityAttributedLabel( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				uiview_setAccessibilityValue( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedValue: @ : @
void 				uiview_setAccessibilityAttributedValue( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHint: @ : @
void 				uiview_setAccessibilityHint( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedHint: @ : @
void 				uiview_setAccessibilityAttributedHint( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				uiview_setAccessibilityFrame( uiview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityPath: @ : @
void 				uiview_setAccessibilityPath( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				uiview_setAccessibilityActivationPoint( uiview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAccessibilityTraits: @ : Q
void 				uiview_setAccessibilityTraits( uiview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setIsAccessibilityElement: @ : B
void 				uiview_setIsAccessibilityElement( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityContainer: @ : @
void 				uiview_setAccessibilityContainer( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLanguage: @ : @
void 				uiview_setAccessibilityLanguage( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setShouldGroupAccessibilityChildren: @ : B
void 				uiview_setShouldGroupAccessibilityChildren( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityNavigationStyle: @ : q
void 				uiview_setAccessibilityNavigationStyle( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRespondsToUserInteraction: @ : B
void 				uiview_setAccessibilityRespondsToUserInteraction( uiview_t object, bool arg0 );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				uiview_setAccessibilityUserInputLabels( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				uiview_setAccessibilityAttributedUserInputLabels( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTextualContext @ :
nsobject_t 			uiview_accessibilityTextualContext( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityTextualContext: @ : @
void 				uiview_setAccessibilityTextualContext( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityHeaderElements: @ : @
void 				uiview_setAccessibilityHeaderElements( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityElementDidBecomeFocused @ :
void 				uiview_accessibilityElementDidBecomeFocused( uiview_t object );

// Signature from Objective-C Runtime: v accessibilityElementDidLoseFocus @ :
void 				uiview_accessibilityElementDidLoseFocus( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityElementIsFocused @ :
bool 				uiview_accessibilityElementIsFocused( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityAssistiveTechnologyFocusedIdentifiers @ :
nsobject_t 			uiview_accessibilityAssistiveTechnologyFocusedIdentifiers( uiview_t object );

// Signature from Objective-C Runtime: v accessibilityIncrement @ :
void 				uiview_accessibilityIncrement( uiview_t object );

// Signature from Objective-C Runtime: v accessibilityDecrement @ :
void 				uiview_accessibilityDecrement( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityScroll: @ : q
bool 				uiview_accessibilityScroll( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: B accessibilityPerformEscape @ :
bool 				uiview_accessibilityPerformEscape( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityPerformMagicTap @ :
bool 				uiview_accessibilityPerformMagicTap( uiview_t object );

// Signature from Objective-C Runtime: B accessibilityActivate @ :
bool 				uiview_accessibilityActivate( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				uiview_setAccessibilityCustomActions( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			uiview_accessibilityCustomActions( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentification @ :
nsobject_t 			uiview_accessibilityIdentification( uiview_t object );

// Signature from Objective-C Runtime: v accessibilitySetIdentification: @ : @
void 				uiview_accessibilitySetIdentification( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			uiview_accessibilityIdentifier( uiview_t object );

// Signature from Objective-C Runtime: Q defaultAccessibilityTraits @ :
unsigned long long 	uiview_defaultAccessibilityTraits( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityLocalizedStringKey @ :
nsobject_t 			uiview_accessibilityLocalizedStringKey( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDragSourceDescriptors: @ : @
void 				uiview_setAccessibilityDragSourceDescriptors( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDragSourceDescriptors @ :
nsobject_t 			uiview_accessibilityDragSourceDescriptors( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDropPointDescriptors: @ : @
void 				uiview_setAccessibilityDropPointDescriptors( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDropPointDescriptors @ :
nsobject_t 			uiview_accessibilityDropPointDescriptors( uiview_t object );

// Signature from Objective-C Runtime: @ storedAccessibilityContainerType @ :
nsobject_t 			uiview_storedAccessibilityContainerType( uiview_t object );

// Signature from Objective-C Runtime: q accessibilityElementCount @ :
long long 			uiview_accessibilityElementCount( uiview_t object );

// Signature from Objective-C Runtime: @ accessibilityElementAtIndex: @ : q
nsobject_t 			uiview_accessibilityElementAtIndex( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: q indexOfAccessibilityElement: @ : @
long long 			uiview_indexOfAccessibilityElement( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityElements @ :
nsobject_t 			uiview_accessibilityElements( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityElements: @ : @
void 				uiview_setAccessibilityElements( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			uiview_accessibilityContainerType( uiview_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				uiview_setAccessibilityContainerType( uiview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				uiview_setAccessibilityCustomRotors( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			uiview_accessibilityCustomRotors( uiview_t object );

// Signature from Objective-C Runtime: @ uiPresentationManager @ :
nsobject_t 			uiview_uiPresentationManager( uiview_t object );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				uiview_awakeFromNib( uiview_t object );

// Signature from Objective-C Runtime: B conformsToProtocolCached: @ : @
bool 				uiview_conformsToProtocolCached( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				uiview_prepareForInterfaceBuilder( uiview_t object );

// Signature from Objective-C Runtime: @ initFromPQLResultSet:error: @ : @ ^@
nsobject_t 			uiview_initFromPQLResultSet( uiview_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: B supportsRBSXPCSecureCoding @ :
bool 				uiview_supportsRBSXPCSecureCoding( uiview_t object );

// Signature from Objective-C Runtime: B RBSIsXPCObject @ :
bool 				uiview_RBSIsXPCObject( uiview_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			uiview_NSRepresentation( uiview_t object );

// Signature from Objective-C Runtime: @ pep_onMainThread @ :
nsobject_t 			uiview_pep_onMainThread( uiview_t object );

// Signature from Objective-C Runtime: @ pep_onThread: @ : @
nsobject_t 			uiview_pep_onThread( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pep_onOperationQueue:priority: @ : @ q
nsobject_t 			uiview_pep_onOperationQueue( uiview_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: @ pep_onMainThreadIfNecessary @ :
nsobject_t 			uiview_pep_onMainThreadIfNecessary( uiview_t object );

// Signature from Objective-C Runtime: @ pep_afterDelay: @ : d
nsobject_t 			uiview_pep_afterDelay( uiview_t object, double arg0 );

// Signature from Objective-C Runtime: @ pep_getInvocation: @ : ^@
nsobject_t 			uiview_pep_getInvocation( uiview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ stringValueSafe: @ : ^i
nsobject_t 			uiview_stringValueSafe( uiview_t object, int* arg0 );

// Signature from Objective-C Runtime: r* utf8ValueSafe: @ : ^i
char* 				uiview_utf8ValueSafe( uiview_t object, int* arg0 );

// Signature from Objective-C Runtime: B boolValueSafe @ :
bool 				uiview_boolValueSafe( uiview_t object );

// Signature from Objective-C Runtime: q int64ValueSafe @ :
long long 			uiview_int64ValueSafe( uiview_t object );

// Signature from Objective-C Runtime: d doubleValueSafe @ :
double 				uiview_doubleValueSafe( uiview_t object );

// Signature from Objective-C Runtime: B un_safeBoolValue @ :
bool 				uiview_un_safeBoolValue( uiview_t object );

// Signature from Objective-C Runtime: B supportsBSXPCSecureCoding @ :
bool 				uiview_supportsBSXPCSecureCoding( uiview_t object );

// Signature from Objective-C Runtime: B bs_isPlistableType @ :
bool 				uiview_bs_isPlistableType( uiview_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			uiview_bs_secureEncoded( uiview_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			uiview_bs_encoded( uiview_t object );

// Signature from Objective-C Runtime: v releaseOnMainThread @ :
void 				uiview_releaseOnMainThread( uiview_t object );

// Signature from Objective-C Runtime: @ debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			uiview_debugHierarchyAdditionalGroupingIDs( uiview_t object );

// Signature from Objective-C Runtime: @ debugHierarchyObjectsInGroupWithID:outOptions: @ : @ ^@
nsobject_t 			uiview_debugHierarchyObjectsInGroupWithID( uiview_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ debugHierarchyPropertyDescriptions @ :
nsobject_t 			uiview_debugHierarchyPropertyDescriptions( uiview_t object );

// Signature from Objective-C Runtime: @ debugHierarchyValueForPropertyWithName: @ : @
nsobject_t 			uiview_debugHierarchyValueForPropertyWithName( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SCN_setupDisplayLinkWithQueue:screen:policy: @ : @ @ Q
nsobject_t 			uiview_SCN_setupDisplayLinkWithQueue( uiview_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: v postNotificationWithDescription: @ : @
void 				uiview_postNotificationWithDescription( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B okToNotifyFromThisThread @ :
bool 				uiview_okToNotifyFromThisThread( uiview_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPerformSelector:withObject: @ : : @
void 				uiview_fromNotifySafeThreadPerformSelector( uiview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v allowSafePerformSelector @ :
void 				uiview_allowSafePerformSelector( uiview_t object );

// Signature from Objective-C Runtime: v disallowSafePerformSelector @ :
void 				uiview_disallowSafePerformSelector( uiview_t object );

// Signature from Objective-C Runtime: v fromNotifySafeThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				uiview_fromNotifySafeThreadPostNotificationName( uiview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v fromMainThreadPostNotificationName:object:userInfo: @ : @ @ @
void 				uiview_fromMainThreadPostNotificationName( uiview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v cn_updateDictionaryForKey:withChanges: @ : @ @
void 				uiview_cn_updateDictionaryForKey( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionAtIndent: @ : Q
nsobject_t 			uiview_descriptionAtIndent( uiview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: B isNull @ :
bool 				uiview_isNull( uiview_t object );

// Signature from Objective-C Runtime: @ CKDescription @ :
nsobject_t 			uiview_CKDescription( uiview_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescription @ :
nsobject_t 			uiview_CKPropertiesDescription( uiview_t object );

// Signature from Objective-C Runtime: @ CKUnredactedDescription @ :
nsobject_t 			uiview_CKUnredactedDescription( uiview_t object );

// Signature from Objective-C Runtime: @ CKRedactedDescription @ :
nsobject_t 			uiview_CKRedactedDescription( uiview_t object );

// Signature from Objective-C Runtime: @ CKDescriptionPropertiesWithPublic:private:shouldExpand: @ : B B B
nsobject_t 			uiview_CKDescriptionPropertiesWithPublic( uiview_t object, bool arg0, bool arg1, bool arg2 );

// Signature from Objective-C Runtime: v CKAssignToContainerWithID: @ : @
void 				uiview_CKAssignToContainerWithID( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSingleLineDescription @ :
nsobject_t 			uiview_CKSingleLineDescription( uiview_t object );

// Signature from Objective-C Runtime: @ CKPropertiesDescriptionStringFromProperties: @ : @
nsobject_t 			uiview_CKPropertiesDescriptionStringFromProperties( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKExpandedDescription @ :
nsobject_t 			uiview_CKExpandedDescription( uiview_t object );

// Signature from Objective-C Runtime: @ CKHashedDescription @ :
nsobject_t 			uiview_CKHashedDescription( uiview_t object );

// Signature from Objective-C Runtime: v ck_bindInStatement:atIndex: @ : @ Q
void 				uiview_ck_bindInStatement( uiview_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ CKDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			uiview_CKDescriptionRedact( uiview_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ CKObjectDescriptionRedact:avoidShortDescription: @ : B B
nsobject_t 			uiview_CKObjectDescriptionRedact( uiview_t object, bool arg0, bool arg1 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForName:object:queue:usingBlock: @ : @ @ @ @?
nsobject_t 			uiview_fm_addNotificationBlockObserverForName( uiview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ fm_addNotificationBlockObserverForObject:keyPath:options:usingBlock: @ : @ @ Q @?
nsobject_t 			uiview_fm_addNotificationBlockObserverForObject( uiview_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v fm_removeNotificationBlockObserver: @ : @
void 				uiview_fm_removeNotificationBlockObserver( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ fm_nullToNil @ :
nsobject_t 			uiview_fm_nullToNil( uiview_t object );

// Signature from Objective-C Runtime: @ fm_logID @ :
nsobject_t 			uiview_fm_logID( uiview_t object );

// Signature from Objective-C Runtime: @ nullToNil @ :
nsobject_t 			uiview_nullToNil( uiview_t object );

// Signature from Objective-C Runtime: @ logID @ :
nsobject_t 			uiview_logID( uiview_t object );

// Signature from Objective-C Runtime: v if_setValueIfNonNil:forKey: @ : @ @
void 				uiview_if_setValueIfNonNil( uiview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v if_setValueIfYES:forKey: @ : B @
void 				uiview_if_setValueIfYES( uiview_t object, bool arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ toPBCodable @ :
nsobject_t 			uiview_toPBCodable( uiview_t object );

// Signature from Objective-C Runtime: @ ams_generateDescriptionWithSubObjects: @ : @
nsobject_t 			uiview_ams_generateDescriptionWithSubObjects( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B isProxy @ :
bool 				uiview_isProxy( uiview_t object );

// Signature from Objective-C Runtime: B isEqual: @ : @
bool 				uiview_isEqual( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			uiview_class( uiview_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			uiview_self( uiview_t object );

// Signature from Objective-C Runtime: B isKindOfClass: @ : #
bool 				uiview_isKindOfClass( uiview_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B isMemberOfClass: @ : #
bool 				uiview_isMemberOfClass( uiview_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: B conformsToProtocol: @ : @
bool 				uiview_conformsToProtocol( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: B respondsToSelector: @ : :
bool 				uiview_respondsToSelector( uiview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			uiview_zone( uiview_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	uiview_hash( uiview_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			uiview_superclass( uiview_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			uiview_debugDescription( uiview_t object );

// Signature from Objective-C Runtime: B retainWeakReference @ :
bool 				uiview_retainWeakReference( uiview_t object );

// Signature from Objective-C Runtime: B allowsWeakReference @ :
bool 				uiview_allowsWeakReference( uiview_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			uiview_copy( uiview_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				uiview_finalize( uiview_t object );

// Signature from Objective-C Runtime: B isFault @ :
bool 				uiview_isFault( uiview_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				uiview_forwardInvocation( uiview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			uiview_forwardingTargetForSelector( uiview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			uiview_mutableCopy( uiview_t object );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyChildGroupingID @ :
nsobject_t 			uiview_fallback_debugHierarchyChildGroupingID( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyAdditionalGroupingIDs @ :
nsobject_t 			uiview_fallback_debugHierarchyAdditionalGroupingIDs( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyObjectsInGroupWithID:onObject:outOptions: @ : @ @ ^@
nsobject_t 			uiview_fallback_debugHierarchyObjectsInGroupWithID( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyPropertyDescriptions @ :
nsobject_t 			uiview_fallback_debugHierarchyPropertyDescriptions( );

// Signature from Objective-C Runtime: @ fallback_debugHierarchyValueForPropertyWithName:onObject:outOptions:outError: @ : @ @ ^@ ^@
nsobject_t 			uiview_fallback_debugHierarchyValueForPropertyWithName( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: v initialize @ :
void 				uiview_initialize( );

// Signature from Objective-C Runtime: v flush @ :
void 				uiview_flush( );

// Signature from Objective-C Runtime: @ appearance @ :
nsobject_t 			uiview_appearance( );

// Signature from Objective-C Runtime: v animateWithDuration:delay:options:animations:completion: @ : d d Q @? @?
void 				uiview_animateWithDuration( double arg0, double arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v performWithoutAnimation: @ : @?
void 				uiview_performWithoutAnimation( nsobject_t* arg0 );

// Signature from Objective-C Runtime: B areAnimationsEnabled @ :
bool 				uiview_areAnimationsEnabled( );

// Signature from Objective-C Runtime: # layerClass @ :
nsclass_t 			uiview_layerClass( );

// Signature from Objective-C Runtime: @ appearanceWhenContainedInInstancesOfClasses: @ : @
nsobject_t 			uiview_appearanceWhenContainedInInstancesOfClasses( nsobject_t arg0 );

// Signature from Objective-C Runtime: B requiresConstraintBasedLayout @ :
bool 				uiview_requiresConstraintBasedLayout( );

// Signature from Objective-C Runtime: v disableAnimation @ :
void 				uiview_disableAnimation( );

// Signature from Objective-C Runtime: v enableAnimation @ :
void 				uiview_enableAnimation( );

// Signature from Objective-C Runtime: v setAnimationCurve: @ : q
void 				uiview_setAnimationCurve( long long arg0 );

// Signature from Objective-C Runtime: v addKeyframeWithRelativeStartTime:relativeDuration:animations: @ : d d @?
void 				uiview_addKeyframeWithRelativeStartTime( double arg0, double arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v animateKeyframesWithDuration:delay:options:animations:completion: @ : d d Q @? @?
void 				uiview_animateKeyframesWithDuration( double arg0, double arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: d inheritedAnimationDuration @ :
double 				uiview_inheritedAnimationDuration( );

// Signature from Objective-C Runtime: v setAnimationDuration: @ : d
void 				uiview_setAnimationDuration( double arg0 );

// Signature from Objective-C Runtime: @ appearanceWhenContainedIn: @ : #
nsobject_t 			uiview_appearanceWhenContainedIn( nsclass_t arg0 );

// Signature from Objective-C Runtime: @ appearanceForTraitCollection: @ : @
nsobject_t 			uiview_appearanceForTraitCollection( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAnimationsEnabled: @ : B
void 				uiview_setAnimationsEnabled( bool arg0 );

// Signature from Objective-C Runtime: v transitionWithView:duration:options:animations:completion: @ : @ d Q @? @?
void 				uiview_transitionWithView( nsobject_t arg0, double arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v conditionallyAnimate:withAnimation:layout:completion: @ : B @? @? @?
void 				uiview_conditionallyAnimate( bool arg0, nsobject_t* arg1, nsobject_t* arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: q userInterfaceLayoutDirectionForSemanticContentAttribute: @ : q
long long 			uiview_userInterfaceLayoutDirectionForSemanticContentAttribute( long long arg0 );

// Signature from Objective-C Runtime: @ appearanceMatchingProperties:whenContainedInInstancesOfClasses: @ : @ @
nsobject_t 			uiview_appearanceMatchingProperties( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAnimationRepeatCount: @ : f
void 				uiview_setAnimationRepeatCount( float arg0 );

// Signature from Objective-C Runtime: v modifyAnimationsWithRepeatCount:autoreverses:animations: @ : d B @?
void 				uiview_modifyAnimationsWithRepeatCount( double arg0, bool arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v commitAnimations @ :
void 				uiview_commitAnimations( );

// Signature from Objective-C Runtime: v beginAnimations:context: @ : @ ^v
void 				uiview_beginAnimations( nsobject_t arg0, void* arg1 );

// Signature from Objective-C Runtime: v setAnimationDelegate: @ : @
void 				uiview_setAnimationDelegate( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAnimationDidStopSelector: @ : :
void 				uiview_setAnimationDidStopSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v transitionFromView:toView:duration:options:completion: @ : @ @ d Q @?
void 				uiview_transitionFromView( nsobject_t arg0, nsobject_t arg1, double arg2, unsigned long long arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v throttledFlush @ :
void 				uiview_throttledFlush( );

// Signature from Objective-C Runtime: v setAnimationRepeatAutoreverses: @ : B
void 				uiview_setAnimationRepeatAutoreverses( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationBeginsFromCurrentState: @ : B
void 				uiview_setAnimationBeginsFromCurrentState( bool arg0 );

// Signature from Objective-C Runtime: v endAnimations @ :
void 				uiview_endAnimations( );

// Signature from Objective-C Runtime: v setAnimationPosition: @ : {CGPoint=dd}
void 				uiview_setAnimationPosition( CGPoint arg0 );

// Signature from Objective-C Runtime: v setAnimationDelay: @ : d
void 				uiview_setAnimationDelay( double arg0 );

// Signature from Objective-C Runtime: v setAnimationFrameInterval: @ : d
void 				uiview_setAnimationFrameInterval( double arg0 );

// Signature from Objective-C Runtime: v setAnimationStartDate: @ : @
void 				uiview_setAnimationStartDate( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAnimationStartTime: @ : d
void 				uiview_setAnimationStartTime( double arg0 );

// Signature from Objective-C Runtime: v setAnimationPreventsAdditive: @ : B
void 				uiview_setAnimationPreventsAdditive( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationAutoreverses: @ : B
void 				uiview_setAnimationAutoreverses( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationFromCurrentState: @ : B
void 				uiview_setAnimationFromCurrentState( bool arg0 );

// Signature from Objective-C Runtime: v setAnimationTransition:forView:cache: @ : q @ B
void 				uiview_setAnimationTransition( long long arg0, nsobject_t arg1, bool arg2 );

// Signature from Objective-C Runtime: v setAnimationWillStartSelector: @ : :
void 				uiview_setAnimationWillStartSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v performSystemAnimation:onViews:options:animations:completion: @ : Q @ Q @? @?
void 				uiview_performSystemAnimation( unsigned long long arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t* arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: @ objectWithRestorationIdentifierPath: @ : @
nsobject_t 			uiview_objectWithRestorationIdentifierPath( nsobject_t arg0 );

// Signature from Objective-C Runtime: v clearTextInputContextIdentifier: @ : @
void 				uiview_clearTextInputContextIdentifier( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				uiview_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			uiview_version( );

// Signature from Objective-C Runtime: B instancesImplementSelector: @ : :
bool 				uiview_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				uiview_setVersion( long long arg0 );

// Signature from Objective-C Runtime: B automaticallyNotifiesObserversForKey: @ : @
bool 				uiview_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* uiview_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B accessInstanceVariablesDirectly @ :
bool 				uiview_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			uiview_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				uiview_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			uiview_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			uiview_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				uiview_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			uiview_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: B CA_automaticallyNotifiesObservers: @ : #
bool 				uiview_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: B CA_encodesPropertyConditionally:type: @ : I i
bool 				uiview_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			uiview_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			uiview_SFSQLiteClassName( );

// Signature from Objective-C Runtime: B isSelectorExcludedFromWebScript: @ : :
bool 				uiview_isSelectorExcludedFromWebScript( nsselector_t arg0 );

// Signature from Objective-C Runtime: B isKeyExcludedFromWebScript: @ : r*
bool 				uiview_isKeyExcludedFromWebScript( char* arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			uiview_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			uiview_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			uiview_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			uiview_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			uiview_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			uiview_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CKSQLiteClassName @ :
nsobject_t 			uiview_CKSQLiteClassName( );

// Signature from Objective-C Runtime: B brc_swizzleInstanceMethod:with: @ : : :
bool 				uiview_brc_swizzleInstanceMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: B brc_swizzleClassMethod:with: @ : : :
bool 				uiview_brc_swizzleClassMethod( nsselector_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: @ fromPBCodable: @ : @
nsobject_t 			uiview_fromPBCodable( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			uiview_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			uiview_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			uiview_new( );

// Signature from Objective-C Runtime: B resolveInstanceMethod: @ : :
bool 				uiview_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: B resolveClassMethod: @ : :
bool 				uiview_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
uiview_t 			uiview_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			uiview_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: B isSubclassOfClass: @ : #
bool 				uiview_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: B isAncestorOfObject: @ : @
bool 				uiview_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: B instancesRespondToSelector: @ : :
bool 				uiview_instancesRespondToSelector( nsselector_t arg0 );

#endif