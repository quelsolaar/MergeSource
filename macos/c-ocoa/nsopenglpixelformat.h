/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSOPENGLPIXELFORMAT_HEADER
#define SHIMMER_C_OCOA_NSOPENGLPIXELFORMAT_HEADER

typedef void*	nsopenglpixelformat_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsopenglpixelformat_dealloc( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsopenglpixelformat_init( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ initWithData: @ : @
nsobject_t 			nsopenglpixelformat_initWithData( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsopenglpixelformat_encodeWithCoder( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsopenglpixelformat_initWithCoder( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ attributes @ :
nsobject_t 			nsopenglpixelformat_attributes( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v setAttributes: @ : @
void 				nsopenglpixelformat_setAttributes( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{_CGLPixelFormatObject=} CGLPixelFormatObj @ :
_CGLPixelFormatObject* nsopenglpixelformat_CGLPixelFormatObj( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ initWithAttributes: @ : r^I
nsobject_t 			nsopenglpixelformat_initWithAttributes( nsopenglpixelformat_t object, unsigned int* arg0 );

// Signature from Objective-C Runtime: @ initWithCGLPixelFormatObj: @ : ^{_CGLPixelFormatObject=}
nsobject_t 			nsopenglpixelformat_initWithCGLPixelFormatObj( nsopenglpixelformat_t object, _CGLPixelFormatObject* arg0 );

// Signature from Objective-C Runtime: v getValues:forAttribute:forVirtualScreen: @ : ^i I i
void 				nsopenglpixelformat_getValues( nsopenglpixelformat_t object, int* arg0, unsigned int arg1, int arg2 );

// Signature from Objective-C Runtime: i numberOfVirtualScreens @ :
int 				nsopenglpixelformat_numberOfVirtualScreens( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsopenglpixelformat_accessibilityOverriddenAttributes( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsopenglpixelformat_accessibilityReplaceRange( nsopenglpixelformat_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsopenglpixelformat_accessibilityVisibleArea( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsopenglpixelformat_accessibilityArrayAttributeCount( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsopenglpixelformat_accessibilityIndexOfChild( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsopenglpixelformat_accessibilityArrayAttributeValues( nsopenglpixelformat_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsopenglpixelformat_accessibilityParameterizedAttributeNames( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsopenglpixelformat_accessibilityAttributeValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsopenglpixelformat_accessibilityIndexForChildUIElementAttributeForParameter( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsopenglpixelformat_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsopenglpixelformat_accessibilityTemporaryChildren( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsopenglpixelformat_accessibilityPerformShowMenuOfChild( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsopenglpixelformat_accessibilityPresenterProcessIdentifier( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsopenglpixelformat_accessibilityShouldUseUniqueId( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsopenglpixelformat_accessibilitySupportsNotifications( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsopenglpixelformat_accessibilityShouldSendNotification( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsopenglpixelformat_accessibilitySupportsOverriddenAttributes( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsopenglpixelformat_accessibilityAllowsOverriddenAttributesWhenIgnored( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsopenglpixelformat_accessibilitySetOverrideValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsopenglpixelformat_accessibilityEncodeOverriddenAttributes( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsopenglpixelformat_accessibilityDecodeOverriddenAttributes( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsopenglpixelformat_accessibilitySupportsCustomElementData( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsopenglpixelformat_bind( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsopenglpixelformat_awakeFromNib( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsopenglpixelformat_userInterfaceItemIdentifier( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsopenglpixelformat_setUserInterfaceItemIdentifier( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsopenglpixelformat_unbind( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsopenglpixelformat_valueClassForBinding( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsopenglpixelformat_NS_observationForKeyPath( nsopenglpixelformat_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsopenglpixelformat_NS_observationForKeyPaths( nsopenglpixelformat_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsopenglpixelformat_optionDescriptionsForBinding( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsopenglpixelformat_exposedBindings( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsopenglpixelformat_infoForBinding( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsopenglpixelformat_prepareForInterfaceBuilder( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsopenglpixelformat_accessibilityAddTemporaryChild( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsopenglpixelformat_accessibilityRemoveTemporaryChild( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsopenglpixelformat_NSLifeguard_autorelease( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsopenglpixelformat_accessibilitySetPresenterProcessIdentifier( nsopenglpixelformat_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsopenglpixelformat_NS_tiledLayerVisibleRect( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsopenglpixelformat_NS_addTiledLayerDescendent( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsopenglpixelformat_NS_removeTiledLayerDescendent( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsopenglpixelformat_CAMLTypeSupportedForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsopenglpixelformat_CAMLTypeForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsopenglpixelformat_CA_validateValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsopenglpixelformat_encodeWithCAMLWriter( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsopenglpixelformat_CA_interpolateValues( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsopenglpixelformat_CAMLType( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsopenglpixelformat_CA_archivingValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsopenglpixelformat_CA_roundToIntegerFromValue( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsopenglpixelformat_CA_addValue( nsopenglpixelformat_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsopenglpixelformat_CA_interpolateValue( nsopenglpixelformat_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsopenglpixelformat_CA_distanceToValue( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsopenglpixelformat_CA_prepareRenderValue( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsopenglpixelformat_CA_copyRenderValue( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsopenglpixelformat_supportsRBSXPCSecureCoding( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsopenglpixelformat_RBSIsXPCObject( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsopenglpixelformat_NSRepresentation( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsopenglpixelformat_supportsBSXPCSecureCoding( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsopenglpixelformat_bs_isPlistableType( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsopenglpixelformat_bs_secureEncoded( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsopenglpixelformat_bs_encoded( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsopenglpixelformat_classForCoder( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsopenglpixelformat_replacementObjectForCoder( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsopenglpixelformat_awakeAfterUsingCoder( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsopenglpixelformat_implementsSelector( nsopenglpixelformat_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsopenglpixelformat_setObservationInfo( nsopenglpixelformat_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsopenglpixelformat_setValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsopenglpixelformat_replacementObjectForPortCoder( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsopenglpixelformat_willChangeValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsopenglpixelformat_didChangeValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsopenglpixelformat_dictionaryWithValuesForKeys( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsopenglpixelformat_valueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsopenglpixelformat_valueForUndefinedKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsopenglpixelformat_classForKeyedArchiver( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsopenglpixelformat_replacementObjectForKeyedArchiver( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsopenglpixelformat_valueForKeyPath( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsopenglpixelformat_addObserver( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsopenglpixelformat_objectSpecifier( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsopenglpixelformat_replacementObjectForArchiver( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsopenglpixelformat_classForArchiver( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsopenglpixelformat_attributeKeys( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsopenglpixelformat_toOneRelationshipKeys( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsopenglpixelformat_toManyRelationshipKeys( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsopenglpixelformat_inverseForRelationshipKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsopenglpixelformat_classDescription( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsopenglpixelformat_copyScriptingValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsopenglpixelformat_methodDescriptionForSelector( nsopenglpixelformat_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsopenglpixelformat_newScriptingObjectOfClass( nsopenglpixelformat_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsopenglpixelformat_handleQueryWithUnboundKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsopenglpixelformat_handleTakeValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsopenglpixelformat_storedValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsopenglpixelformat_takeStoredValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsopenglpixelformat_takeValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsopenglpixelformat_valuesForKeys( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsopenglpixelformat_takeValuesFromDictionary( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsopenglpixelformat_unableToSetNilForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsopenglpixelformat_keyValueBindingForKey( nsopenglpixelformat_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsopenglpixelformat_createKeyValueBindingForKey( nsopenglpixelformat_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsopenglpixelformat_mutableArrayValueForKeyPath( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsopenglpixelformat_mutableOrderedSetValueForKeyPath( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsopenglpixelformat_mutableSetValueForKeyPath( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsopenglpixelformat_removeObservation( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsopenglpixelformat_receiveObservedValue( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsopenglpixelformat_receiveObservedError( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsopenglpixelformat_finishObserving( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsopenglpixelformat_setObservation( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsopenglpixelformat_observeValueForKeyPath( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsopenglpixelformat_removeObserver( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsopenglpixelformat_className( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsopenglpixelformat_addChainedObservers( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsopenglpixelformat_addObserverBlock( nsopenglpixelformat_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsopenglpixelformat_addObservationTransformer( nsopenglpixelformat_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsopenglpixelformat_setNilValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsopenglpixelformat_mutableArrayValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsopenglpixelformat_mutableOrderedSetValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsopenglpixelformat_mutableSetValueForKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsopenglpixelformat_setValuesForKeysWithDictionary( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsopenglpixelformat_willChange( nsopenglpixelformat_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsopenglpixelformat_didChange( nsopenglpixelformat_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsopenglpixelformat_observationInfo( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsopenglpixelformat_autoContentAccessingProxy( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsopenglpixelformat_coerceValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsopenglpixelformat_setScriptingProperties( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsopenglpixelformat_scriptingValueForSpecifier( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsopenglpixelformat_scriptingProperties( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsopenglpixelformat_coerceValueForScriptingProperties( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsopenglpixelformat_valueAtIndex( nsopenglpixelformat_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsopenglpixelformat_valueWithName( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsopenglpixelformat_valueWithUniqueID( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsopenglpixelformat_insertValue( nsopenglpixelformat_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsopenglpixelformat_replaceValueAtIndex( nsopenglpixelformat_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsopenglpixelformat_removeValueAtIndex( nsopenglpixelformat_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsopenglpixelformat_classForPortCoder( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsopenglpixelformat_performSelector( nsopenglpixelformat_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsopenglpixelformat_classCode( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsopenglpixelformat_isEqualTo( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsopenglpixelformat_isLessThanOrEqualTo( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsopenglpixelformat_isLessThan( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsopenglpixelformat_isGreaterThanOrEqualTo( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsopenglpixelformat_isGreaterThan( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsopenglpixelformat_isNotEqualTo( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsopenglpixelformat_doesContain( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsopenglpixelformat_isLike( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsopenglpixelformat_isCaseInsensitiveLike( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsopenglpixelformat_performSelectorOnMainThread( nsopenglpixelformat_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsopenglpixelformat_performSelectorInBackground( nsopenglpixelformat_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsopenglpixelformat_classDescriptionForDestinationKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsopenglpixelformat_entityName( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsopenglpixelformat_ownsDestinationObjectsForRelationshipKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsopenglpixelformat_isToManyKey( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsopenglpixelformat_removeObject( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsopenglpixelformat_addObject( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsopenglpixelformat_validateTakeValue( nsopenglpixelformat_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsopenglpixelformat_allPropertyKeys( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsopenglpixelformat_clearProperties( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsopenglpixelformat_flushKeyBindings( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsopenglpixelformat_takeStoredValuesFromDictionary( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsopenglpixelformat_isNSDate__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsopenglpixelformat_isNSString__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsopenglpixelformat_isNSCFConstantString__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsopenglpixelformat_isNSNumber__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsopenglpixelformat_isNSArray__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsopenglpixelformat_isNSDictionary__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsopenglpixelformat_isNSSet__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsopenglpixelformat_isNSData__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsopenglpixelformat_isNSObject__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsopenglpixelformat_isNSOrderedSet__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsopenglpixelformat_isNSTimeZone__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsopenglpixelformat_isNSValue__( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsopenglpixelformat_description( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsopenglpixelformat_doesNotRecognizeSelector( nsopenglpixelformat_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsopenglpixelformat_methodSignatureForSelector( nsopenglpixelformat_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsopenglpixelformat_retain( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsopenglpixelformat_retainCount( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsopenglpixelformat_autorelease( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsopenglpixelformat_copy( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsopenglpixelformat_finalize( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsopenglpixelformat_isEqual( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsopenglpixelformat_class( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsopenglpixelformat_self( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsopenglpixelformat_isProxy( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsopenglpixelformat_isKindOfClass( nsopenglpixelformat_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsopenglpixelformat_isMemberOfClass( nsopenglpixelformat_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsopenglpixelformat_conformsToProtocol( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsopenglpixelformat_respondsToSelector( nsopenglpixelformat_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsopenglpixelformat_zone( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsopenglpixelformat_hash( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsopenglpixelformat_superclass( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsopenglpixelformat_debugDescription( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsopenglpixelformat_retainWeakReference( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsopenglpixelformat_allowsWeakReference( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsopenglpixelformat_isFault( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsopenglpixelformat_forwardInvocation( nsopenglpixelformat_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsopenglpixelformat_forwardingTargetForSelector( nsopenglpixelformat_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsopenglpixelformat_mutableCopy( nsopenglpixelformat_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsopenglpixelformat_initialize( );

// Signature from Objective-C Runtime: @ openGLPixelFormatWithCGLPixelFormatObj: @ : ^{_CGLPixelFormatObject=}
nsobject_t 			nsopenglpixelformat_openGLPixelFormatWithCGLPixelFormatObj( _CGLPixelFormatObject* arg0 );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsopenglpixelformat_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsopenglpixelformat_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsopenglpixelformat_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsopenglpixelformat_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsopenglpixelformat_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsopenglpixelformat_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsopenglpixelformat_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsopenglpixelformat_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsopenglpixelformat_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsopenglpixelformat_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsopenglpixelformat_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsopenglpixelformat_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsopenglpixelformat_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsopenglpixelformat_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsopenglpixelformat_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsopenglpixelformat_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsopenglpixelformat_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsopenglpixelformat_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsopenglpixelformat_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsopenglpixelformat_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsopenglpixelformat_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsopenglpixelformat_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsopenglpixelformat_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsopenglpixelformat_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsopenglpixelformat_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsopenglpixelformat_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsopenglpixelformat_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsopenglpixelformat_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsopenglpixelformat_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsopenglpixelformat_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsopenglpixelformat_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsopenglpixelformat_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsopenglpixelformat_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsopenglpixelformat_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsopenglpixelformat_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsopenglpixelformat_t nsopenglpixelformat_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsopenglpixelformat_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsopenglpixelformat_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsopenglpixelformat_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsopenglpixelformat_instancesRespondToSelector( nsselector_t arg0 );

#endif