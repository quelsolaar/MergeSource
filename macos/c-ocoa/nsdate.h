/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSDATE_HEADER
#define SHIMMER_C_OCOA_NSDATE_HEADER

typedef void*	nsdate_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: c isAfterDate: @ : @
char 				nsdate_isAfterDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isBeforeDate: @ : @
char 				nsdate_isBeforeDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_dateByAddingDays: @ : q
nsobject_t 			nsdate_bs_dateByAddingDays( nsdate_t object, long long arg0 );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsdate_classForCoder( nsdate_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsdate_encodeWithCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsdate_initWithCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsdate_replacementObjectForPortCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dateWithCalendarFormat:timeZone: @ : @ @
nsobject_t 			nsdate_dateWithCalendarFormat( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ descriptionWithCalendarFormat:timeZone:locale: @ : @ @ @
nsobject_t 			nsdate_descriptionWithCalendarFormat( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: d bucketToRoundingFactor: @ : I
double 				nsdate_bucketToRoundingFactor( nsdate_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: d timeIntervalSince1970WithBucket: @ : I
double 				nsdate_timeIntervalSince1970WithBucket( nsdate_t object, unsigned int arg0 );

// Signature from Objective-C Runtime: i daysSince1970 @ :
int 				nsdate_daysSince1970( nsdate_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsdate_copyWithZone( nsdate_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsdate_isEqual( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsdate_hash( nsdate_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsdate_description( nsdate_t object );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsdate_isNSDate__( nsdate_t object );

// Signature from Objective-C Runtime: d timeIntervalSince1970 @ :
double 				nsdate_timeIntervalSince1970( nsdate_t object );

// Signature from Objective-C Runtime: q compare: @ : @
long long 			nsdate_compare( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ descriptionWithLocale: @ : @
nsobject_t 			nsdate_descriptionWithLocale( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeIntervalSinceReferenceDate @ :
double 				nsdate_timeIntervalSinceReferenceDate( nsdate_t object );

// Signature from Objective-C Runtime: @ initWithTimeIntervalSinceReferenceDate: @ : d
nsobject_t 			nsdate_initWithTimeIntervalSinceReferenceDate( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: c isEqualToDate: @ : @
char 				nsdate_isEqualToDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithString: @ : @
nsobject_t 			nsdate_initWithString( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dateByAddingTimeInterval: @ : d
nsobject_t 			nsdate_dateByAddingTimeInterval( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ earlierDate: @ : @
nsobject_t 			nsdate_earlierDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ laterDate: @ : @
nsobject_t 			nsdate_laterDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeIntervalSinceDate: @ : @
double 				nsdate_timeIntervalSinceDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d timeIntervalSinceNow @ :
double 				nsdate_timeIntervalSinceNow( nsdate_t object );

// Signature from Objective-C Runtime: @ initWithTimeIntervalSinceNow: @ : d
nsobject_t 			nsdate_initWithTimeIntervalSinceNow( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ initWithTimeIntervalSince1970: @ : d
nsobject_t 			nsdate_initWithTimeIntervalSince1970( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: @ initWithTimeInterval:sinceDate: @ : d @
nsobject_t 			nsdate_initWithTimeInterval( nsdate_t object, double arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ initWithDate: @ : @
nsobject_t 			nsdate_initWithDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addTimeInterval: @ : d
nsobject_t 			nsdate_addTimeInterval( nsdate_t object, double arg0 );

// Signature from Objective-C Runtime: c isInToday @ :
char 				nsdate_isInToday( nsdate_t object );

// Signature from Objective-C Runtime: c isInTomorrow @ :
char 				nsdate_isInTomorrow( nsdate_t object );

// Signature from Objective-C Runtime: c isInYesterday @ :
char 				nsdate_isInYesterday( nsdate_t object );

// Signature from Objective-C Runtime: c isInSameDayAsDate: @ : @
char 				nsdate_isInSameDayAsDate( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsdate_accessibilityOverriddenAttributes( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsdate_accessibilityReplaceRange( nsdate_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsdate_accessibilityVisibleArea( nsdate_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsdate_accessibilityArrayAttributeCount( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsdate_accessibilityIndexOfChild( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsdate_accessibilityArrayAttributeValues( nsdate_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsdate_accessibilityParameterizedAttributeNames( nsdate_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsdate_accessibilityAttributeValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsdate_accessibilityIndexForChildUIElementAttributeForParameter( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsdate_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsdate_accessibilityTemporaryChildren( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsdate_accessibilityPerformShowMenuOfChild( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsdate_accessibilityPresenterProcessIdentifier( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsdate_accessibilityShouldUseUniqueId( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsdate_accessibilitySupportsNotifications( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsdate_accessibilityShouldSendNotification( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsdate_accessibilitySupportsOverriddenAttributes( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsdate_accessibilityAllowsOverriddenAttributesWhenIgnored( nsdate_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsdate_accessibilitySetOverrideValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsdate_accessibilityEncodeOverriddenAttributes( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsdate_accessibilityDecodeOverriddenAttributes( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsdate_accessibilitySupportsCustomElementData( nsdate_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsdate_bind( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsdate_awakeFromNib( nsdate_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsdate_userInterfaceItemIdentifier( nsdate_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsdate_setUserInterfaceItemIdentifier( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsdate_unbind( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsdate_valueClassForBinding( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsdate_NS_observationForKeyPath( nsdate_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsdate_NS_observationForKeyPaths( nsdate_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsdate_optionDescriptionsForBinding( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsdate_exposedBindings( nsdate_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsdate_infoForBinding( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsdate_prepareForInterfaceBuilder( nsdate_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsdate_accessibilityAddTemporaryChild( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsdate_accessibilityRemoveTemporaryChild( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsdate_NSLifeguard_autorelease( nsdate_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsdate_accessibilitySetPresenterProcessIdentifier( nsdate_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsdate_NS_tiledLayerVisibleRect( nsdate_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsdate_NS_addTiledLayerDescendent( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsdate_NS_removeTiledLayerDescendent( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsdate_CAMLTypeSupportedForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsdate_CAMLTypeForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsdate_CA_validateValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsdate_encodeWithCAMLWriter( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsdate_CA_interpolateValues( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsdate_CAMLType( nsdate_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsdate_CA_archivingValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsdate_CA_roundToIntegerFromValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsdate_CA_addValue( nsdate_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsdate_CA_interpolateValue( nsdate_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsdate_CA_distanceToValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsdate_CA_prepareRenderValue( nsdate_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsdate_CA_copyRenderValue( nsdate_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsdate_supportsRBSXPCSecureCoding( nsdate_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsdate_RBSIsXPCObject( nsdate_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsdate_NSRepresentation( nsdate_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsdate_supportsBSXPCSecureCoding( nsdate_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsdate_bs_isPlistableType( nsdate_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsdate_bs_secureEncoded( nsdate_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsdate_bs_encoded( nsdate_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsdate_replacementObjectForCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsdate_awakeAfterUsingCoder( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsdate_implementsSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsdate_setObservationInfo( nsdate_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsdate_setValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsdate_willChangeValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsdate_didChangeValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsdate_dictionaryWithValuesForKeys( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsdate_valueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsdate_valueForUndefinedKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsdate_classForKeyedArchiver( nsdate_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsdate_replacementObjectForKeyedArchiver( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsdate_valueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsdate_addObserver( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsdate_objectSpecifier( nsdate_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsdate_replacementObjectForArchiver( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsdate_classForArchiver( nsdate_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsdate_attributeKeys( nsdate_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsdate_toOneRelationshipKeys( nsdate_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsdate_toManyRelationshipKeys( nsdate_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsdate_inverseForRelationshipKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsdate_classDescription( nsdate_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsdate_copyScriptingValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsdate_methodDescriptionForSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsdate_newScriptingObjectOfClass( nsdate_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsdate_handleQueryWithUnboundKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsdate_handleTakeValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsdate_storedValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsdate_takeStoredValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsdate_takeValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsdate_valuesForKeys( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsdate_takeValuesFromDictionary( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsdate_unableToSetNilForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsdate_keyValueBindingForKey( nsdate_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsdate_createKeyValueBindingForKey( nsdate_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsdate_mutableArrayValueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsdate_mutableOrderedSetValueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsdate_mutableSetValueForKeyPath( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsdate_removeObservation( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsdate_receiveObservedValue( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsdate_receiveObservedError( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsdate_finishObserving( nsdate_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsdate_setObservation( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsdate_observeValueForKeyPath( nsdate_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsdate_removeObserver( nsdate_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsdate_className( nsdate_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsdate_addChainedObservers( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsdate_addObserverBlock( nsdate_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsdate_addObservationTransformer( nsdate_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsdate_setNilValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsdate_mutableArrayValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsdate_mutableOrderedSetValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsdate_mutableSetValueForKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsdate_setValuesForKeysWithDictionary( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsdate_willChange( nsdate_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsdate_didChange( nsdate_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsdate_observationInfo( nsdate_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsdate_autoContentAccessingProxy( nsdate_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsdate_coerceValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsdate_setScriptingProperties( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsdate_scriptingValueForSpecifier( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsdate_scriptingProperties( nsdate_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsdate_coerceValueForScriptingProperties( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsdate_valueAtIndex( nsdate_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsdate_valueWithName( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsdate_valueWithUniqueID( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsdate_insertValue( nsdate_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsdate_replaceValueAtIndex( nsdate_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsdate_removeValueAtIndex( nsdate_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsdate_classForPortCoder( nsdate_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsdate_performSelector( nsdate_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsdate_classCode( nsdate_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsdate_isEqualTo( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsdate_isLessThanOrEqualTo( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsdate_isLessThan( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsdate_isGreaterThanOrEqualTo( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsdate_isGreaterThan( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsdate_isNotEqualTo( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsdate_doesContain( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsdate_isLike( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsdate_isCaseInsensitiveLike( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsdate_performSelectorOnMainThread( nsdate_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsdate_performSelectorInBackground( nsdate_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsdate_classDescriptionForDestinationKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsdate_entityName( nsdate_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsdate_ownsDestinationObjectsForRelationshipKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsdate_isToManyKey( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsdate_removeObject( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsdate_addObject( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsdate_validateTakeValue( nsdate_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsdate_allPropertyKeys( nsdate_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsdate_clearProperties( nsdate_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsdate_flushKeyBindings( nsdate_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsdate_takeStoredValuesFromDictionary( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsdate_isNSString__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsdate_isNSCFConstantString__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsdate_isNSNumber__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsdate_isNSArray__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsdate_isNSDictionary__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsdate_isNSSet__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsdate_isNSData__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsdate_isNSObject__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsdate_isNSOrderedSet__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsdate_isNSTimeZone__( nsdate_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsdate_isNSValue__( nsdate_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsdate_doesNotRecognizeSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsdate_methodSignatureForSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsdate_retain( nsdate_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsdate_retainCount( nsdate_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsdate_autorelease( nsdate_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsdate_copy( nsdate_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsdate_finalize( nsdate_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsdate_dealloc( nsdate_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsdate_class( nsdate_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsdate_self( nsdate_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsdate_isProxy( nsdate_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsdate_isKindOfClass( nsdate_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsdate_isMemberOfClass( nsdate_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsdate_conformsToProtocol( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsdate_respondsToSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsdate_zone( nsdate_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsdate_superclass( nsdate_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsdate_debugDescription( nsdate_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsdate_init( nsdate_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsdate_retainWeakReference( nsdate_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsdate_allowsWeakReference( nsdate_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsdate_isFault( nsdate_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsdate_forwardInvocation( nsdate_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsdate_forwardingTargetForSelector( nsdate_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsdate_mutableCopy( nsdate_t object );

// Signature from Objective-C Runtime: @ dateWithNaturalLanguageString:date:locale: @ : @ @ @
nsobject_t 			nsdate_dateWithNaturalLanguageString( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ dateForDaysSince1970: @ : i
nsobject_t 			nsdate_dateForDaysSince1970( int arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsdate_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c supportsSecureCoding @ :
char 				nsdate_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ dateWithTimeIntervalSinceReferenceDate: @ : d
nsobject_t 			nsdate_dateWithTimeIntervalSinceReferenceDate( double arg0 );

// Signature from Objective-C Runtime: @ distantFuture @ :
nsobject_t 			nsdate_distantFuture( );

// Signature from Objective-C Runtime: @ distantPast @ :
nsobject_t 			nsdate_distantPast( );

// Signature from Objective-C Runtime: @ now @ :
nsobject_t 			nsdate_now( );

// Signature from Objective-C Runtime: @ date @ :
nsobject_t 			nsdate_date( );

// Signature from Objective-C Runtime: @ dateWithTimeIntervalSinceNow: @ : d
nsobject_t 			nsdate_dateWithTimeIntervalSinceNow( double arg0 );

// Signature from Objective-C Runtime: @ dateWithTimeIntervalSince1970: @ : d
nsobject_t 			nsdate_dateWithTimeIntervalSince1970( double arg0 );

// Signature from Objective-C Runtime: @ dateWithTimeInterval:sinceDate: @ : d @
nsobject_t 			nsdate_dateWithTimeInterval( double arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ dateWithDate: @ : @
nsobject_t 			nsdate_dateWithDate( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dateWithString: @ : @
nsobject_t 			nsdate_dateWithString( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsdate_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsdate_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsdate_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsdate_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsdate_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsdate_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsdate_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsdate_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsdate_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsdate_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsdate_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsdate_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsdate_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsdate_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsdate_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsdate_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsdate_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsdate_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsdate_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsdate_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsdate_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsdate_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsdate_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsdate_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsdate_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsdate_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsdate_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsdate_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsdate_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsdate_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsdate_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsdate_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsdate_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsdate_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsdate_t 			nsdate_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsdate_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsdate_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsdate_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsdate_instancesRespondToSelector( nsselector_t arg0 );

#endif