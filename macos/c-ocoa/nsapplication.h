/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSAPPLICATION_HEADER
#define SHIMMER_C_OCOA_NSAPPLICATION_HEADER

typedef void*	nsapplication_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v run @ :
void 				nsapplication_run( nsapplication_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsapplication_dealloc( nsapplication_t object );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsapplication_conformsToProtocol( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsapplication_init( nsapplication_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsapplication_encodeWithCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsapplication_initWithCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ delegate @ :
nsobject_t 			nsapplication_delegate( nsapplication_t object );

// Signature from Objective-C Runtime: v setDelegate: @ : @
void 				nsapplication_setDelegate( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isHidden @ :
char 				nsapplication_isHidden( nsapplication_t object );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsapplication_setValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsapplication_valueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isActive @ :
char 				nsapplication_isActive( nsapplication_t object );

// Signature from Objective-C Runtime: @ menu @ :
nsobject_t 			nsapplication_menu( nsapplication_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsapplication_copyScriptingValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsapplication_newScriptingObjectOfClass( nsapplication_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsapplication_observeValueForKeyPath( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsapplication_valueAtIndex( nsapplication_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsapplication_valueWithName( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsapplication_valueWithUniqueID( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsapplication_insertValue( nsapplication_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsapplication_replaceValueAtIndex( nsapplication_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsapplication_removeValueAtIndex( nsapplication_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v disableAutomaticTermination @ :
void 				nsapplication_disableAutomaticTermination( nsapplication_t object );

// Signature from Objective-C Runtime: v enableAutomaticTermination @ :
void 				nsapplication_enableAutomaticTermination( nsapplication_t object );

// Signature from Objective-C Runtime: c isRunning @ :
char 				nsapplication_isRunning( nsapplication_t object );

// Signature from Objective-C Runtime: @ context @ :
nsobject_t 			nsapplication_context( nsapplication_t object );

// Signature from Objective-C Runtime: @ keyWindow @ :
nsobject_t 			nsapplication_keyWindow( nsapplication_t object );

// Signature from Objective-C Runtime: I contextID @ :
unsigned int 		nsapplication_contextID( nsapplication_t object );

// Signature from Objective-C Runtime: v pushRegistrationDidRegisterWithDeviceToken: @ : @
void 				nsapplication_pushRegistrationDidRegisterWithDeviceToken( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v pushRegistrationDidFailToRegister: @ : @
void 				nsapplication_pushRegistrationDidFailToRegister( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v pushRegistrationDidReceiveRemotePush: @ : @
void 				nsapplication_pushRegistrationDidReceiveRemotePush( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setWindowsNeedUpdate: @ : c
void 				nsapplication_setWindowsNeedUpdate( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ nextEventMatchingMask:untilDate:inMode:dequeue: @ : Q @ @ c
nsobject_t 			nsapplication_nextEventMatchingMask( nsapplication_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2, char arg3 );

// Signature from Objective-C Runtime: v postEvent:atStart: @ : @ c
void 				nsapplication_postEvent( nsapplication_t object, nsobject_t arg0, char arg1 );

// Signature from Objective-C Runtime: @ effectiveAppearance @ :
nsobject_t 			nsapplication_effectiveAppearance( nsapplication_t object );

// Signature from Objective-C Runtime: q userInterfaceLayoutDirection @ :
long long 			nsapplication_userInterfaceLayoutDirection( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeNames @ :
nsobject_t 			nsapplication_accessibilityAttributeNames( nsapplication_t object );

// Signature from Objective-C Runtime: v sendEvent: @ : @
void 				nsapplication_sendEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ windowWithWindowNumber: @ : q
nsobject_t 			nsapplication_windowWithWindowNumber( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ targetForAction:to:from: @ : : @ @
nsobject_t 			nsapplication_targetForAction( nsapplication_t object, nsselector_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c validateMenuItem: @ : @
char 				nsapplication_validateMenuItem( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c validateUserInterfaceItem: @ : @
char 				nsapplication_validateUserInterfaceItem( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ appearance @ :
nsobject_t 			nsapplication_appearance( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityParent @ :
nsobject_t 			nsapplication_accessibilityParent( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilitySetMayContainProtectedContent: @ : c
void 				nsapplication_accessibilitySetMayContainProtectedContent( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFocusedUIElement @ :
nsobject_t 			nsapplication_accessibilityFocusedUIElement( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityHitTest: @ : {CGPoint=dd}
nsobject_t 			nsapplication_accessibilityHitTest( nsapplication_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsapplication_accessibilityFrame( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsIgnored @ :
char 				nsapplication_accessibilityIsIgnored( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsapplication_accessibilityAttributeValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ mainMenu @ :
nsobject_t 			nsapplication_mainMenu( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityMayContainProtectedContent @ :
char 				nsapplication_accessibilityMayContainProtectedContent( nsapplication_t object );

// Signature from Objective-C Runtime: c canEnterFullScreenMode @ :
char 				nsapplication_canEnterFullScreenMode( nsapplication_t object );

// Signature from Objective-C Runtime: @ mainWindow @ :
nsobject_t 			nsapplication_mainWindow( nsapplication_t object );

// Signature from Objective-C Runtime: Q presentationOptions @ :
unsigned long long 	nsapplication_presentationOptions( nsapplication_t object );

// Signature from Objective-C Runtime: @ windows @ :
nsobject_t 			nsapplication_windows( nsapplication_t object );

// Signature from Objective-C Runtime: v enumerateWindowsWithOptions:usingBlock: @ : q @?
void 				nsapplication_enumerateWindowsWithOptions( nsapplication_t object, long long arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ windowsMenu @ :
nsobject_t 			nsapplication_windowsMenu( nsapplication_t object );

// Signature from Objective-C Runtime: v closeAll: @ : @
void 				nsapplication_closeAll( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ supplementalTargetForAction:sender: @ : : @
nsobject_t 			nsapplication_supplementalTargetForAction( nsapplication_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsapplication_accessibilityShouldUseUniqueId( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityRoleAttribute @ :
nsobject_t 			nsapplication_accessibilityRoleAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsRoleAttributeSettable @ :
char 				nsapplication_accessibilityIsRoleAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityRoleDescriptionAttribute @ :
nsobject_t 			nsapplication_accessibilityRoleDescriptionAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsRoleDescriptionAttributeSettable @ :
char 				nsapplication_accessibilityIsRoleDescriptionAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsAttributeSettable: @ : @
char 				nsapplication_accessibilityIsAttributeSettable( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilitySetValue:forAttribute: @ : @ @
void 				nsapplication_accessibilitySetValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityActionNames @ :
nsobject_t 			nsapplication_accessibilityActionNames( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityActionDescription: @ : @
nsobject_t 			nsapplication_accessibilityActionDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityPerformAction: @ : @
void 				nsapplication_accessibilityPerformAction( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityMainThreadIdleNotificationEnabled: @ : c
void 				nsapplication_setAccessibilityMainThreadIdleNotificationEnabled( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityEventProcessedNotificationEnabled: @ : c
void 				nsapplication_setAccessibilityEventProcessedNotificationEnabled( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityChildrenAttribute @ :
nsobject_t 			nsapplication_accessibilityChildrenAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: v exitFullScreenMode: @ : @
void 				nsapplication_exitFullScreenMode( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v disableCursorRects @ :
void 				nsapplication_disableCursorRects( nsapplication_t object );

// Signature from Objective-C Runtime: v enableCursorRects @ :
void 				nsapplication_enableCursorRects( nsapplication_t object );

// Signature from Objective-C Runtime: q runModalForWindow: @ : @
long long 			nsapplication_runModalForWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v endSheet:returnCode: @ : @ q
void 				nsapplication_endSheet( nsapplication_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: v stopModalWithCode: @ : q
void 				nsapplication_stopModalWithCode( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: v speakString: @ : @
void 				nsapplication_speakString( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ touchBar @ :
nsobject_t 			nsapplication_touchBar( nsapplication_t object );

// Signature from Objective-C Runtime: v terminate: @ : @
void 				nsapplication_terminate( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v hide: @ : @
void 				nsapplication_hide( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setIsActive: @ : c
void 				nsapplication_setIsActive( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v orderFrontCharacterPalette: @ : @
void 				nsapplication_orderFrontCharacterPalette( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setApplicationIconImage: @ : @
void 				nsapplication_setApplicationIconImage( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ validRequestorForSendType:returnType: @ : @ @
nsobject_t 			nsapplication_validRequestorForSendType( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: q activationPolicy @ :
long long 			nsapplication_activationPolicy( nsapplication_t object );

// Signature from Objective-C Runtime: v activateIgnoringOtherApps: @ : c
void 				nsapplication_activateIgnoringOtherApps( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v unhideWithoutActivation @ :
void 				nsapplication_unhideWithoutActivation( nsapplication_t object );

// Signature from Objective-C Runtime: Q currentSystemPresentationOptions @ :
unsigned long long 	nsapplication_currentSystemPresentationOptions( nsapplication_t object );

// Signature from Objective-C Runtime: v updateWindows @ :
void 				nsapplication_updateWindows( nsapplication_t object );

// Signature from Objective-C Runtime: @ makeWindowsPerform:inOrder: @ : : c
nsobject_t 			nsapplication_makeWindowsPerform( nsapplication_t object, nsselector_t arg0, char arg1 );

// Signature from Objective-C Runtime: @ modalWindow @ :
nsobject_t 			nsapplication_modalWindow( nsapplication_t object );

// Signature from Objective-C Runtime: v finishLaunching @ :
void 				nsapplication_finishLaunching( nsapplication_t object );

// Signature from Objective-C Runtime: q unhide @ :
long long 			nsapplication_unhide( nsapplication_t object );

// Signature from Objective-C Runtime: ^{_NSModalSession=@@^{_NSModalSession}icqQcccsq@@:^vq@@?@c} beginModalSessionForWindow: @ : @
_NSModalSession* 	nsapplication_beginModalSessionForWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v endModalSession: @ : ^{_NSModalSession=@@^{_NSModalSession}icqQcccsq@@:^vq@@?@c}
void 				nsapplication_endModalSession( nsapplication_t object, _NSModalSession* arg0 );

// Signature from Objective-C Runtime: q requestUserAttention: @ : Q
long long 			nsapplication_requestUserAttention( nsapplication_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v cancelUserAttentionRequest: @ : q
void 				nsapplication_cancelUserAttentionRequest( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: v replyToApplicationShouldTerminate: @ : c
void 				nsapplication_replyToApplicationShouldTerminate( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: c shouldRestoreStateOnNextLaunch @ :
char 				nsapplication_shouldRestoreStateOnNextLaunch( nsapplication_t object );

// Signature from Objective-C Runtime: v encodeRestorableStateWithCoder: @ : @
void 				nsapplication_encodeRestorableStateWithCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreStateWithCoder: @ : @
void 				nsapplication_restoreStateWithCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ currentEvent @ :
nsobject_t 			nsapplication_currentEvent( nsapplication_t object );

// Signature from Objective-C Runtime: v activeSpaceChanged: @ : @
void 				nsapplication_activeSpaceChanged( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v quickLookPreviewItems: @ : @
void 				nsapplication_quickLookPreviewItems( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dockTile @ :
nsobject_t 			nsapplication_dockTile( nsapplication_t object );

// Signature from Objective-C Runtime: v setMainMenu: @ : @
void 				nsapplication_setMainMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v stopSpeaking: @ : @
void 				nsapplication_stopSpeaking( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isSpeaking @ :
char 				nsapplication_isSpeaking( nsapplication_t object );

// Signature from Objective-C Runtime: v runPageLayout: @ : @
void 				nsapplication_runPageLayout( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v startDictation: @ : @
void 				nsapplication_startDictation( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v stopDictation: @ : @
void 				nsapplication_stopDictation( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v arrangeInFront: @ : @
void 				nsapplication_arrangeInFront( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v alternateArrangeInFront: @ : @
void 				nsapplication_alternateArrangeInFront( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v miniaturizeAll: @ : @
void 				nsapplication_miniaturizeAll( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v zoomAll: @ : @
void 				nsapplication_zoomAll( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unhideAllApplications: @ : @
void 				nsapplication_unhideAllApplications( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v hideOtherApplications: @ : @
void 				nsapplication_hideOtherApplications( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v toggleTouchBarCustomizationPalette: @ : @
void 				nsapplication_toggleTouchBarCustomizationPalette( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v toggleTouchBarControlStripCustomizationPalette: @ : @
void 				nsapplication_toggleTouchBarControlStripCustomizationPalette( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v orderFrontColorPanel: @ : @
void 				nsapplication_orderFrontColorPanel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v showGuessPanel: @ : @
void 				nsapplication_showGuessPanel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v doCommandBySelector: @ : :
void 				nsapplication_doCommandBySelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v enterFullScreenMode: @ : @
void 				nsapplication_enterFullScreenMode( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v markAppLaunchComplete @ :
void 				nsapplication_markAppLaunchComplete( nsapplication_t object );

// Signature from Objective-C Runtime: Q occlusionState @ :
unsigned long long 	nsapplication_occlusionState( nsapplication_t object );

// Signature from Objective-C Runtime: q openFile:ok: @ : @ ^q
long long 			nsapplication_openFile( nsapplication_t object, nsobject_t arg0, long long* arg1 );

// Signature from Objective-C Runtime: q openTempFile:ok: @ : @ ^q
long long 			nsapplication_openTempFile( nsapplication_t object, nsobject_t arg0, long long* arg1 );

// Signature from Objective-C Runtime: v replyToOpenOrPrint: @ : Q
void 				nsapplication_replyToOpenOrPrint( nsapplication_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v deactivate @ :
void 				nsapplication_deactivate( nsapplication_t object );

// Signature from Objective-C Runtime: v beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo: @ : @ @ @ : ^v
void 				nsapplication_beginSheet( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsselector_t arg3, void* arg4 );

// Signature from Objective-C Runtime: v stop: @ : @
void 				nsapplication_stop( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v stopModal @ :
void 				nsapplication_stopModal( nsapplication_t object );

// Signature from Objective-C Runtime: v abortModal @ :
void 				nsapplication_abortModal( nsapplication_t object );

// Signature from Objective-C Runtime: q runModalSession: @ : ^{_NSModalSession=@@^{_NSModalSession}icqQcccsq@@:^vq@@?@c}
long long 			nsapplication_runModalSession( nsapplication_t object, _NSModalSession* arg0 );

// Signature from Objective-C Runtime: @ delayWindowOrdering @ :
nsobject_t 			nsapplication_delayWindowOrdering( nsapplication_t object );

// Signature from Objective-C Runtime: v preventWindowOrdering @ :
void 				nsapplication_preventWindowOrdering( nsapplication_t object );

// Signature from Objective-C Runtime: v onFirstEvent @ :
void 				nsapplication_onFirstEvent( nsapplication_t object );

// Signature from Objective-C Runtime: v rightMouseDown: @ : @
void 				nsapplication_rightMouseDown( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v event:wouldActivateWindow: @ : @ @
void 				nsapplication_event( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v quickLookPreviewItemsAtWindowLocation: @ : {CGPoint=dd}
void 				nsapplication_quickLookPreviewItemsAtWindowLocation( nsapplication_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: @ frontWindow @ :
nsobject_t 			nsapplication_frontWindow( nsapplication_t object );

// Signature from Objective-C Runtime: @ applicationIconImage @ :
nsobject_t 			nsapplication_applicationIconImage( nsapplication_t object );

// Signature from Objective-C Runtime: c setActivationPolicy: @ : q
char 				nsapplication_setActivationPolicy( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: v setMenu: @ : @
void 				nsapplication_setMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setHelpMenu: @ : @
void 				nsapplication_setHelpMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ helpMenu @ :
nsobject_t 			nsapplication_helpMenu( nsapplication_t object );

// Signature from Objective-C Runtime: v setDockMenu: @ : @
void 				nsapplication_setDockMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v reportException: @ : @
void 				nsapplication_reportException( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v speechSynthesizer:didFinishSpeaking: @ : @ c
void 				nsapplication_speechSynthesizer( nsapplication_t object, nsobject_t arg0, char arg1 );

// Signature from Objective-C Runtime: c isFullKeyboardAccessEnabled @ :
char 				nsapplication_isFullKeyboardAccessEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: v setPresentationOptions: @ : Q
void 				nsapplication_setPresentationOptions( nsapplication_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setCanEnterFullScreenMode: @ : c
void 				nsapplication_setCanEnterFullScreenMode( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v abortAllToolTips @ :
void 				nsapplication_abortAllToolTips( nsapplication_t object );

// Signature from Objective-C Runtime: @ addMemoryPressureMonitorUsingHandler: @ : @?
nsobject_t 			nsapplication_addMemoryPressureMonitorUsingHandler( nsapplication_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v removeMemoryPressureMonitor: @ : @
void 				nsapplication_removeMemoryPressureMonitor( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addIdleMonitorUsingHandler: @ : @?
nsobject_t 			nsapplication_addIdleMonitorUsingHandler( nsapplication_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v removeIdleMonitor: @ : @
void 				nsapplication_removeIdleMonitor( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q memoryStatus @ :
long long 			nsapplication_memoryStatus( nsapplication_t object );

// Signature from Objective-C Runtime: c presentError: @ : @
char 				nsapplication_presentError( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ willPresentError: @ : @
nsobject_t 			nsapplication_willPresentError( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v registerForRemoteNotificationTypes: @ : Q
void 				nsapplication_registerForRemoteNotificationTypes( nsapplication_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v registerForRemoteNotifications @ :
void 				nsapplication_registerForRemoteNotifications( nsapplication_t object );

// Signature from Objective-C Runtime: v unregisterForRemoteNotifications @ :
void 				nsapplication_unregisterForRemoteNotifications( nsapplication_t object );

// Signature from Objective-C Runtime: c isRegisteredForRemoteNotifications @ :
char 				nsapplication_isRegisteredForRemoteNotifications( nsapplication_t object );

// Signature from Objective-C Runtime: Q enabledRemoteNotificationTypes @ :
unsigned long long 	nsapplication_enabledRemoteNotificationTypes( nsapplication_t object );

// Signature from Objective-C Runtime: c isRunningTest @ :
char 				nsapplication_isRunningTest( nsapplication_t object );

// Signature from Objective-C Runtime: c isRunningQuitTest @ :
char 				nsapplication_isRunningQuitTest( nsapplication_t object );

// Signature from Objective-C Runtime: c runTest:options: @ : @ @
char 				nsapplication_runTest( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v startedTest: @ : @
void 				nsapplication_startedTest( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishedTest: @ : @
void 				nsapplication_finishedTest( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v failedTest: @ : @
void 				nsapplication_failedTest( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v startedSubTest:forTest: @ : @ @
void 				nsapplication_startedSubTest( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v finishedSubTest:forTest: @ : @ @
void 				nsapplication_finishedSubTest( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v installCACommitCompletionBlock: @ : @?
void 				nsapplication_installCACommitCompletionBlock( nsapplication_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v performScrollTestOnScrollView:usingTestName:completionHandler: @ : @ @ @?
void 				nsapplication_performScrollTestOnScrollView( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v performResizeTestOnWindow:usingTestName:completionHandler: @ : @ @ @?
void 				nsapplication_performResizeTestOnWindow( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v performActivateDeactivateTestUsingTestName:completionHandler: @ : @ @?
void 				nsapplication_performActivateDeactivateTestUsingTestName( nsapplication_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: c isLaunchedForTesting @ :
char 				nsapplication_isLaunchedForTesting( nsapplication_t object );

// Signature from Objective-C Runtime: v disableRelaunchOnLogin @ :
void 				nsapplication_disableRelaunchOnLogin( nsapplication_t object );

// Signature from Objective-C Runtime: v enableRelaunchOnLogin @ :
void 				nsapplication_enableRelaunchOnLogin( nsapplication_t object );

// Signature from Objective-C Runtime: v importFromDevice: @ : @
void 				nsapplication_importFromDevice( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityExtrasMenuBarAttribute @ :
nsobject_t 			nsapplication_accessibilityExtrasMenuBarAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityMenuBarAttribute @ :
nsobject_t 			nsapplication_accessibilityMenuBarAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityWindowsAttribute @ :
nsobject_t 			nsapplication_accessibilityWindowsAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityFunctionRowTopLevelElementsAttribute @ :
nsobject_t 			nsapplication_accessibilityFunctionRowTopLevelElementsAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityFocusedWindowAttribute @ :
nsobject_t 			nsapplication_accessibilityFocusedWindowAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: v set_currentWordHighlightInfo: @ : @
void 				nsapplication_set_currentWordHighlightInfo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v set_currentSentenceHighlightInfo: @ : @
void 				nsapplication_set_currentSentenceHighlightInfo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityWorkaroundAddExtraWindow: @ : @
void 				nsapplication_accessibilityWorkaroundAddExtraWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityWorkaroundRemoveExtraWindow: @ : @
void 				nsapplication_accessibilityWorkaroundRemoveExtraWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitleAttribute @ :
nsobject_t 			nsapplication_accessibilityTitleAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsTitleAttributeSettable @ :
char 				nsapplication_accessibilityIsTitleAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsMenuBarAttributeSettable @ :
char 				nsapplication_accessibilityIsMenuBarAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsWindowsAttributeSettable @ :
char 				nsapplication_accessibilityIsWindowsAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenInNavigationOrderAttribute @ :
nsobject_t 			nsapplication_accessibilityChildrenInNavigationOrderAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsChildrenAttributeSettable @ :
char 				nsapplication_accessibilityIsChildrenAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityFrontmostAttribute @ :
nsobject_t 			nsapplication_accessibilityFrontmostAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsFrontmostAttributeSettable @ :
char 				nsapplication_accessibilityIsFrontmostAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilitySetFrontmostAttribute: @ : @
void 				nsapplication_accessibilitySetFrontmostAttribute( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHiddenAttribute @ :
nsobject_t 			nsapplication_accessibilityHiddenAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsHiddenAttributeSettable @ :
char 				nsapplication_accessibilityIsHiddenAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilitySetHiddenAttribute: @ : @
void 				nsapplication_accessibilitySetHiddenAttribute( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMainWindowAttribute @ :
nsobject_t 			nsapplication_accessibilityMainWindowAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsMainWindowAttributeSettable @ :
char 				nsapplication_accessibilityIsMainWindowAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsFocusedWindowAttributeSettable @ :
char 				nsapplication_accessibilityIsFocusedWindowAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityFocusedUIElementAttribute @ :
nsobject_t 			nsapplication_accessibilityFocusedUIElementAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsFocusedUIElementAttributeSettable @ :
char 				nsapplication_accessibilityIsFocusedUIElementAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityEnhancedUserInterfaceAttribute @ :
nsobject_t 			nsapplication_accessibilityEnhancedUserInterfaceAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityIsEnhancedUserInterfaceAttributeSettable @ :
char 				nsapplication_accessibilityIsEnhancedUserInterfaceAttributeSettable( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilitySetEnhancedUserInterfaceAttribute: @ : @
void 				nsapplication_accessibilitySetEnhancedUserInterfaceAttribute( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAuditIssuesAttribute @ :
nsobject_t 			nsapplication_accessibilityAuditIssuesAttribute( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMovingFromTable: @ : c
void 				nsapplication_setAccessibilityMovingFromTable( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMainThreadIdleNotificationSupported @ :
char 				nsapplication_isAccessibilityMainThreadIdleNotificationSupported( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilityMainThreadIdleNotificationEnabled @ :
char 				nsapplication_isAccessibilityMainThreadIdleNotificationEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilityEventProcessedNotificationSupported @ :
char 				nsapplication_isAccessibilityEventProcessedNotificationSupported( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilityEventProcessedNotificationEnabled @ :
char 				nsapplication_isAccessibilityEventProcessedNotificationEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilityMovingFromTable @ :
char 				nsapplication_isAccessibilityMovingFromTable( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilityFocusChangedToElement: @ : @
void 				nsapplication_accessibilityFocusChangedToElement( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ orderedDocuments @ :
nsobject_t 			nsapplication_orderedDocuments( nsapplication_t object );

// Signature from Objective-C Runtime: @ orderedWindows @ :
nsobject_t 			nsapplication_orderedWindows( nsapplication_t object );

// Signature from Objective-C Runtime: @ valueInOrderedWindowsWithUniqueID: @ : q
nsobject_t 			nsapplication_valueInOrderedWindowsWithUniqueID( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ handleOpenScriptCommand: @ : @
nsobject_t 			nsapplication_handleOpenScriptCommand( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handlePrintScriptCommand: @ : @
void 				nsapplication_handlePrintScriptCommand( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleQuitScriptCommand: @ : @
void 				nsapplication_handleQuitScriptCommand( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q runModalForCarbonWindow: @ : @
long long 			nsapplication_runModalForCarbonWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c sendAction:to:from: @ : : @ @
char 				nsapplication_sendAction( nsapplication_t object, nsselector_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v setAppearance: @ : @
void 				nsapplication_setAppearance( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c areCursorRectsEnabled @ :
char 				nsapplication_areCursorRectsEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: v addWindowsItem:title:filename: @ : @ @ c
void 				nsapplication_addWindowsItem( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, char arg2 );

// Signature from Objective-C Runtime: c restoreWindowWithIdentifier:state:completionHandler: @ : @ @ @?
char 				nsapplication_restoreWindowWithIdentifier( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_touchBarProviders @ :
nsobject_t 			nsapplication_NS_touchBarProviders( nsapplication_t object );

// Signature from Objective-C Runtime: @ NS_touchBarProvidersKeyPaths @ :
nsobject_t 			nsapplication_NS_touchBarProvidersKeyPaths( nsapplication_t object );

// Signature from Objective-C Runtime: v orderFrontPreferencesPanel: @ : @
void 				nsapplication_orderFrontPreferencesPanel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c shouldBeTreatedAsInkEvent: @ : @
char 				nsapplication_shouldBeTreatedAsInkEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v discardEventsMatchingMask:beforeEvent: @ : Q @
void 				nsapplication_discardEventsMatchingMask( nsapplication_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: c tryToPerform:with: @ : : @
char 				nsapplication_tryToPerform( nsapplication_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v orderFrontFontPanel: @ : @
void 				nsapplication_orderFrontFontPanel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v activateContextHelpMode: @ : @
void 				nsapplication_activateContextHelpMode( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v showHelp: @ : @
void 				nsapplication_showHelp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setServicesMenu: @ : @
void 				nsapplication_setServicesMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setWindowsMenu: @ : @
void 				nsapplication_setWindowsMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAppleMenu: @ : @
void 				nsapplication_setAppleMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q gestureEventMask @ :
unsigned long long 	nsapplication_gestureEventMask( nsapplication_t object );

// Signature from Objective-C Runtime: v setGestureEventMask: @ : Q
void 				nsapplication_setGestureEventMask( nsapplication_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ servicesProvider @ :
nsobject_t 			nsapplication_servicesProvider( nsapplication_t object );

// Signature from Objective-C Runtime: v setServicesProvider: @ : @
void 				nsapplication_setServicesProvider( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v registerServiceProvider:withName: @ : @ @
void 				nsapplication_registerServiceProvider( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v unregisterServiceProviderNamed: @ : @
void 				nsapplication_unregisterServiceProviderNamed( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v orderFrontStandardAboutPanelWithOptions: @ : @
void 				nsapplication_orderFrontStandardAboutPanelWithOptions( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v orderFrontStandardAboutPanel: @ : @
void 				nsapplication_orderFrontStandardAboutPanel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v registerServicesMenuSendTypes:returnTypes: @ : @ @
void 				nsapplication_registerServicesMenuSendTypes( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v updateWindowsItem: @ : @
void 				nsapplication_updateWindowsItem( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAutomaticCustomizeTouchBarMenuItemEnabled @ :
char 				nsapplication_isAutomaticCustomizeTouchBarMenuItemEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: v setAutomaticCustomizeTouchBarMenuItemEnabled: @ : c
void 				nsapplication_setAutomaticCustomizeTouchBarMenuItemEnabled( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v resetAutomaticCustomizeTouchBarMenuItemEnabled @ :
void 				nsapplication_resetAutomaticCustomizeTouchBarMenuItemEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: v removeWindowsItem: @ : @
void 				nsapplication_removeWindowsItem( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v changeWindowsItem:title:filename: @ : @ @ c
void 				nsapplication_changeWindowsItem( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, char arg2 );

// Signature from Objective-C Runtime: @ servicesMenu @ :
nsobject_t 			nsapplication_servicesMenu( nsapplication_t object );

// Signature from Objective-C Runtime: v registerUserInterfaceItemSearchHandler: @ : @
void 				nsapplication_registerUserInterfaceItemSearchHandler( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unregisterUserInterfaceItemSearchHandler: @ : @
void 				nsapplication_unregisterUserInterfaceItemSearchHandler( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c searchString:inUserInterfaceItemString:searchRange:foundRange: @ : @ @ {_NSRange=QQ} ^{_NSRange=QQ}
char 				nsapplication_searchString( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, _NSRange arg2, _NSRange* arg3 );

// Signature from Objective-C Runtime: c isDefaultHelpBookSearchEnabled @ :
char 				nsapplication_isDefaultHelpBookSearchEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: v setDefaultHelpBookSearchEnabled: @ : c
void 				nsapplication_setDefaultHelpBookSearchEnabled( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v extendStateRestoration @ :
void 				nsapplication_extendStateRestoration( nsapplication_t object );

// Signature from Objective-C Runtime: v completeStateRestoration @ :
void 				nsapplication_completeStateRestoration( nsapplication_t object );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsapplication_retain( nsapplication_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsapplication_retainCount( nsapplication_t object );

// Signature from Objective-C Runtime: v userActivityWasContinued: @ : @
void 				nsapplication_userActivityWasContinued( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c acceptsFirstResponder @ :
char 				nsapplication_acceptsFirstResponder( nsapplication_t object );

// Signature from Objective-C Runtime: v tabletPoint: @ : @
void 				nsapplication_tabletPoint( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v pressureChangeWithEvent: @ : @
void 				nsapplication_pressureChangeWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilitySubrole: @ : @
void 				nsapplication_setAccessibilitySubrole( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySubrole @ :
nsobject_t 			nsapplication_accessibilitySubrole( nsapplication_t object );

// Signature from Objective-C Runtime: v mouseDown: @ : @
void 				nsapplication_mouseDown( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDecrementButton @ :
nsobject_t 			nsapplication_accessibilityDecrementButton( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityIncrementButton @ :
nsobject_t 			nsapplication_accessibilityIncrementButton( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityChildren @ :
nsobject_t 			nsapplication_accessibilityChildren( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityRole @ :
nsobject_t 			nsapplication_accessibilityRole( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsapplication_accessibilityLabel( nsapplication_t object );

// Signature from Objective-C Runtime: q accessibilityIndex @ :
long long 			nsapplication_accessibilityIndex( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsapplication_accessibilityCustomActions( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenInNavigationOrder @ :
nsobject_t 			nsapplication_accessibilityChildrenInNavigationOrder( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilityElement @ :
char 				nsapplication_isAccessibilityElement( nsapplication_t object );

// Signature from Objective-C Runtime: c performKeyEquivalent: @ : @
char 				nsapplication_performKeyEquivalent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nextResponder @ :
nsobject_t 			nsapplication_nextResponder( nsapplication_t object );

// Signature from Objective-C Runtime: q accessibilityRowCount @ :
long long 			nsapplication_accessibilityRowCount( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityVisibleChildren @ :
nsobject_t 			nsapplication_accessibilityVisibleChildren( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityIndex: @ : q
void 				nsapplication_setAccessibilityIndex( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRoleDescription @ :
nsobject_t 			nsapplication_accessibilityRoleDescription( nsapplication_t object );

// Signature from Objective-C Runtime: q accessibilityColumnCount @ :
long long 			nsapplication_accessibilityColumnCount( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilitySelectedChildren @ :
nsobject_t 			nsapplication_accessibilitySelectedChildren( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedChildren: @ : @
void 				nsapplication_setAccessibilitySelectedChildren( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedCells @ :
nsobject_t 			nsapplication_accessibilitySelectedCells( nsapplication_t object );

// Signature from Objective-C Runtime: v mouseEntered: @ : @
void 				nsapplication_mouseEntered( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v mouseMoved: @ : @
void 				nsapplication_mouseMoved( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v mouseExited: @ : @
void 				nsapplication_mouseExited( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsapplication_setAccessibilityLabel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setTouchBar: @ : @
void 				nsapplication_setTouchBar( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v invalidateRestorableState @ :
void 				nsapplication_invalidateRestorableState( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilityFocused @ :
char 				nsapplication_isAccessibilityFocused( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsapplication_accessibilityIdentifier( nsapplication_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityLayoutPointForScreenPoint: @ : {CGPoint=dd}
CGPoint 			nsapplication_accessibilityLayoutPointForScreenPoint( nsapplication_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityLayoutSizeForScreenSize: @ : {CGSize=dd}
CGSize 				nsapplication_accessibilityLayoutSizeForScreenSize( nsapplication_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityScreenPointForLayoutPoint: @ : {CGPoint=dd}
CGPoint 			nsapplication_accessibilityScreenPointForLayoutPoint( nsapplication_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityScreenSizeForLayoutSize: @ : {CGSize=dd}
CGSize 				nsapplication_accessibilityScreenSizeForLayoutSize( nsapplication_t object, CGSize arg0 );

// Signature from Objective-C Runtime: @ accessibilityCellForColumn:row: @ : q q
nsobject_t 			nsapplication_accessibilityCellForColumn( nsapplication_t object, long long arg0, long long arg1 );

// Signature from Objective-C Runtime: @ accessibilityAttributedStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsapplication_accessibilityAttributedStringForRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForLine: @ : q
_NSRange 			nsapplication_accessibilityRangeForLine( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsapplication_accessibilityStringForRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForPosition: @ : {CGPoint=dd}
_NSRange 			nsapplication_accessibilityRangeForPosition( nsapplication_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForIndex: @ : q
_NSRange 			nsapplication_accessibilityRangeForIndex( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameForRange: @ : {_NSRange=QQ}
CGRect 				nsapplication_accessibilityFrameForRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilityRTFForRange: @ : {_NSRange=QQ}
nsobject_t 			nsapplication_accessibilityRTFForRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityStyleRangeForIndex: @ : q
_NSRange 			nsapplication_accessibilityStyleRangeForIndex( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityLineForIndex: @ : q
long long 			nsapplication_accessibilityLineForIndex( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: c accessibilityPerformCancel @ :
char 				nsapplication_accessibilityPerformCancel( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformConfirm @ :
char 				nsapplication_accessibilityPerformConfirm( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDecrement @ :
char 				nsapplication_accessibilityPerformDecrement( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDelete @ :
char 				nsapplication_accessibilityPerformDelete( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformIncrement @ :
char 				nsapplication_accessibilityPerformIncrement( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPick @ :
char 				nsapplication_accessibilityPerformPick( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPress @ :
char 				nsapplication_accessibilityPerformPress( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformRaise @ :
char 				nsapplication_accessibilityPerformRaise( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowAlternateUI @ :
char 				nsapplication_accessibilityPerformShowAlternateUI( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowDefaultUI @ :
char 				nsapplication_accessibilityPerformShowDefaultUI( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenu @ :
char 				nsapplication_accessibilityPerformShowMenu( nsapplication_t object );

// Signature from Objective-C Runtime: c isAccessibilitySelectorAllowed: @ : :
char 				nsapplication_isAccessibilitySelectorAllowed( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityElement: @ : c
void 				nsapplication_setAccessibilityElement( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsapplication_setAccessibilityFrame( nsapplication_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFocused: @ : c
void 				nsapplication_setAccessibilityFocused( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsapplication_accessibilityActivationPoint( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsapplication_setAccessibilityActivationPoint( nsapplication_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: @ accessibilityTopLevelUIElement @ :
nsobject_t 			nsapplication_accessibilityTopLevelUIElement( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityTopLevelUIElement: @ : @
void 				nsapplication_setAccessibilityTopLevelUIElement( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityURL @ :
nsobject_t 			nsapplication_accessibilityURL( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityURL: @ : @
void 				nsapplication_setAccessibilityURL( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsapplication_accessibilityValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsapplication_setAccessibilityValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValueDescription @ :
nsobject_t 			nsapplication_accessibilityValueDescription( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityValueDescription: @ : @
void 				nsapplication_setAccessibilityValueDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityVisibleChildren: @ : @
void 				nsapplication_setAccessibilityVisibleChildren( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitle @ :
nsobject_t 			nsapplication_accessibilityTitle( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitle: @ : @
void 				nsapplication_setAccessibilityTitle( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitleUIElement @ :
nsobject_t 			nsapplication_accessibilityTitleUIElement( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitleUIElement: @ : @
void 				nsapplication_setAccessibilityTitleUIElement( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContents @ :
nsobject_t 			nsapplication_accessibilityNextContents( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityNextContents: @ : @
void 				nsapplication_setAccessibilityNextContents( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityOrientation @ :
long long 			nsapplication_accessibilityOrientation( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrientation: @ : q
void 				nsapplication_setAccessibilityOrientation( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityOverflowButton @ :
nsobject_t 			nsapplication_accessibilityOverflowButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverflowButton: @ : @
void 				nsapplication_setAccessibilityOverflowButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityParent: @ : @
void 				nsapplication_setAccessibilityParent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPlaceholderValue @ :
nsobject_t 			nsapplication_accessibilityPlaceholderValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityPlaceholderValue: @ : @
void 				nsapplication_setAccessibilityPlaceholderValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContents @ :
nsobject_t 			nsapplication_accessibilityPreviousContents( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityPreviousContents: @ : @
void 				nsapplication_setAccessibilityPreviousContents( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRole: @ : @
void 				nsapplication_setAccessibilityRole( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRoleDescription: @ : @
void 				nsapplication_setAccessibilityRoleDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchButton @ :
nsobject_t 			nsapplication_accessibilitySearchButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchButton: @ : @
void 				nsapplication_setAccessibilitySearchButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchMenu @ :
nsobject_t 			nsapplication_accessibilitySearchMenu( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchMenu: @ : @
void 				nsapplication_setAccessibilitySearchMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilitySelected @ :
char 				nsapplication_isAccessibilitySelected( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelected: @ : c
void 				nsapplication_setAccessibilitySelected( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityServesAsTitleForUIElements @ :
nsobject_t 			nsapplication_accessibilityServesAsTitleForUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityServesAsTitleForUIElements: @ : @
void 				nsapplication_setAccessibilityServesAsTitleForUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityShownMenu @ :
nsobject_t 			nsapplication_accessibilityShownMenu( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityShownMenu: @ : @
void 				nsapplication_setAccessibilityShownMenu( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinValue @ :
nsobject_t 			nsapplication_accessibilityMinValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinValue: @ : @
void 				nsapplication_setAccessibilityMinValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMaxValue @ :
nsobject_t 			nsapplication_accessibilityMaxValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMaxValue: @ : @
void 				nsapplication_setAccessibilityMaxValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLinkedUIElements @ :
nsobject_t 			nsapplication_accessibilityLinkedUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityLinkedUIElements: @ : @
void 				nsapplication_setAccessibilityLinkedUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindow @ :
nsobject_t 			nsapplication_accessibilityWindow( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindow: @ : @
void 				nsapplication_setAccessibilityWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsapplication_setAccessibilityIdentifier( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHelp @ :
nsobject_t 			nsapplication_accessibilityHelp( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHelp: @ : @
void 				nsapplication_setAccessibilityHelp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityFilename @ :
nsobject_t 			nsapplication_accessibilityFilename( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityFilename: @ : @
void 				nsapplication_setAccessibilityFilename( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityExpanded @ :
char 				nsapplication_isAccessibilityExpanded( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityExpanded: @ : c
void 				nsapplication_setAccessibilityExpanded( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEdited @ :
char 				nsapplication_isAccessibilityEdited( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityEdited: @ : c
void 				nsapplication_setAccessibilityEdited( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnabled @ :
char 				nsapplication_isAccessibilityEnabled( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnabled: @ : c
void 				nsapplication_setAccessibilityEnabled( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildren: @ : @
void 				nsapplication_setAccessibilityChildren( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildrenInNavigationOrder: @ : @
void 				nsapplication_setAccessibilityChildrenInNavigationOrder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityClearButton @ :
nsobject_t 			nsapplication_accessibilityClearButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityClearButton: @ : @
void 				nsapplication_setAccessibilityClearButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCancelButton @ :
nsobject_t 			nsapplication_accessibilityCancelButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityCancelButton: @ : @
void 				nsapplication_setAccessibilityCancelButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityProtectedContent @ :
char 				nsapplication_isAccessibilityProtectedContent( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityProtectedContent: @ : c
void 				nsapplication_setAccessibilityProtectedContent( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityContents @ :
nsobject_t 			nsapplication_accessibilityContents( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityContents: @ : @
void 				nsapplication_setAccessibilityContents( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAlternateUIVisible @ :
char 				nsapplication_isAccessibilityAlternateUIVisible( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityAlternateUIVisible: @ : c
void 				nsapplication_setAccessibilityAlternateUIVisible( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedFocusElements @ :
nsobject_t 			nsapplication_accessibilitySharedFocusElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedFocusElements: @ : @
void 				nsapplication_setAccessibilitySharedFocusElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityRequired @ :
char 				nsapplication_isAccessibilityRequired( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityRequired: @ : c
void 				nsapplication_setAccessibilityRequired( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsapplication_accessibilityCustomRotors( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsapplication_setAccessibilityCustomRotors( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityApplicationFocusedUIElement @ :
nsobject_t 			nsapplication_accessibilityApplicationFocusedUIElement( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityApplicationFocusedUIElement: @ : @
void 				nsapplication_setAccessibilityApplicationFocusedUIElement( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMainWindow @ :
nsobject_t 			nsapplication_accessibilityMainWindow( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMainWindow: @ : @
void 				nsapplication_setAccessibilityMainWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityHidden @ :
char 				nsapplication_isAccessibilityHidden( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHidden: @ : c
void 				nsapplication_setAccessibilityHidden( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityFrontmost @ :
char 				nsapplication_isAccessibilityFrontmost( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrontmost: @ : c
void 				nsapplication_setAccessibilityFrontmost( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFocusedWindow @ :
nsobject_t 			nsapplication_accessibilityFocusedWindow( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityFocusedWindow: @ : @
void 				nsapplication_setAccessibilityFocusedWindow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindows @ :
nsobject_t 			nsapplication_accessibilityWindows( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindows: @ : @
void 				nsapplication_setAccessibilityWindows( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityExtrasMenuBar @ :
nsobject_t 			nsapplication_accessibilityExtrasMenuBar( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityExtrasMenuBar: @ : @
void 				nsapplication_setAccessibilityExtrasMenuBar( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMenuBar @ :
nsobject_t 			nsapplication_accessibilityMenuBar( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMenuBar: @ : @
void 				nsapplication_setAccessibilityMenuBar( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnTitles @ :
nsobject_t 			nsapplication_accessibilityColumnTitles( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnTitles: @ : @
void 				nsapplication_setAccessibilityColumnTitles( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityOrderedByRow @ :
char 				nsapplication_isAccessibilityOrderedByRow( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrderedByRow: @ : c
void 				nsapplication_setAccessibilityOrderedByRow( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityHorizontalUnits @ :
long long 			nsapplication_accessibilityHorizontalUnits( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnits: @ : q
void 				nsapplication_setAccessibilityHorizontalUnits( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityVerticalUnits @ :
long long 			nsapplication_accessibilityVerticalUnits( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnits: @ : q
void 				nsapplication_setAccessibilityVerticalUnits( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalUnitDescription @ :
nsobject_t 			nsapplication_accessibilityHorizontalUnitDescription( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnitDescription: @ : @
void 				nsapplication_setAccessibilityHorizontalUnitDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalUnitDescription @ :
nsobject_t 			nsapplication_accessibilityVerticalUnitDescription( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnitDescription: @ : @
void 				nsapplication_setAccessibilityVerticalUnitDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHandles @ :
nsobject_t 			nsapplication_accessibilityHandles( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHandles: @ : @
void 				nsapplication_setAccessibilityHandles( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWarningValue @ :
nsobject_t 			nsapplication_accessibilityWarningValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityWarningValue: @ : @
void 				nsapplication_setAccessibilityWarningValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCriticalValue @ :
nsobject_t 			nsapplication_accessibilityCriticalValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityCriticalValue: @ : @
void 				nsapplication_setAccessibilityCriticalValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityDisclosed @ :
char 				nsapplication_isAccessibilityDisclosed( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosed: @ : c
void 				nsapplication_setAccessibilityDisclosed( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedByRow @ :
nsobject_t 			nsapplication_accessibilityDisclosedByRow( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedByRow: @ : @
void 				nsapplication_setAccessibilityDisclosedByRow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedRows @ :
nsobject_t 			nsapplication_accessibilityDisclosedRows( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedRows: @ : @
void 				nsapplication_setAccessibilityDisclosedRows( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityDisclosureLevel @ :
long long 			nsapplication_accessibilityDisclosureLevel( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosureLevel: @ : q
void 				nsapplication_setAccessibilityDisclosureLevel( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerUIElements @ :
nsobject_t 			nsapplication_accessibilityMarkerUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerUIElements: @ : @
void 				nsapplication_setAccessibilityMarkerUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerValues @ :
nsobject_t 			nsapplication_accessibilityMarkerValues( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerValues: @ : @
void 				nsapplication_setAccessibilityMarkerValues( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerGroupUIElement @ :
nsobject_t 			nsapplication_accessibilityMarkerGroupUIElement( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerGroupUIElement: @ : @
void 				nsapplication_setAccessibilityMarkerGroupUIElement( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityUnits @ :
long long 			nsapplication_accessibilityUnits( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnits: @ : q
void 				nsapplication_setAccessibilityUnits( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUnitDescription @ :
nsobject_t 			nsapplication_accessibilityUnitDescription( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnitDescription: @ : @
void 				nsapplication_setAccessibilityUnitDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityRulerMarkerType @ :
long long 			nsapplication_accessibilityRulerMarkerType( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityRulerMarkerType: @ : q
void 				nsapplication_setAccessibilityRulerMarkerType( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerTypeDescription @ :
nsobject_t 			nsapplication_accessibilityMarkerTypeDescription( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerTypeDescription: @ : @
void 				nsapplication_setAccessibilityMarkerTypeDescription( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalScrollBar @ :
nsobject_t 			nsapplication_accessibilityHorizontalScrollBar( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalScrollBar: @ : @
void 				nsapplication_setAccessibilityHorizontalScrollBar( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalScrollBar @ :
nsobject_t 			nsapplication_accessibilityVerticalScrollBar( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalScrollBar: @ : @
void 				nsapplication_setAccessibilityVerticalScrollBar( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAllowedValues @ :
nsobject_t 			nsapplication_accessibilityAllowedValues( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityAllowedValues: @ : @
void 				nsapplication_setAccessibilityAllowedValues( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLabelUIElements @ :
nsobject_t 			nsapplication_accessibilityLabelUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelUIElements: @ : @
void 				nsapplication_setAccessibilityLabelUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: f accessibilityLabelValue @ :
float 				nsapplication_accessibilityLabelValue( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelValue: @ : f
void 				nsapplication_setAccessibilityLabelValue( nsapplication_t object, float arg0 );

// Signature from Objective-C Runtime: @ accessibilitySplitters @ :
nsobject_t 			nsapplication_accessibilitySplitters( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySplitters: @ : @
void 				nsapplication_setAccessibilitySplitters( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityDecrementButton: @ : @
void 				nsapplication_setAccessibilityDecrementButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIncrementButton: @ : @
void 				nsapplication_setAccessibilityIncrementButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTabs @ :
nsobject_t 			nsapplication_accessibilityTabs( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityTabs: @ : @
void 				nsapplication_setAccessibilityTabs( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeader @ :
nsobject_t 			nsapplication_accessibilityHeader( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeader: @ : @
void 				nsapplication_setAccessibilityHeader( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityColumnCount: @ : q
void 				nsapplication_setAccessibilityColumnCount( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRowCount: @ : q
void 				nsapplication_setAccessibilityRowCount( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumns @ :
nsobject_t 			nsapplication_accessibilityColumns( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumns: @ : @
void 				nsapplication_setAccessibilityColumns( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityRows @ :
nsobject_t 			nsapplication_accessibilityRows( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityRows: @ : @
void 				nsapplication_setAccessibilityRows( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleRows @ :
nsobject_t 			nsapplication_accessibilityVisibleRows( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleRows: @ : @
void 				nsapplication_setAccessibilityVisibleRows( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedRows @ :
nsobject_t 			nsapplication_accessibilitySelectedRows( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedRows: @ : @
void 				nsapplication_setAccessibilitySelectedRows( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleColumns @ :
nsobject_t 			nsapplication_accessibilityVisibleColumns( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleColumns: @ : @
void 				nsapplication_setAccessibilityVisibleColumns( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedColumns @ :
nsobject_t 			nsapplication_accessibilitySelectedColumns( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedColumns: @ : @
void 				nsapplication_setAccessibilitySelectedColumns( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilitySortDirection @ :
long long 			nsapplication_accessibilitySortDirection( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySortDirection: @ : q
void 				nsapplication_setAccessibilitySortDirection( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRowHeaderUIElements @ :
nsobject_t 			nsapplication_accessibilityRowHeaderUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowHeaderUIElements: @ : @
void 				nsapplication_setAccessibilityRowHeaderUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilitySelectedCells: @ : @
void 				nsapplication_setAccessibilitySelectedCells( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleCells @ :
nsobject_t 			nsapplication_accessibilityVisibleCells( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCells: @ : @
void 				nsapplication_setAccessibilityVisibleCells( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnHeaderUIElements @ :
nsobject_t 			nsapplication_accessibilityColumnHeaderUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnHeaderUIElements: @ : @
void 				nsapplication_setAccessibilityColumnHeaderUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRowIndexRange @ :
_NSRange 			nsapplication_accessibilityRowIndexRange( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowIndexRange: @ : {_NSRange=QQ}
void 				nsapplication_setAccessibilityRowIndexRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityColumnIndexRange @ :
_NSRange 			nsapplication_accessibilityColumnIndexRange( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnIndexRange: @ : {_NSRange=QQ}
void 				nsapplication_setAccessibilityColumnIndexRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityInsertionPointLineNumber @ :
long long 			nsapplication_accessibilityInsertionPointLineNumber( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityInsertionPointLineNumber: @ : q
void 				nsapplication_setAccessibilityInsertionPointLineNumber( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySharedCharacterRange @ :
_NSRange 			nsapplication_accessibilitySharedCharacterRange( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedCharacterRange: @ : {_NSRange=QQ}
void 				nsapplication_setAccessibilitySharedCharacterRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedTextUIElements @ :
nsobject_t 			nsapplication_accessibilitySharedTextUIElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedTextUIElements: @ : @
void 				nsapplication_setAccessibilitySharedTextUIElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityVisibleCharacterRange @ :
_NSRange 			nsapplication_accessibilityVisibleCharacterRange( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCharacterRange: @ : {_NSRange=QQ}
void 				nsapplication_setAccessibilityVisibleCharacterRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityNumberOfCharacters @ :
long long 			nsapplication_accessibilityNumberOfCharacters( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityNumberOfCharacters: @ : q
void 				nsapplication_setAccessibilityNumberOfCharacters( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedText @ :
nsobject_t 			nsapplication_accessibilitySelectedText( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedText: @ : @
void 				nsapplication_setAccessibilitySelectedText( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySelectedTextRange @ :
_NSRange 			nsapplication_accessibilitySelectedTextRange( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRange: @ : {_NSRange=QQ}
void 				nsapplication_setAccessibilitySelectedTextRange( nsapplication_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedTextRanges @ :
nsobject_t 			nsapplication_accessibilitySelectedTextRanges( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRanges: @ : @
void 				nsapplication_setAccessibilitySelectedTextRanges( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityToolbarButton @ :
nsobject_t 			nsapplication_accessibilityToolbarButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityToolbarButton: @ : @
void 				nsapplication_setAccessibilityToolbarButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityModal @ :
char 				nsapplication_isAccessibilityModal( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityModal: @ : c
void 				nsapplication_setAccessibilityModal( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityProxy @ :
nsobject_t 			nsapplication_accessibilityProxy( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityProxy: @ : @
void 				nsapplication_setAccessibilityProxy( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMain @ :
char 				nsapplication_isAccessibilityMain( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMain: @ : c
void 				nsapplication_setAccessibilityMain( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFullScreenButton @ :
nsobject_t 			nsapplication_accessibilityFullScreenButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityFullScreenButton: @ : @
void 				nsapplication_setAccessibilityFullScreenButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityGrowArea @ :
nsobject_t 			nsapplication_accessibilityGrowArea( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityGrowArea: @ : @
void 				nsapplication_setAccessibilityGrowArea( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDocument @ :
nsobject_t 			nsapplication_accessibilityDocument( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityDocument: @ : @
void 				nsapplication_setAccessibilityDocument( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDefaultButton @ :
nsobject_t 			nsapplication_accessibilityDefaultButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityDefaultButton: @ : @
void 				nsapplication_setAccessibilityDefaultButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCloseButton @ :
nsobject_t 			nsapplication_accessibilityCloseButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityCloseButton: @ : @
void 				nsapplication_setAccessibilityCloseButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityZoomButton @ :
nsobject_t 			nsapplication_accessibilityZoomButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityZoomButton: @ : @
void 				nsapplication_setAccessibilityZoomButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinimizeButton @ :
nsobject_t 			nsapplication_accessibilityMinimizeButton( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimizeButton: @ : @
void 				nsapplication_setAccessibilityMinimizeButton( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMinimized @ :
char 				nsapplication_isAccessibilityMinimized( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimized: @ : c
void 				nsapplication_setAccessibilityMinimized( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsapplication_setAccessibilityCustomActions( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v keyDown: @ : @
void 				nsapplication_keyDown( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c resignFirstResponder @ :
char 				nsapplication_resignFirstResponder( nsapplication_t object );

// Signature from Objective-C Runtime: c becomeFirstResponder @ :
char 				nsapplication_becomeFirstResponder( nsapplication_t object );

// Signature from Objective-C Runtime: v scrollWheel: @ : @
void 				nsapplication_scrollWheel( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNextResponder: @ : @
void 				nsapplication_setNextResponder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c performMnemonic: @ : @
char 				nsapplication_performMnemonic( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ undoManager @ :
nsobject_t 			nsapplication_undoManager( nsapplication_t object );

// Signature from Objective-C Runtime: c validateProposedFirstResponder:forEvent: @ : @ @
char 				nsapplication_validateProposedFirstResponder( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityResultsForSearchPredicate: @ : @
nsobject_t 			nsapplication_accessibilityResultsForSearchPredicate( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForColumnIndex: @ : q
nsobject_t 			nsapplication_accessibilityHeaderForColumnIndex( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForRowIndex: @ : q
nsobject_t 			nsapplication_accessibilityHeaderForRowIndex( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityAuditIssues @ :
nsobject_t 			nsapplication_accessibilityAuditIssues( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityAuditIssues: @ : @
void 				nsapplication_setAccessibilityAuditIssues( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAutoInteractable @ :
char 				nsapplication_isAccessibilityAutoInteractable( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityAutoInteractable: @ : c
void 				nsapplication_setAccessibilityAutoInteractable( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsapplication_accessibilityContainerType( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsapplication_setAccessibilityContainerType( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsapplication_accessibilityUserInputLabels( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsapplication_setAccessibilityUserInputLabels( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsapplication_accessibilityAttributedUserInputLabels( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsapplication_setAccessibilityAttributedUserInputLabels( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomChoosers @ :
nsobject_t 			nsapplication_accessibilityCustomChoosers( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomChoosers: @ : @
void 				nsapplication_setAccessibilityCustomChoosers( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnhancedUserInterface @ :
char 				nsapplication_isAccessibilityEnhancedUserInterface( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnhancedUserInterface: @ : c
void 				nsapplication_setAccessibilityEnhancedUserInterface( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFunctionRowTopLevelElements @ :
nsobject_t 			nsapplication_accessibilityFunctionRowTopLevelElements( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityFunctionRowTopLevelElements: @ : @
void 				nsapplication_setAccessibilityFunctionRowTopLevelElements( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMimicNativeView @ :
char 				nsapplication_isAccessibilityMimicNativeView( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityMimicNativeView: @ : c
void 				nsapplication_setAccessibilityMimicNativeView( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySections @ :
nsobject_t 			nsapplication_accessibilitySections( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilitySections: @ : @
void 				nsapplication_setAccessibilitySections( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderGroup @ :
nsobject_t 			nsapplication_accessibilityHeaderGroup( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeaderGroup: @ : @
void 				nsapplication_setAccessibilityHeaderGroup( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameInParentSpace @ :
CGRect 				nsapplication_accessibilityFrameInParentSpace( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrameInParentSpace: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsapplication_setAccessibilityFrameInParentSpace( nsapplication_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContentSibling @ :
nsobject_t 			nsapplication_accessibilityPreviousContentSibling( nsapplication_t object );

// Signature from Objective-C Runtime: v setPreviousContentSibling: @ : @
void 				nsapplication_setPreviousContentSibling( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContentSibling @ :
nsobject_t 			nsapplication_accessibilityNextContentSibling( nsapplication_t object );

// Signature from Objective-C Runtime: v setNextContentSibling: @ : @
void 				nsapplication_setNextContentSibling( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingAbove @ :
nsobject_t 			nsapplication_accessibilityContentSiblingAbove( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingAbove: @ : @
void 				nsapplication_setAccessibilityContentSiblingAbove( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingBelow @ :
nsobject_t 			nsapplication_accessibilityContentSiblingBelow( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingBelow: @ : @
void 				nsapplication_setAccessibilityContentSiblingBelow( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityOverridesAlwaysTakePrecedence @ :
char 				nsapplication_accessibilityOverridesAlwaysTakePrecedence( nsapplication_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverridesAlwaysTakePrecedence: @ : c
void 				nsapplication_setAccessibilityOverridesAlwaysTakePrecedence( nsapplication_t object, char arg0 );

// Signature from Objective-C Runtime: @ makeTouchBar @ :
nsobject_t 			nsapplication_makeTouchBar( nsapplication_t object );

// Signature from Objective-C Runtime: v mouseDragged: @ : @
void 				nsapplication_mouseDragged( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v mouseUp: @ : @
void 				nsapplication_mouseUp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v interpretKeyEvents: @ : @
void 				nsapplication_interpretKeyEvents( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v magnifyWithEvent: @ : @
void 				nsapplication_magnifyWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v translateWithEvent: @ : @
void 				nsapplication_translateWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesBeganWithEvent: @ : @
void 				nsapplication_touchesBeganWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesMovedWithEvent: @ : @
void 				nsapplication_touchesMovedWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesEndedWithEvent: @ : @
void 				nsapplication_touchesEndedWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesCancelledWithEvent: @ : @
void 				nsapplication_touchesCancelledWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v rightMouseUp: @ : @
void 				nsapplication_rightMouseUp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v keyUp: @ : @
void 				nsapplication_keyUp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v flagsChanged: @ : @
void 				nsapplication_flagsChanged( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v rightMouseDragged: @ : @
void 				nsapplication_rightMouseDragged( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v otherMouseDown: @ : @
void 				nsapplication_otherMouseDown( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v otherMouseDragged: @ : @
void 				nsapplication_otherMouseDragged( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v otherMouseUp: @ : @
void 				nsapplication_otherMouseUp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ userActivity @ :
nsobject_t 			nsapplication_userActivity( nsapplication_t object );

// Signature from Objective-C Runtime: v updateUserActivityState: @ : @
void 				nsapplication_updateUserActivityState( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreUserActivityState: @ : @
void 				nsapplication_restoreUserActivityState( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserActivity: @ : @
void 				nsapplication_setUserActivity( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v cursorUpdate: @ : @
void 				nsapplication_cursorUpdate( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v insertText: @ : @
void 				nsapplication_insertText( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v flushBufferedKeyEvents @ :
void 				nsapplication_flushBufferedKeyEvents( nsapplication_t object );

// Signature from Objective-C Runtime: v helpRequested: @ : @
void 				nsapplication_helpRequested( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ servicesRequestor @ :
nsobject_t 			nsapplication_servicesRequestor( nsapplication_t object );

// Signature from Objective-C Runtime: v quickAction:didFailWithRequestor:error: @ : @ @ @
void 				nsapplication_quickAction( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ additionalQuickActionItemSource @ :
nsobject_t 			nsapplication_additionalQuickActionItemSource( nsapplication_t object );

// Signature from Objective-C Runtime: @ colorFactory @ :
nsobject_t 			nsapplication_colorFactory( nsapplication_t object );

// Signature from Objective-C Runtime: Q interfaceStyle @ :
unsigned long long 	nsapplication_interfaceStyle( nsapplication_t object );

// Signature from Objective-C Runtime: v setInterfaceStyle: @ : Q
void 				nsapplication_setInterfaceStyle( nsapplication_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ dependencyInfo @ :
nsobject_t 			nsapplication_dependencyInfo( nsapplication_t object );

// Signature from Objective-C Runtime: v didBecomeActiveFirstResponder @ :
void 				nsapplication_didBecomeActiveFirstResponder( nsapplication_t object );

// Signature from Objective-C Runtime: v didResignActiveFirstResponder @ :
void 				nsapplication_didResignActiveFirstResponder( nsapplication_t object );

// Signature from Objective-C Runtime: v rotateWithEvent: @ : @
void 				nsapplication_rotateWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v noResponderFor: @ : :
void 				nsapplication_noResponderFor( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: c wantsForwardedScrollEventsForAxis: @ : q
char 				nsapplication_wantsForwardedScrollEventsForAxis( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: c wantsScrollEventsForSwipeTrackingOnAxis: @ : q
char 				nsapplication_wantsScrollEventsForSwipeTrackingOnAxis( nsapplication_t object, long long arg0 );

// Signature from Objective-C Runtime: v setDependencyInfo: @ : @
void 				nsapplication_setDependencyInfo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v invalidateRequestor @ :
void 				nsapplication_invalidateRequestor( nsapplication_t object );

// Signature from Objective-C Runtime: v tabletProximity: @ : @
void 				nsapplication_tabletProximity( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v smartMagnifyWithEvent: @ : @
void 				nsapplication_smartMagnifyWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v swipeWithEvent: @ : @
void 				nsapplication_swipeWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v beginGestureWithEvent: @ : @
void 				nsapplication_beginGestureWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v endGestureWithEvent: @ : @
void 				nsapplication_endGestureWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v quickLookWithEvent: @ : @
void 				nsapplication_quickLookWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v navigateWithEvent: @ : @
void 				nsapplication_navigateWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v changeModeWithEvent: @ : @
void 				nsapplication_changeModeWithEvent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c wantsForwardedScrollEvents @ :
char 				nsapplication_wantsForwardedScrollEvents( nsapplication_t object );

// Signature from Objective-C Runtime: v showContextHelp: @ : @
void 				nsapplication_showContextHelp( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ presentationWindowForError:originatedInWindow: @ : @ @
nsobject_t 			nsapplication_presentationWindowForError( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ ns_widgetType @ :
nsobject_t 			nsapplication_ns_widgetType( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsapplication_accessibilityOverriddenAttributes( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsapplication_accessibilityReplaceRange( nsapplication_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsapplication_accessibilityVisibleArea( nsapplication_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsapplication_accessibilityArrayAttributeCount( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsapplication_accessibilityIndexOfChild( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsapplication_accessibilityArrayAttributeValues( nsapplication_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsapplication_accessibilityParameterizedAttributeNames( nsapplication_t object );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsapplication_accessibilityIndexForChildUIElementAttributeForParameter( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsapplication_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsapplication_accessibilityTemporaryChildren( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsapplication_accessibilityPerformShowMenuOfChild( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsapplication_accessibilityPresenterProcessIdentifier( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsapplication_accessibilitySupportsNotifications( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsapplication_accessibilityShouldSendNotification( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsapplication_accessibilitySupportsOverriddenAttributes( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsapplication_accessibilityAllowsOverriddenAttributesWhenIgnored( nsapplication_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsapplication_accessibilitySetOverrideValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsapplication_accessibilityEncodeOverriddenAttributes( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsapplication_accessibilityDecodeOverriddenAttributes( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsapplication_accessibilitySupportsCustomElementData( nsapplication_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsapplication_bind( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsapplication_awakeFromNib( nsapplication_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsapplication_userInterfaceItemIdentifier( nsapplication_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsapplication_setUserInterfaceItemIdentifier( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsapplication_unbind( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsapplication_valueClassForBinding( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsapplication_NS_observationForKeyPath( nsapplication_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsapplication_NS_observationForKeyPaths( nsapplication_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsapplication_optionDescriptionsForBinding( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsapplication_exposedBindings( nsapplication_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsapplication_infoForBinding( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsapplication_prepareForInterfaceBuilder( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsapplication_accessibilityAddTemporaryChild( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsapplication_accessibilityRemoveTemporaryChild( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsapplication_NSLifeguard_autorelease( nsapplication_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsapplication_accessibilitySetPresenterProcessIdentifier( nsapplication_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsapplication_NS_tiledLayerVisibleRect( nsapplication_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsapplication_NS_addTiledLayerDescendent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsapplication_NS_removeTiledLayerDescendent( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsapplication_CAMLTypeSupportedForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsapplication_CAMLTypeForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsapplication_CA_validateValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsapplication_encodeWithCAMLWriter( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsapplication_CA_interpolateValues( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsapplication_CAMLType( nsapplication_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsapplication_CA_archivingValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsapplication_CA_roundToIntegerFromValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsapplication_CA_addValue( nsapplication_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsapplication_CA_interpolateValue( nsapplication_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsapplication_CA_distanceToValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsapplication_CA_prepareRenderValue( nsapplication_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsapplication_CA_copyRenderValue( nsapplication_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsapplication_supportsRBSXPCSecureCoding( nsapplication_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsapplication_RBSIsXPCObject( nsapplication_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsapplication_NSRepresentation( nsapplication_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsapplication_supportsBSXPCSecureCoding( nsapplication_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsapplication_bs_isPlistableType( nsapplication_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsapplication_bs_secureEncoded( nsapplication_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsapplication_bs_encoded( nsapplication_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsapplication_classForCoder( nsapplication_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsapplication_replacementObjectForCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsapplication_awakeAfterUsingCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsapplication_implementsSelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsapplication_setObservationInfo( nsapplication_t object, void* arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsapplication_replacementObjectForPortCoder( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsapplication_willChangeValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsapplication_didChangeValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsapplication_dictionaryWithValuesForKeys( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsapplication_valueForUndefinedKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsapplication_classForKeyedArchiver( nsapplication_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsapplication_replacementObjectForKeyedArchiver( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsapplication_valueForKeyPath( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsapplication_addObserver( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsapplication_objectSpecifier( nsapplication_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsapplication_replacementObjectForArchiver( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsapplication_classForArchiver( nsapplication_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsapplication_attributeKeys( nsapplication_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsapplication_toOneRelationshipKeys( nsapplication_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsapplication_toManyRelationshipKeys( nsapplication_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsapplication_inverseForRelationshipKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsapplication_classDescription( nsapplication_t object );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsapplication_methodDescriptionForSelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsapplication_handleQueryWithUnboundKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsapplication_handleTakeValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsapplication_storedValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsapplication_takeStoredValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsapplication_takeValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsapplication_valuesForKeys( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsapplication_takeValuesFromDictionary( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsapplication_unableToSetNilForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsapplication_keyValueBindingForKey( nsapplication_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsapplication_createKeyValueBindingForKey( nsapplication_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsapplication_mutableArrayValueForKeyPath( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsapplication_mutableOrderedSetValueForKeyPath( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsapplication_mutableSetValueForKeyPath( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsapplication_removeObservation( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsapplication_receiveObservedValue( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsapplication_receiveObservedError( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsapplication_finishObserving( nsapplication_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsapplication_setObservation( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsapplication_removeObserver( nsapplication_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsapplication_className( nsapplication_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsapplication_addChainedObservers( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsapplication_addObserverBlock( nsapplication_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsapplication_addObservationTransformer( nsapplication_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsapplication_setNilValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsapplication_mutableArrayValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsapplication_mutableOrderedSetValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsapplication_mutableSetValueForKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsapplication_setValuesForKeysWithDictionary( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsapplication_willChange( nsapplication_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsapplication_didChange( nsapplication_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsapplication_observationInfo( nsapplication_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsapplication_autoContentAccessingProxy( nsapplication_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsapplication_coerceValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsapplication_setScriptingProperties( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsapplication_scriptingValueForSpecifier( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsapplication_scriptingProperties( nsapplication_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsapplication_coerceValueForScriptingProperties( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsapplication_classForPortCoder( nsapplication_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsapplication_performSelector( nsapplication_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsapplication_classCode( nsapplication_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsapplication_isEqualTo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsapplication_isLessThanOrEqualTo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsapplication_isLessThan( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsapplication_isGreaterThanOrEqualTo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsapplication_isGreaterThan( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsapplication_isNotEqualTo( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsapplication_doesContain( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsapplication_isLike( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsapplication_isCaseInsensitiveLike( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsapplication_performSelectorOnMainThread( nsapplication_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsapplication_performSelectorInBackground( nsapplication_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsapplication_classDescriptionForDestinationKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsapplication_entityName( nsapplication_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsapplication_ownsDestinationObjectsForRelationshipKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsapplication_isToManyKey( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsapplication_removeObject( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsapplication_addObject( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsapplication_validateTakeValue( nsapplication_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsapplication_allPropertyKeys( nsapplication_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsapplication_clearProperties( nsapplication_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsapplication_flushKeyBindings( nsapplication_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsapplication_takeStoredValuesFromDictionary( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsapplication_isNSDate__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsapplication_isNSString__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsapplication_isNSCFConstantString__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsapplication_isNSNumber__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsapplication_isNSArray__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsapplication_isNSDictionary__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsapplication_isNSSet__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsapplication_isNSData__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsapplication_isNSObject__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsapplication_isNSOrderedSet__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsapplication_isNSTimeZone__( nsapplication_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsapplication_isNSValue__( nsapplication_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsapplication_description( nsapplication_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsapplication_doesNotRecognizeSelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsapplication_methodSignatureForSelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsapplication_autorelease( nsapplication_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsapplication_copy( nsapplication_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsapplication_finalize( nsapplication_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsapplication_isEqual( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsapplication_class( nsapplication_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsapplication_self( nsapplication_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsapplication_isProxy( nsapplication_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsapplication_isKindOfClass( nsapplication_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsapplication_isMemberOfClass( nsapplication_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsapplication_respondsToSelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsapplication_zone( nsapplication_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsapplication_hash( nsapplication_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsapplication_superclass( nsapplication_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsapplication_debugDescription( nsapplication_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsapplication_retainWeakReference( nsapplication_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsapplication_allowsWeakReference( nsapplication_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsapplication_isFault( nsapplication_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsapplication_forwardInvocation( nsapplication_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsapplication_forwardingTargetForSelector( nsapplication_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsapplication_mutableCopy( nsapplication_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsapplication_initialize( );

// Signature from Objective-C Runtime: v load @ :
void 				nsapplication_load( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsapplication_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ sharedApplication @ :
nsobject_t 			nsapplication_sharedApplication( );

// Signature from Objective-C Runtime: v detachDrawingThread:toTarget:withObject: @ : : @ @
void 				nsapplication_detachDrawingThread( nsselector_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffecting_effectiveAccentColor @ :
nsobject_t 			nsapplication_keyPathsForValuesAffecting_effectiveAccentColor( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOf_lockoutEngaged @ :
char 				nsapplication_automaticallyNotifiesObserversOf_lockoutEngaged( );

// Signature from Objective-C Runtime: c willRestoreState @ :
char 				nsapplication_willRestoreState( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfTouchBar @ :
char 				nsapplication_automaticallyNotifiesObserversOfTouchBar( );

// Signature from Objective-C Runtime: c automaticallyTracksDependenciesOnValueForKey: @ : @
char 				nsapplication_automaticallyTracksDependenciesOnValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ restorableStateKeyPaths @ :
nsobject_t 			nsapplication_restorableStateKeyPaths( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfServicesRequestor @ :
char 				nsapplication_automaticallyNotifiesObserversOfServicesRequestor( );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsapplication_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsapplication_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsapplication_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsapplication_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsapplication_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsapplication_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsapplication_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsapplication_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsapplication_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsapplication_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsapplication_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsapplication_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: q version @ :
long long 			nsapplication_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsapplication_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsapplication_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsapplication_setVersion( long long arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsapplication_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsapplication_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsapplication_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsapplication_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsapplication_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsapplication_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsapplication_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsapplication_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsapplication_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsapplication_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsapplication_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsapplication_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsapplication_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsapplication_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsapplication_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsapplication_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsapplication_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsapplication_t 	nsapplication_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsapplication_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsapplication_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsapplication_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsapplication_instancesRespondToSelector( nsselector_t arg0 );

#endif