/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSMENUITEM_HEADER
#define SHIMMER_C_OCOA_NSMENUITEM_HEADER

typedef void*	nsmenuitem_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsmenuitem_copyWithZone( nsmenuitem_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsmenuitem_dealloc( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsmenuitem_description( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsmenuitem_init( nsmenuitem_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsmenuitem_encodeWithCoder( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsmenuitem_initWithCoder( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isHidden @ :
char 				nsmenuitem_isHidden( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setHidden: @ : c
void 				nsmenuitem_setHidden( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: q state @ :
long long 			nsmenuitem_state( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setTarget: @ : @
void 				nsmenuitem_setTarget( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ target @ :
nsobject_t 			nsmenuitem_target( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setEnabled: @ : c
void 				nsmenuitem_setEnabled( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ identifier @ :
nsobject_t 			nsmenuitem_identifier( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isEnabled @ :
char 				nsmenuitem_isEnabled( nsmenuitem_t object );

// Signature from Objective-C Runtime: : action @ :
nsselector_t 		nsmenuitem_action( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setState: @ : q
void 				nsmenuitem_setState( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ keyEquivalent @ :
nsobject_t 			nsmenuitem_keyEquivalent( nsmenuitem_t object );

// Signature from Objective-C Runtime: Q keyEquivalentModifierMask @ :
unsigned long long 	nsmenuitem_keyEquivalentModifierMask( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ initWithTitle:action:keyEquivalent: @ : @ : @
nsobject_t 			nsmenuitem_initWithTitle( nsmenuitem_t object, nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v setAttributedTitle: @ : @
void 				nsmenuitem_setAttributedTitle( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setImage: @ : @
void 				nsmenuitem_setImage( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setTag: @ : q
void 				nsmenuitem_setTag( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: v setRepresentedObject: @ : @
void 				nsmenuitem_setRepresentedObject( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setSubmenu: @ : @
void 				nsmenuitem_setSubmenu( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAction: @ : :
void 				nsmenuitem_setAction( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setTitle: @ : @
void 				nsmenuitem_setTitle( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ view @ :
nsobject_t 			nsmenuitem_view( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ menu @ :
nsobject_t 			nsmenuitem_menu( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setIdentifier: @ : @
void 				nsmenuitem_setIdentifier( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ attributedTitle @ :
nsobject_t 			nsmenuitem_attributedTitle( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ title @ :
nsobject_t 			nsmenuitem_title( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setView: @ : @
void 				nsmenuitem_setView( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q tag @ :
long long 			nsmenuitem_tag( nsmenuitem_t object );

// Signature from Objective-C Runtime: c hasSubmenu @ :
char 				nsmenuitem_hasSubmenu( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ image @ :
nsobject_t 			nsmenuitem_image( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySubrole: @ : @
void 				nsmenuitem_setAccessibilitySubrole( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySubrole @ :
nsobject_t 			nsmenuitem_accessibilitySubrole( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityDecrementButton @ :
nsobject_t 			nsmenuitem_accessibilityDecrementButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityIncrementButton @ :
nsobject_t 			nsmenuitem_accessibilityIncrementButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityParent @ :
nsobject_t 			nsmenuitem_accessibilityParent( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityChildren @ :
nsobject_t 			nsmenuitem_accessibilityChildren( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityRole @ :
nsobject_t 			nsmenuitem_accessibilityRole( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsmenuitem_accessibilityLabel( nsmenuitem_t object );

// Signature from Objective-C Runtime: q accessibilityIndex @ :
long long 			nsmenuitem_accessibilityIndex( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isHighlighted @ :
char 				nsmenuitem_isHighlighted( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsmenuitem_accessibilityCustomActions( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isHiddenOrHasHiddenAncestor @ :
char 				nsmenuitem_isHiddenOrHasHiddenAncestor( nsmenuitem_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsmenuitem_accessibilityFrame( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityIsIgnored @ :
char 				nsmenuitem_accessibilityIsIgnored( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenInNavigationOrder @ :
nsobject_t 			nsmenuitem_accessibilityChildrenInNavigationOrder( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isAccessibilityElement @ :
char 				nsmenuitem_isAccessibilityElement( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ toolTip @ :
nsobject_t 			nsmenuitem_toolTip( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setToolTip: @ : @
void 				nsmenuitem_setToolTip( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ submenu @ :
nsobject_t 			nsmenuitem_submenu( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isAlternate @ :
char 				nsmenuitem_isAlternate( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isSeparatorItem @ :
char 				nsmenuitem_isSeparatorItem( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setKeyEquivalentModifierMask: @ : Q
void 				nsmenuitem_setKeyEquivalentModifierMask( nsmenuitem_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v setAlternate: @ : c
void 				nsmenuitem_setAlternate( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityRowCount @ :
long long 			nsmenuitem_accessibilityRowCount( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityVisibleChildren @ :
nsobject_t 			nsmenuitem_accessibilityVisibleChildren( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityIndex: @ : q
void 				nsmenuitem_setAccessibilityIndex( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRoleDescription @ :
nsobject_t 			nsmenuitem_accessibilityRoleDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: q accessibilityColumnCount @ :
long long 			nsmenuitem_accessibilityColumnCount( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilitySelectedChildren @ :
nsobject_t 			nsmenuitem_accessibilitySelectedChildren( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedChildren: @ : @
void 				nsmenuitem_setAccessibilitySelectedChildren( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedCells @ :
nsobject_t 			nsmenuitem_accessibilitySelectedCells( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ controlView @ :
nsobject_t 			nsmenuitem_controlView( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsmenuitem_accessibilitySupportsOverriddenAttributes( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsmenuitem_accessibilitySetOverrideValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setControlView: @ : @
void 				nsmenuitem_setControlView( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeyEquivalent: @ : @
void 				nsmenuitem_setKeyEquivalent( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsmenuitem_setAccessibilityLabel( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ font @ :
nsobject_t 			nsmenuitem_font( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setFont: @ : @
void 				nsmenuitem_setFont( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsmenuitem_userInterfaceItemIdentifier( nsmenuitem_t object );

// Signature from Objective-C Runtime: q indentationLevel @ :
long long 			nsmenuitem_indentationLevel( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isAccessibilityFocused @ :
char 				nsmenuitem_isAccessibilityFocused( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsmenuitem_accessibilityIdentifier( nsmenuitem_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityLayoutPointForScreenPoint: @ : {CGPoint=dd}
CGPoint 			nsmenuitem_accessibilityLayoutPointForScreenPoint( nsmenuitem_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityLayoutSizeForScreenSize: @ : {CGSize=dd}
CGSize 				nsmenuitem_accessibilityLayoutSizeForScreenSize( nsmenuitem_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityScreenPointForLayoutPoint: @ : {CGPoint=dd}
CGPoint 			nsmenuitem_accessibilityScreenPointForLayoutPoint( nsmenuitem_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityScreenSizeForLayoutSize: @ : {CGSize=dd}
CGSize 				nsmenuitem_accessibilityScreenSizeForLayoutSize( nsmenuitem_t object, CGSize arg0 );

// Signature from Objective-C Runtime: @ accessibilityCellForColumn:row: @ : q q
nsobject_t 			nsmenuitem_accessibilityCellForColumn( nsmenuitem_t object, long long arg0, long long arg1 );

// Signature from Objective-C Runtime: @ accessibilityAttributedStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsmenuitem_accessibilityAttributedStringForRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForLine: @ : q
_NSRange 			nsmenuitem_accessibilityRangeForLine( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsmenuitem_accessibilityStringForRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForPosition: @ : {CGPoint=dd}
_NSRange 			nsmenuitem_accessibilityRangeForPosition( nsmenuitem_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForIndex: @ : q
_NSRange 			nsmenuitem_accessibilityRangeForIndex( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameForRange: @ : {_NSRange=QQ}
CGRect 				nsmenuitem_accessibilityFrameForRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilityRTFForRange: @ : {_NSRange=QQ}
nsobject_t 			nsmenuitem_accessibilityRTFForRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityStyleRangeForIndex: @ : q
_NSRange 			nsmenuitem_accessibilityStyleRangeForIndex( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityLineForIndex: @ : q
long long 			nsmenuitem_accessibilityLineForIndex( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: c accessibilityPerformCancel @ :
char 				nsmenuitem_accessibilityPerformCancel( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformConfirm @ :
char 				nsmenuitem_accessibilityPerformConfirm( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDecrement @ :
char 				nsmenuitem_accessibilityPerformDecrement( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDelete @ :
char 				nsmenuitem_accessibilityPerformDelete( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformIncrement @ :
char 				nsmenuitem_accessibilityPerformIncrement( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPick @ :
char 				nsmenuitem_accessibilityPerformPick( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPress @ :
char 				nsmenuitem_accessibilityPerformPress( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformRaise @ :
char 				nsmenuitem_accessibilityPerformRaise( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowAlternateUI @ :
char 				nsmenuitem_accessibilityPerformShowAlternateUI( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowDefaultUI @ :
char 				nsmenuitem_accessibilityPerformShowDefaultUI( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenu @ :
char 				nsmenuitem_accessibilityPerformShowMenu( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isAccessibilitySelectorAllowed: @ : :
char 				nsmenuitem_isAccessibilitySelectorAllowed( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityElement: @ : c
void 				nsmenuitem_setAccessibilityElement( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsmenuitem_setAccessibilityFrame( nsmenuitem_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFocused: @ : c
void 				nsmenuitem_setAccessibilityFocused( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsmenuitem_accessibilityActivationPoint( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsmenuitem_setAccessibilityActivationPoint( nsmenuitem_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: @ accessibilityTopLevelUIElement @ :
nsobject_t 			nsmenuitem_accessibilityTopLevelUIElement( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityTopLevelUIElement: @ : @
void 				nsmenuitem_setAccessibilityTopLevelUIElement( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityURL @ :
nsobject_t 			nsmenuitem_accessibilityURL( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityURL: @ : @
void 				nsmenuitem_setAccessibilityURL( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsmenuitem_accessibilityValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsmenuitem_setAccessibilityValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValueDescription @ :
nsobject_t 			nsmenuitem_accessibilityValueDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityValueDescription: @ : @
void 				nsmenuitem_setAccessibilityValueDescription( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityVisibleChildren: @ : @
void 				nsmenuitem_setAccessibilityVisibleChildren( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitle @ :
nsobject_t 			nsmenuitem_accessibilityTitle( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitle: @ : @
void 				nsmenuitem_setAccessibilityTitle( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitleUIElement @ :
nsobject_t 			nsmenuitem_accessibilityTitleUIElement( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitleUIElement: @ : @
void 				nsmenuitem_setAccessibilityTitleUIElement( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContents @ :
nsobject_t 			nsmenuitem_accessibilityNextContents( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityNextContents: @ : @
void 				nsmenuitem_setAccessibilityNextContents( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityOrientation @ :
long long 			nsmenuitem_accessibilityOrientation( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrientation: @ : q
void 				nsmenuitem_setAccessibilityOrientation( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityOverflowButton @ :
nsobject_t 			nsmenuitem_accessibilityOverflowButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverflowButton: @ : @
void 				nsmenuitem_setAccessibilityOverflowButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityParent: @ : @
void 				nsmenuitem_setAccessibilityParent( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPlaceholderValue @ :
nsobject_t 			nsmenuitem_accessibilityPlaceholderValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityPlaceholderValue: @ : @
void 				nsmenuitem_setAccessibilityPlaceholderValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContents @ :
nsobject_t 			nsmenuitem_accessibilityPreviousContents( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityPreviousContents: @ : @
void 				nsmenuitem_setAccessibilityPreviousContents( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRole: @ : @
void 				nsmenuitem_setAccessibilityRole( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRoleDescription: @ : @
void 				nsmenuitem_setAccessibilityRoleDescription( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchButton @ :
nsobject_t 			nsmenuitem_accessibilitySearchButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchButton: @ : @
void 				nsmenuitem_setAccessibilitySearchButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchMenu @ :
nsobject_t 			nsmenuitem_accessibilitySearchMenu( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchMenu: @ : @
void 				nsmenuitem_setAccessibilitySearchMenu( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilitySelected @ :
char 				nsmenuitem_isAccessibilitySelected( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelected: @ : c
void 				nsmenuitem_setAccessibilitySelected( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityServesAsTitleForUIElements @ :
nsobject_t 			nsmenuitem_accessibilityServesAsTitleForUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityServesAsTitleForUIElements: @ : @
void 				nsmenuitem_setAccessibilityServesAsTitleForUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityShownMenu @ :
nsobject_t 			nsmenuitem_accessibilityShownMenu( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityShownMenu: @ : @
void 				nsmenuitem_setAccessibilityShownMenu( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinValue @ :
nsobject_t 			nsmenuitem_accessibilityMinValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinValue: @ : @
void 				nsmenuitem_setAccessibilityMinValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMaxValue @ :
nsobject_t 			nsmenuitem_accessibilityMaxValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMaxValue: @ : @
void 				nsmenuitem_setAccessibilityMaxValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLinkedUIElements @ :
nsobject_t 			nsmenuitem_accessibilityLinkedUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityLinkedUIElements: @ : @
void 				nsmenuitem_setAccessibilityLinkedUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindow @ :
nsobject_t 			nsmenuitem_accessibilityWindow( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindow: @ : @
void 				nsmenuitem_setAccessibilityWindow( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsmenuitem_setAccessibilityIdentifier( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHelp @ :
nsobject_t 			nsmenuitem_accessibilityHelp( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHelp: @ : @
void 				nsmenuitem_setAccessibilityHelp( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityFilename @ :
nsobject_t 			nsmenuitem_accessibilityFilename( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityFilename: @ : @
void 				nsmenuitem_setAccessibilityFilename( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityExpanded @ :
char 				nsmenuitem_isAccessibilityExpanded( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityExpanded: @ : c
void 				nsmenuitem_setAccessibilityExpanded( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEdited @ :
char 				nsmenuitem_isAccessibilityEdited( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityEdited: @ : c
void 				nsmenuitem_setAccessibilityEdited( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnabled @ :
char 				nsmenuitem_isAccessibilityEnabled( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnabled: @ : c
void 				nsmenuitem_setAccessibilityEnabled( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildren: @ : @
void 				nsmenuitem_setAccessibilityChildren( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildrenInNavigationOrder: @ : @
void 				nsmenuitem_setAccessibilityChildrenInNavigationOrder( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityClearButton @ :
nsobject_t 			nsmenuitem_accessibilityClearButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityClearButton: @ : @
void 				nsmenuitem_setAccessibilityClearButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCancelButton @ :
nsobject_t 			nsmenuitem_accessibilityCancelButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityCancelButton: @ : @
void 				nsmenuitem_setAccessibilityCancelButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityProtectedContent @ :
char 				nsmenuitem_isAccessibilityProtectedContent( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityProtectedContent: @ : c
void 				nsmenuitem_setAccessibilityProtectedContent( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityContents @ :
nsobject_t 			nsmenuitem_accessibilityContents( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityContents: @ : @
void 				nsmenuitem_setAccessibilityContents( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAlternateUIVisible @ :
char 				nsmenuitem_isAccessibilityAlternateUIVisible( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityAlternateUIVisible: @ : c
void 				nsmenuitem_setAccessibilityAlternateUIVisible( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedFocusElements @ :
nsobject_t 			nsmenuitem_accessibilitySharedFocusElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedFocusElements: @ : @
void 				nsmenuitem_setAccessibilitySharedFocusElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityRequired @ :
char 				nsmenuitem_isAccessibilityRequired( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityRequired: @ : c
void 				nsmenuitem_setAccessibilityRequired( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsmenuitem_accessibilityCustomRotors( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsmenuitem_setAccessibilityCustomRotors( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityApplicationFocusedUIElement @ :
nsobject_t 			nsmenuitem_accessibilityApplicationFocusedUIElement( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityApplicationFocusedUIElement: @ : @
void 				nsmenuitem_setAccessibilityApplicationFocusedUIElement( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMainWindow @ :
nsobject_t 			nsmenuitem_accessibilityMainWindow( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMainWindow: @ : @
void 				nsmenuitem_setAccessibilityMainWindow( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityHidden @ :
char 				nsmenuitem_isAccessibilityHidden( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHidden: @ : c
void 				nsmenuitem_setAccessibilityHidden( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityFrontmost @ :
char 				nsmenuitem_isAccessibilityFrontmost( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrontmost: @ : c
void 				nsmenuitem_setAccessibilityFrontmost( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFocusedWindow @ :
nsobject_t 			nsmenuitem_accessibilityFocusedWindow( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityFocusedWindow: @ : @
void 				nsmenuitem_setAccessibilityFocusedWindow( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindows @ :
nsobject_t 			nsmenuitem_accessibilityWindows( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindows: @ : @
void 				nsmenuitem_setAccessibilityWindows( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityExtrasMenuBar @ :
nsobject_t 			nsmenuitem_accessibilityExtrasMenuBar( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityExtrasMenuBar: @ : @
void 				nsmenuitem_setAccessibilityExtrasMenuBar( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMenuBar @ :
nsobject_t 			nsmenuitem_accessibilityMenuBar( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMenuBar: @ : @
void 				nsmenuitem_setAccessibilityMenuBar( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnTitles @ :
nsobject_t 			nsmenuitem_accessibilityColumnTitles( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnTitles: @ : @
void 				nsmenuitem_setAccessibilityColumnTitles( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityOrderedByRow @ :
char 				nsmenuitem_isAccessibilityOrderedByRow( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrderedByRow: @ : c
void 				nsmenuitem_setAccessibilityOrderedByRow( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityHorizontalUnits @ :
long long 			nsmenuitem_accessibilityHorizontalUnits( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnits: @ : q
void 				nsmenuitem_setAccessibilityHorizontalUnits( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityVerticalUnits @ :
long long 			nsmenuitem_accessibilityVerticalUnits( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnits: @ : q
void 				nsmenuitem_setAccessibilityVerticalUnits( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalUnitDescription @ :
nsobject_t 			nsmenuitem_accessibilityHorizontalUnitDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnitDescription: @ : @
void 				nsmenuitem_setAccessibilityHorizontalUnitDescription( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalUnitDescription @ :
nsobject_t 			nsmenuitem_accessibilityVerticalUnitDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnitDescription: @ : @
void 				nsmenuitem_setAccessibilityVerticalUnitDescription( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHandles @ :
nsobject_t 			nsmenuitem_accessibilityHandles( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHandles: @ : @
void 				nsmenuitem_setAccessibilityHandles( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWarningValue @ :
nsobject_t 			nsmenuitem_accessibilityWarningValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityWarningValue: @ : @
void 				nsmenuitem_setAccessibilityWarningValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCriticalValue @ :
nsobject_t 			nsmenuitem_accessibilityCriticalValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityCriticalValue: @ : @
void 				nsmenuitem_setAccessibilityCriticalValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityDisclosed @ :
char 				nsmenuitem_isAccessibilityDisclosed( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosed: @ : c
void 				nsmenuitem_setAccessibilityDisclosed( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedByRow @ :
nsobject_t 			nsmenuitem_accessibilityDisclosedByRow( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedByRow: @ : @
void 				nsmenuitem_setAccessibilityDisclosedByRow( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedRows @ :
nsobject_t 			nsmenuitem_accessibilityDisclosedRows( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedRows: @ : @
void 				nsmenuitem_setAccessibilityDisclosedRows( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityDisclosureLevel @ :
long long 			nsmenuitem_accessibilityDisclosureLevel( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosureLevel: @ : q
void 				nsmenuitem_setAccessibilityDisclosureLevel( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerUIElements @ :
nsobject_t 			nsmenuitem_accessibilityMarkerUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerUIElements: @ : @
void 				nsmenuitem_setAccessibilityMarkerUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerValues @ :
nsobject_t 			nsmenuitem_accessibilityMarkerValues( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerValues: @ : @
void 				nsmenuitem_setAccessibilityMarkerValues( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerGroupUIElement @ :
nsobject_t 			nsmenuitem_accessibilityMarkerGroupUIElement( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerGroupUIElement: @ : @
void 				nsmenuitem_setAccessibilityMarkerGroupUIElement( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityUnits @ :
long long 			nsmenuitem_accessibilityUnits( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnits: @ : q
void 				nsmenuitem_setAccessibilityUnits( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUnitDescription @ :
nsobject_t 			nsmenuitem_accessibilityUnitDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnitDescription: @ : @
void 				nsmenuitem_setAccessibilityUnitDescription( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityRulerMarkerType @ :
long long 			nsmenuitem_accessibilityRulerMarkerType( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityRulerMarkerType: @ : q
void 				nsmenuitem_setAccessibilityRulerMarkerType( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerTypeDescription @ :
nsobject_t 			nsmenuitem_accessibilityMarkerTypeDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerTypeDescription: @ : @
void 				nsmenuitem_setAccessibilityMarkerTypeDescription( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalScrollBar @ :
nsobject_t 			nsmenuitem_accessibilityHorizontalScrollBar( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalScrollBar: @ : @
void 				nsmenuitem_setAccessibilityHorizontalScrollBar( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalScrollBar @ :
nsobject_t 			nsmenuitem_accessibilityVerticalScrollBar( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalScrollBar: @ : @
void 				nsmenuitem_setAccessibilityVerticalScrollBar( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAllowedValues @ :
nsobject_t 			nsmenuitem_accessibilityAllowedValues( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityAllowedValues: @ : @
void 				nsmenuitem_setAccessibilityAllowedValues( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLabelUIElements @ :
nsobject_t 			nsmenuitem_accessibilityLabelUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelUIElements: @ : @
void 				nsmenuitem_setAccessibilityLabelUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: f accessibilityLabelValue @ :
float 				nsmenuitem_accessibilityLabelValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelValue: @ : f
void 				nsmenuitem_setAccessibilityLabelValue( nsmenuitem_t object, float arg0 );

// Signature from Objective-C Runtime: @ accessibilitySplitters @ :
nsobject_t 			nsmenuitem_accessibilitySplitters( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySplitters: @ : @
void 				nsmenuitem_setAccessibilitySplitters( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityDecrementButton: @ : @
void 				nsmenuitem_setAccessibilityDecrementButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIncrementButton: @ : @
void 				nsmenuitem_setAccessibilityIncrementButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTabs @ :
nsobject_t 			nsmenuitem_accessibilityTabs( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityTabs: @ : @
void 				nsmenuitem_setAccessibilityTabs( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeader @ :
nsobject_t 			nsmenuitem_accessibilityHeader( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeader: @ : @
void 				nsmenuitem_setAccessibilityHeader( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityColumnCount: @ : q
void 				nsmenuitem_setAccessibilityColumnCount( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRowCount: @ : q
void 				nsmenuitem_setAccessibilityRowCount( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumns @ :
nsobject_t 			nsmenuitem_accessibilityColumns( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumns: @ : @
void 				nsmenuitem_setAccessibilityColumns( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityRows @ :
nsobject_t 			nsmenuitem_accessibilityRows( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityRows: @ : @
void 				nsmenuitem_setAccessibilityRows( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleRows @ :
nsobject_t 			nsmenuitem_accessibilityVisibleRows( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleRows: @ : @
void 				nsmenuitem_setAccessibilityVisibleRows( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedRows @ :
nsobject_t 			nsmenuitem_accessibilitySelectedRows( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedRows: @ : @
void 				nsmenuitem_setAccessibilitySelectedRows( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleColumns @ :
nsobject_t 			nsmenuitem_accessibilityVisibleColumns( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleColumns: @ : @
void 				nsmenuitem_setAccessibilityVisibleColumns( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedColumns @ :
nsobject_t 			nsmenuitem_accessibilitySelectedColumns( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedColumns: @ : @
void 				nsmenuitem_setAccessibilitySelectedColumns( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilitySortDirection @ :
long long 			nsmenuitem_accessibilitySortDirection( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySortDirection: @ : q
void 				nsmenuitem_setAccessibilitySortDirection( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRowHeaderUIElements @ :
nsobject_t 			nsmenuitem_accessibilityRowHeaderUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowHeaderUIElements: @ : @
void 				nsmenuitem_setAccessibilityRowHeaderUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilitySelectedCells: @ : @
void 				nsmenuitem_setAccessibilitySelectedCells( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleCells @ :
nsobject_t 			nsmenuitem_accessibilityVisibleCells( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCells: @ : @
void 				nsmenuitem_setAccessibilityVisibleCells( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnHeaderUIElements @ :
nsobject_t 			nsmenuitem_accessibilityColumnHeaderUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnHeaderUIElements: @ : @
void 				nsmenuitem_setAccessibilityColumnHeaderUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRowIndexRange @ :
_NSRange 			nsmenuitem_accessibilityRowIndexRange( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowIndexRange: @ : {_NSRange=QQ}
void 				nsmenuitem_setAccessibilityRowIndexRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityColumnIndexRange @ :
_NSRange 			nsmenuitem_accessibilityColumnIndexRange( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnIndexRange: @ : {_NSRange=QQ}
void 				nsmenuitem_setAccessibilityColumnIndexRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityInsertionPointLineNumber @ :
long long 			nsmenuitem_accessibilityInsertionPointLineNumber( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityInsertionPointLineNumber: @ : q
void 				nsmenuitem_setAccessibilityInsertionPointLineNumber( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySharedCharacterRange @ :
_NSRange 			nsmenuitem_accessibilitySharedCharacterRange( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedCharacterRange: @ : {_NSRange=QQ}
void 				nsmenuitem_setAccessibilitySharedCharacterRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedTextUIElements @ :
nsobject_t 			nsmenuitem_accessibilitySharedTextUIElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedTextUIElements: @ : @
void 				nsmenuitem_setAccessibilitySharedTextUIElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityVisibleCharacterRange @ :
_NSRange 			nsmenuitem_accessibilityVisibleCharacterRange( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCharacterRange: @ : {_NSRange=QQ}
void 				nsmenuitem_setAccessibilityVisibleCharacterRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityNumberOfCharacters @ :
long long 			nsmenuitem_accessibilityNumberOfCharacters( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityNumberOfCharacters: @ : q
void 				nsmenuitem_setAccessibilityNumberOfCharacters( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedText @ :
nsobject_t 			nsmenuitem_accessibilitySelectedText( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedText: @ : @
void 				nsmenuitem_setAccessibilitySelectedText( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySelectedTextRange @ :
_NSRange 			nsmenuitem_accessibilitySelectedTextRange( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRange: @ : {_NSRange=QQ}
void 				nsmenuitem_setAccessibilitySelectedTextRange( nsmenuitem_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedTextRanges @ :
nsobject_t 			nsmenuitem_accessibilitySelectedTextRanges( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRanges: @ : @
void 				nsmenuitem_setAccessibilitySelectedTextRanges( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityToolbarButton @ :
nsobject_t 			nsmenuitem_accessibilityToolbarButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityToolbarButton: @ : @
void 				nsmenuitem_setAccessibilityToolbarButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityModal @ :
char 				nsmenuitem_isAccessibilityModal( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityModal: @ : c
void 				nsmenuitem_setAccessibilityModal( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityProxy @ :
nsobject_t 			nsmenuitem_accessibilityProxy( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityProxy: @ : @
void 				nsmenuitem_setAccessibilityProxy( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMain @ :
char 				nsmenuitem_isAccessibilityMain( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMain: @ : c
void 				nsmenuitem_setAccessibilityMain( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFullScreenButton @ :
nsobject_t 			nsmenuitem_accessibilityFullScreenButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityFullScreenButton: @ : @
void 				nsmenuitem_setAccessibilityFullScreenButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityGrowArea @ :
nsobject_t 			nsmenuitem_accessibilityGrowArea( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityGrowArea: @ : @
void 				nsmenuitem_setAccessibilityGrowArea( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDocument @ :
nsobject_t 			nsmenuitem_accessibilityDocument( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityDocument: @ : @
void 				nsmenuitem_setAccessibilityDocument( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDefaultButton @ :
nsobject_t 			nsmenuitem_accessibilityDefaultButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityDefaultButton: @ : @
void 				nsmenuitem_setAccessibilityDefaultButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCloseButton @ :
nsobject_t 			nsmenuitem_accessibilityCloseButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityCloseButton: @ : @
void 				nsmenuitem_setAccessibilityCloseButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityZoomButton @ :
nsobject_t 			nsmenuitem_accessibilityZoomButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityZoomButton: @ : @
void 				nsmenuitem_setAccessibilityZoomButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinimizeButton @ :
nsobject_t 			nsmenuitem_accessibilityMinimizeButton( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimizeButton: @ : @
void 				nsmenuitem_setAccessibilityMinimizeButton( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMinimized @ :
char 				nsmenuitem_isAccessibilityMinimized( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimized: @ : c
void 				nsmenuitem_setAccessibilityMinimized( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsmenuitem_setAccessibilityCustomActions( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setMenu: @ : @
void 				nsmenuitem_setMenu( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsmenuitem_setUserInterfaceItemIdentifier( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ representedObject @ :
nsobject_t 			nsmenuitem_representedObject( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setTitleWithMnemonic: @ : @
void 				nsmenuitem_setTitleWithMnemonic( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q backgroundStyle @ :
long long 			nsmenuitem_backgroundStyle( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ mnemonic @ :
nsobject_t 			nsmenuitem_mnemonic( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isDestructive @ :
char 				nsmenuitem_isDestructive( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setDestructive: @ : c
void 				nsmenuitem_setDestructive( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityResultsForSearchPredicate: @ : @
nsobject_t 			nsmenuitem_accessibilityResultsForSearchPredicate( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForColumnIndex: @ : q
nsobject_t 			nsmenuitem_accessibilityHeaderForColumnIndex( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForRowIndex: @ : q
nsobject_t 			nsmenuitem_accessibilityHeaderForRowIndex( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityAuditIssues @ :
nsobject_t 			nsmenuitem_accessibilityAuditIssues( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityAuditIssues: @ : @
void 				nsmenuitem_setAccessibilityAuditIssues( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAutoInteractable @ :
char 				nsmenuitem_isAccessibilityAutoInteractable( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityAutoInteractable: @ : c
void 				nsmenuitem_setAccessibilityAutoInteractable( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsmenuitem_accessibilityContainerType( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsmenuitem_setAccessibilityContainerType( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsmenuitem_accessibilityUserInputLabels( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsmenuitem_setAccessibilityUserInputLabels( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsmenuitem_accessibilityAttributedUserInputLabels( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsmenuitem_setAccessibilityAttributedUserInputLabels( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomChoosers @ :
nsobject_t 			nsmenuitem_accessibilityCustomChoosers( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomChoosers: @ : @
void 				nsmenuitem_setAccessibilityCustomChoosers( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnhancedUserInterface @ :
char 				nsmenuitem_isAccessibilityEnhancedUserInterface( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnhancedUserInterface: @ : c
void 				nsmenuitem_setAccessibilityEnhancedUserInterface( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFunctionRowTopLevelElements @ :
nsobject_t 			nsmenuitem_accessibilityFunctionRowTopLevelElements( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityFunctionRowTopLevelElements: @ : @
void 				nsmenuitem_setAccessibilityFunctionRowTopLevelElements( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMimicNativeView @ :
char 				nsmenuitem_isAccessibilityMimicNativeView( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityMimicNativeView: @ : c
void 				nsmenuitem_setAccessibilityMimicNativeView( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySections @ :
nsobject_t 			nsmenuitem_accessibilitySections( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilitySections: @ : @
void 				nsmenuitem_setAccessibilitySections( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderGroup @ :
nsobject_t 			nsmenuitem_accessibilityHeaderGroup( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeaderGroup: @ : @
void 				nsmenuitem_setAccessibilityHeaderGroup( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameInParentSpace @ :
CGRect 				nsmenuitem_accessibilityFrameInParentSpace( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrameInParentSpace: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsmenuitem_setAccessibilityFrameInParentSpace( nsmenuitem_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContentSibling @ :
nsobject_t 			nsmenuitem_accessibilityPreviousContentSibling( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setPreviousContentSibling: @ : @
void 				nsmenuitem_setPreviousContentSibling( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContentSibling @ :
nsobject_t 			nsmenuitem_accessibilityNextContentSibling( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setNextContentSibling: @ : @
void 				nsmenuitem_setNextContentSibling( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingAbove @ :
nsobject_t 			nsmenuitem_accessibilityContentSiblingAbove( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingAbove: @ : @
void 				nsmenuitem_setAccessibilityContentSiblingAbove( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingBelow @ :
nsobject_t 			nsmenuitem_accessibilityContentSiblingBelow( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingBelow: @ : @
void 				nsmenuitem_setAccessibilityContentSiblingBelow( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityOverridesAlwaysTakePrecedence @ :
char 				nsmenuitem_accessibilityOverridesAlwaysTakePrecedence( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverridesAlwaysTakePrecedence: @ : c
void 				nsmenuitem_setAccessibilityOverridesAlwaysTakePrecedence( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: @ onStateImage @ :
nsobject_t 			nsmenuitem_onStateImage( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ offStateImage @ :
nsobject_t 			nsmenuitem_offStateImage( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ mixedStateImage @ :
nsobject_t 			nsmenuitem_mixedStateImage( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ copyNormalizedTitle: @ : @
nsobject_t 			nsmenuitem_copyNormalizedTitle( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ userKeyEquivalent @ :
nsobject_t 			nsmenuitem_userKeyEquivalent( nsmenuitem_t object );

// Signature from Objective-C Runtime: Q userKeyEquivalentModifierMask @ :
unsigned long long 	nsmenuitem_userKeyEquivalentModifierMask( nsmenuitem_t object );

// Signature from Objective-C Runtime: q keyEquivalentSharingMode @ :
long long 			nsmenuitem_keyEquivalentSharingMode( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ parentItem @ :
nsobject_t 			nsmenuitem_parentItem( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setAllowsKeyEquivalentWhenHidden: @ : c
void 				nsmenuitem_setAllowsKeyEquivalentWhenHidden( nsmenuitem_t object, char arg0 );

// Signature from Objective-C Runtime: c allowsKeyEquivalentWhenHidden @ :
char 				nsmenuitem_allowsKeyEquivalentWhenHidden( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setKeyEquivalentSharingMode: @ : q
void 				nsmenuitem_setKeyEquivalentSharingMode( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: v setMnemonicLocation: @ : Q
void 				nsmenuitem_setMnemonicLocation( nsmenuitem_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: Q mnemonicLocation @ :
unsigned long long 	nsmenuitem_mnemonicLocation( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setOnStateImage: @ : @
void 				nsmenuitem_setOnStateImage( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setOffStateImage: @ : @
void 				nsmenuitem_setOffStateImage( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setMixedStateImage: @ : @
void 				nsmenuitem_setMixedStateImage( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setIndentationLevel: @ : q
void 				nsmenuitem_setIndentationLevel( nsmenuitem_t object, long long arg0 );

// Signature from Objective-C Runtime: v recognizerWillBeginAnimation: @ : @
void 				nsmenuitem_recognizerWillBeginAnimation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v recognizerDidUpdateAnimation: @ : @
void 				nsmenuitem_recognizerDidUpdateAnimation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v recognizerDidCancelAnimation: @ : @
void 				nsmenuitem_recognizerDidCancelAnimation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v recognizerDidCompleteAnimation: @ : @
void 				nsmenuitem_recognizerDidCompleteAnimation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v recognizerDidDismissAnimation: @ : @
void 				nsmenuitem_recognizerDidDismissAnimation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v invokeActionBlock: @ : @
void 				nsmenuitem_invokeActionBlock( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setActionBlock: @ : @?
void 				nsmenuitem_setActionBlock( nsmenuitem_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsmenuitem_accessibilityOverriddenAttributes( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsmenuitem_accessibilityReplaceRange( nsmenuitem_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsmenuitem_accessibilityVisibleArea( nsmenuitem_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsmenuitem_accessibilityArrayAttributeCount( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsmenuitem_accessibilityIndexOfChild( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsmenuitem_accessibilityArrayAttributeValues( nsmenuitem_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsmenuitem_accessibilityParameterizedAttributeNames( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsmenuitem_accessibilityAttributeValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsmenuitem_accessibilityIndexForChildUIElementAttributeForParameter( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsmenuitem_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsmenuitem_accessibilityTemporaryChildren( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsmenuitem_accessibilityPerformShowMenuOfChild( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsmenuitem_accessibilityPresenterProcessIdentifier( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsmenuitem_accessibilityShouldUseUniqueId( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsmenuitem_accessibilitySupportsNotifications( nsmenuitem_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsmenuitem_accessibilityShouldSendNotification( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsmenuitem_accessibilityAllowsOverriddenAttributesWhenIgnored( nsmenuitem_t object );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsmenuitem_accessibilityEncodeOverriddenAttributes( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsmenuitem_accessibilityDecodeOverriddenAttributes( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsmenuitem_accessibilitySupportsCustomElementData( nsmenuitem_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsmenuitem_bind( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsmenuitem_awakeFromNib( nsmenuitem_t object );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsmenuitem_unbind( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsmenuitem_valueClassForBinding( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsmenuitem_NS_observationForKeyPath( nsmenuitem_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsmenuitem_NS_observationForKeyPaths( nsmenuitem_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsmenuitem_optionDescriptionsForBinding( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsmenuitem_exposedBindings( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsmenuitem_infoForBinding( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsmenuitem_prepareForInterfaceBuilder( nsmenuitem_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsmenuitem_accessibilityAddTemporaryChild( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsmenuitem_accessibilityRemoveTemporaryChild( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsmenuitem_NSLifeguard_autorelease( nsmenuitem_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsmenuitem_accessibilitySetPresenterProcessIdentifier( nsmenuitem_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsmenuitem_NS_tiledLayerVisibleRect( nsmenuitem_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsmenuitem_NS_addTiledLayerDescendent( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsmenuitem_NS_removeTiledLayerDescendent( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsmenuitem_CAMLTypeSupportedForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsmenuitem_CAMLTypeForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsmenuitem_CA_validateValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsmenuitem_encodeWithCAMLWriter( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsmenuitem_CA_interpolateValues( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsmenuitem_CAMLType( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsmenuitem_CA_archivingValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsmenuitem_CA_roundToIntegerFromValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsmenuitem_CA_addValue( nsmenuitem_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsmenuitem_CA_interpolateValue( nsmenuitem_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsmenuitem_CA_distanceToValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsmenuitem_CA_prepareRenderValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsmenuitem_CA_copyRenderValue( nsmenuitem_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsmenuitem_supportsRBSXPCSecureCoding( nsmenuitem_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsmenuitem_RBSIsXPCObject( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsmenuitem_NSRepresentation( nsmenuitem_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsmenuitem_supportsBSXPCSecureCoding( nsmenuitem_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsmenuitem_bs_isPlistableType( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsmenuitem_bs_secureEncoded( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsmenuitem_bs_encoded( nsmenuitem_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsmenuitem_classForCoder( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsmenuitem_replacementObjectForCoder( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsmenuitem_awakeAfterUsingCoder( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsmenuitem_implementsSelector( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsmenuitem_setObservationInfo( nsmenuitem_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsmenuitem_setValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsmenuitem_replacementObjectForPortCoder( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsmenuitem_willChangeValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsmenuitem_didChangeValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsmenuitem_dictionaryWithValuesForKeys( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsmenuitem_valueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsmenuitem_valueForUndefinedKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsmenuitem_classForKeyedArchiver( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsmenuitem_replacementObjectForKeyedArchiver( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsmenuitem_valueForKeyPath( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsmenuitem_addObserver( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsmenuitem_objectSpecifier( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsmenuitem_replacementObjectForArchiver( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsmenuitem_classForArchiver( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsmenuitem_attributeKeys( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsmenuitem_toOneRelationshipKeys( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsmenuitem_toManyRelationshipKeys( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsmenuitem_inverseForRelationshipKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsmenuitem_classDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsmenuitem_copyScriptingValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsmenuitem_methodDescriptionForSelector( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsmenuitem_newScriptingObjectOfClass( nsmenuitem_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsmenuitem_handleQueryWithUnboundKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsmenuitem_handleTakeValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsmenuitem_storedValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsmenuitem_takeStoredValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsmenuitem_takeValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsmenuitem_valuesForKeys( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsmenuitem_takeValuesFromDictionary( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsmenuitem_unableToSetNilForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsmenuitem_keyValueBindingForKey( nsmenuitem_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsmenuitem_createKeyValueBindingForKey( nsmenuitem_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsmenuitem_mutableArrayValueForKeyPath( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsmenuitem_mutableOrderedSetValueForKeyPath( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsmenuitem_mutableSetValueForKeyPath( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsmenuitem_removeObservation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsmenuitem_receiveObservedValue( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsmenuitem_receiveObservedError( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsmenuitem_finishObserving( nsmenuitem_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsmenuitem_setObservation( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsmenuitem_observeValueForKeyPath( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsmenuitem_removeObserver( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsmenuitem_className( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsmenuitem_addChainedObservers( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsmenuitem_addObserverBlock( nsmenuitem_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsmenuitem_addObservationTransformer( nsmenuitem_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsmenuitem_setNilValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsmenuitem_mutableArrayValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsmenuitem_mutableOrderedSetValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsmenuitem_mutableSetValueForKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsmenuitem_setValuesForKeysWithDictionary( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsmenuitem_willChange( nsmenuitem_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsmenuitem_didChange( nsmenuitem_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsmenuitem_observationInfo( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsmenuitem_autoContentAccessingProxy( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsmenuitem_coerceValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsmenuitem_setScriptingProperties( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsmenuitem_scriptingValueForSpecifier( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsmenuitem_scriptingProperties( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsmenuitem_coerceValueForScriptingProperties( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsmenuitem_valueAtIndex( nsmenuitem_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsmenuitem_valueWithName( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsmenuitem_valueWithUniqueID( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsmenuitem_insertValue( nsmenuitem_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsmenuitem_replaceValueAtIndex( nsmenuitem_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsmenuitem_removeValueAtIndex( nsmenuitem_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsmenuitem_classForPortCoder( nsmenuitem_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsmenuitem_performSelector( nsmenuitem_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsmenuitem_classCode( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsmenuitem_isEqualTo( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsmenuitem_isLessThanOrEqualTo( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsmenuitem_isLessThan( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsmenuitem_isGreaterThanOrEqualTo( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsmenuitem_isGreaterThan( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsmenuitem_isNotEqualTo( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsmenuitem_doesContain( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsmenuitem_isLike( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsmenuitem_isCaseInsensitiveLike( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsmenuitem_performSelectorOnMainThread( nsmenuitem_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsmenuitem_performSelectorInBackground( nsmenuitem_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsmenuitem_classDescriptionForDestinationKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsmenuitem_entityName( nsmenuitem_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsmenuitem_ownsDestinationObjectsForRelationshipKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsmenuitem_isToManyKey( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsmenuitem_removeObject( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsmenuitem_addObject( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsmenuitem_validateTakeValue( nsmenuitem_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsmenuitem_allPropertyKeys( nsmenuitem_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsmenuitem_clearProperties( nsmenuitem_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsmenuitem_flushKeyBindings( nsmenuitem_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsmenuitem_takeStoredValuesFromDictionary( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsmenuitem_isNSDate__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsmenuitem_isNSString__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsmenuitem_isNSCFConstantString__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsmenuitem_isNSNumber__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsmenuitem_isNSArray__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsmenuitem_isNSDictionary__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsmenuitem_isNSSet__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsmenuitem_isNSData__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsmenuitem_isNSObject__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsmenuitem_isNSOrderedSet__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsmenuitem_isNSTimeZone__( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsmenuitem_isNSValue__( nsmenuitem_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsmenuitem_doesNotRecognizeSelector( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsmenuitem_methodSignatureForSelector( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsmenuitem_retain( nsmenuitem_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsmenuitem_retainCount( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsmenuitem_autorelease( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsmenuitem_copy( nsmenuitem_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsmenuitem_finalize( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsmenuitem_isEqual( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsmenuitem_class( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsmenuitem_self( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsmenuitem_isProxy( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsmenuitem_isKindOfClass( nsmenuitem_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsmenuitem_isMemberOfClass( nsmenuitem_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsmenuitem_conformsToProtocol( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsmenuitem_respondsToSelector( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsmenuitem_zone( nsmenuitem_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsmenuitem_hash( nsmenuitem_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsmenuitem_superclass( nsmenuitem_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsmenuitem_debugDescription( nsmenuitem_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsmenuitem_retainWeakReference( nsmenuitem_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsmenuitem_allowsWeakReference( nsmenuitem_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsmenuitem_isFault( nsmenuitem_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsmenuitem_forwardInvocation( nsmenuitem_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsmenuitem_forwardingTargetForSelector( nsmenuitem_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsmenuitem_mutableCopy( nsmenuitem_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsmenuitem_initialize( );

// Signature from Objective-C Runtime: @ separatorItem @ :
nsobject_t 			nsmenuitem_separatorItem( );

// Signature from Objective-C Runtime: @ standardImportFromDeviceMenuItem @ :
nsobject_t 			nsmenuitem_standardImportFromDeviceMenuItem( );

// Signature from Objective-C Runtime: c usesUserKeyEquivalents @ :
char 				nsmenuitem_usesUserKeyEquivalents( );

// Signature from Objective-C Runtime: @ standardShareMenuItemForItems: @ : @
nsobject_t 			nsmenuitem_standardShareMenuItemForItems( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUsesUserKeyEquivalents: @ : c
void 				nsmenuitem_setUsesUserKeyEquivalents( char arg0 );

// Signature from Objective-C Runtime: @ standardCopyMenuItem @ :
nsobject_t 			nsmenuitem_standardCopyMenuItem( );

// Signature from Objective-C Runtime: @ standardPasteMenuItem @ :
nsobject_t 			nsmenuitem_standardPasteMenuItem( );

// Signature from Objective-C Runtime: @ standardDeleteMenuItem @ :
nsobject_t 			nsmenuitem_standardDeleteMenuItem( );

// Signature from Objective-C Runtime: @ standardShareMenuItemWithItems: @ : @
nsobject_t 			nsmenuitem_standardShareMenuItemWithItems( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ standardQuickLookMenuItem @ :
nsobject_t 			nsmenuitem_standardQuickLookMenuItem( );

// Signature from Objective-C Runtime: @ currentAppLanguage @ :
nsobject_t 			nsmenuitem_currentAppLanguage( );

// Signature from Objective-C Runtime: @ readKeyboardShortcutLocalizationEquivalentsForInputLanguageID: @ : @
nsobject_t 			nsmenuitem_readKeyboardShortcutLocalizationEquivalentsForInputLanguageID( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ filterKeyboardShortcutLocalizationEquivalentsIn:forBundleID: @ : @ @
nsobject_t 			nsmenuitem_filterKeyboardShortcutLocalizationEquivalentsIn( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ findLocalizationForKeyboardShortcut:withModifiers:inApplicableOverrides: @ : @ Q @
nsobject_t 			nsmenuitem_findLocalizationForKeyboardShortcut( nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c shouldMenuItemBeUpdatedDueToNotification: @ : @
char 				nsmenuitem_shouldMenuItemBeUpdatedDueToNotification( nsobject_t arg0 );

// Signature from Objective-C Runtime: v updateKeyboardAwareShortcutsForMenu:ofCurrentSource:withLanguageID: @ : @ ^{__TISInputSource=} @
void 				nsmenuitem_updateKeyboardAwareShortcutsForMenu( nsobject_t arg0, __TISInputSource* arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ folderNameForKeyboardAdjustmentFileUsingInputSource: @ : ^{__TISInputSource=}
nsobject_t 			nsmenuitem_folderNameForKeyboardAdjustmentFileUsingInputSource( __TISInputSource* arg0 );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsmenuitem_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsmenuitem_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsmenuitem_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsmenuitem_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsmenuitem_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsmenuitem_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsmenuitem_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsmenuitem_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsmenuitem_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsmenuitem_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsmenuitem_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsmenuitem_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsmenuitem_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsmenuitem_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsmenuitem_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsmenuitem_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsmenuitem_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsmenuitem_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsmenuitem_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsmenuitem_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsmenuitem_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsmenuitem_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsmenuitem_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsmenuitem_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsmenuitem_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsmenuitem_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsmenuitem_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsmenuitem_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsmenuitem_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsmenuitem_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsmenuitem_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsmenuitem_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsmenuitem_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsmenuitem_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsmenuitem_t 		nsmenuitem_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsmenuitem_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsmenuitem_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsmenuitem_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsmenuitem_instancesRespondToSelector( nsselector_t arg0 );

#endif