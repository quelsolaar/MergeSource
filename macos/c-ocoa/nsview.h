/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSVIEW_HEADER
#define SHIMMER_C_OCOA_NSVIEW_HEADER

typedef void*	nsview_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsview_dealloc( nsview_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsview_init( nsview_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsview_encodeWithCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsview_initWithCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isHidden @ :
char 				nsview_isHidden( nsview_t object );

// Signature from Objective-C Runtime: v setHidden: @ : c
void 				nsview_setHidden( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ identifier @ :
nsobject_t 			nsview_identifier( nsview_t object );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsview_didChangeValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForReuse @ :
void 				nsview_prepareForReuse( nsview_t object );

// Signature from Objective-C Runtime: @ menu @ :
nsobject_t 			nsview_menu( nsview_t object );

// Signature from Objective-C Runtime: @ window @ :
nsobject_t 			nsview_window( nsview_t object );

// Signature from Objective-C Runtime: v setIdentifier: @ : @
void 				nsview_setIdentifier( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v layout @ :
void 				nsview_layout( nsview_t object );

// Signature from Objective-C Runtime: v setValue:forKeyPath: @ : @ @
void 				nsview_setValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: q tag @ :
long long 			nsview_tag( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} frame @ :
CGRect 				nsview_frame( nsview_t object );

// Signature from Objective-C Runtime: @ nextEventMatchingMask:untilDate:inMode:dequeue: @ : Q @ @ c
nsobject_t 			nsview_nextEventMatchingMask( nsview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2, char arg3 );

// Signature from Objective-C Runtime: v resetCursorRects @ :
void 				nsview_resetCursorRects( nsview_t object );

// Signature from Objective-C Runtime: v setNeedsDisplay: @ : c
void 				nsview_setNeedsDisplay( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v invalidateIntrinsicContentSize @ :
void 				nsview_invalidateIntrinsicContentSize( nsview_t object );

// Signature from Objective-C Runtime: @ layer @ :
nsobject_t 			nsview_layer( nsview_t object );

// Signature from Objective-C Runtime: v setBackgroundColor: @ : @
void 				nsview_setBackgroundColor( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ effectiveAppearance @ :
nsobject_t 			nsview_effectiveAppearance( nsview_t object );

// Signature from Objective-C Runtime: v setCompositingFilter: @ : @
void 				nsview_setCompositingFilter( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} bounds @ :
CGRect 				nsview_bounds( nsview_t object );

// Signature from Objective-C Runtime: v setFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setFrame( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPoint:toView: @ : {CGPoint=dd} @
CGPoint 			nsview_convertPoint( nsview_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: q userInterfaceLayoutDirection @ :
long long 			nsview_userInterfaceLayoutDirection( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect @ :
CGRect 				nsview_visibleRect( nsview_t object );

// Signature from Objective-C Runtime: c isFlipped @ :
char 				nsview_isFlipped( nsview_t object );

// Signature from Objective-C Runtime: v addCursorRect:cursor: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_addCursorRect( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: c allowsVibrancy @ :
char 				nsview_allowsVibrancy( nsview_t object );

// Signature from Objective-C Runtime: c isOpaque @ :
char 				nsview_isOpaque( nsview_t object );

// Signature from Objective-C Runtime: c wantsUpdateLayer @ :
char 				nsview_wantsUpdateLayer( nsview_t object );

// Signature from Objective-C Runtime: v updateLayer @ :
void 				nsview_updateLayer( nsview_t object );

// Signature from Objective-C Runtime: v enableGeometryInWindowDidChangeNotification @ :
void 				nsview_enableGeometryInWindowDidChangeNotification( nsview_t object );

// Signature from Objective-C Runtime: v disableGeometryInWindowDidChangeNotification @ :
void 				nsview_disableGeometryInWindowDidChangeNotification( nsview_t object );

// Signature from Objective-C Runtime: v setNeedsLayout: @ : c
void 				nsview_setNeedsLayout( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ superview @ :
nsobject_t 			nsview_superview( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRect:toView: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
CGRect 				nsview_convertRect( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setFrameSize: @ : {CGSize=dd}
void 				nsview_setFrameSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: Q autoresizingMask @ :
unsigned long long 	nsview_autoresizingMask( nsview_t object );

// Signature from Objective-C Runtime: v setAutoresizingMask: @ : Q
void 				nsview_setAutoresizingMask( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} convertSize:toView: @ : {CGSize=dd} @
CGSize 				nsview_convertSize( nsview_t object, CGSize arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setFrameOrigin: @ : {CGPoint=dd}
void 				nsview_setFrameOrigin( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v updateConstraints @ :
void 				nsview_updateConstraints( nsview_t object );

// Signature from Objective-C Runtime: c translatesAutoresizingMaskIntoConstraints @ :
char 				nsview_translatesAutoresizingMaskIntoConstraints( nsview_t object );

// Signature from Objective-C Runtime: v addConstraint: @ : @
void 				nsview_addConstraint( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeFromSuperview @ :
void 				nsview_removeFromSuperview( nsview_t object );

// Signature from Objective-C Runtime: v setPostsFrameChangedNotifications: @ : c
void 				nsview_setPostsFrameChangedNotifications( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v addSubview: @ : @
void 				nsview_addSubview( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			nsview_initWithFrame( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: c wantsDefaultClipping @ :
char 				nsview_wantsDefaultClipping( nsview_t object );

// Signature from Objective-C Runtime: c clipsToBounds @ :
char 				nsview_clipsToBounds( nsview_t object );

// Signature from Objective-C Runtime: @ opaqueAncestor @ :
nsobject_t 			nsview_opaqueAncestor( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeNames @ :
nsobject_t 			nsview_accessibilityAttributeNames( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityWindowAttribute @ :
nsobject_t 			nsview_accessibilityWindowAttribute( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityParentAttribute @ :
nsobject_t 			nsview_accessibilityParentAttribute( nsview_t object );

// Signature from Objective-C Runtime: v sendEvent: @ : @
void 				nsview_sendEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ hitTest: @ : {CGPoint=dd}
nsobject_t 			nsview_hitTest( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v layoutSubtreeIfNeeded @ :
void 				nsview_layoutSubtreeIfNeeded( nsview_t object );

// Signature from Objective-C Runtime: v removeFromSuperviewWithoutNeedingDisplay @ :
void 				nsview_removeFromSuperviewWithoutNeedingDisplay( nsview_t object );

// Signature from Objective-C Runtime: c isDescendantOf: @ : @
char 				nsview_isDescendantOf( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ widthAnchor @ :
nsobject_t 			nsview_widthAnchor( nsview_t object );

// Signature from Objective-C Runtime: v setTranslatesAutoresizingMaskIntoConstraints: @ : c
void 				nsview_setTranslatesAutoresizingMaskIntoConstraints( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v addGestureRecognizer: @ : @
void 				nsview_addGestureRecognizer( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} fittingSize @ :
CGSize 				nsview_fittingSize( nsview_t object );

// Signature from Objective-C Runtime: v removeConstraint: @ : @
void 				nsview_removeConstraint( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setContentCompressionResistancePriority:forOrientation: @ : f q
void 				nsview_setContentCompressionResistancePriority( nsview_t object, float arg0, long long arg1 );

// Signature from Objective-C Runtime: v setContentHuggingPriority:forOrientation: @ : f q
void 				nsview_setContentHuggingPriority( nsview_t object, float arg0, long long arg1 );

// Signature from Objective-C Runtime: {CGSize=dd} intrinsicContentSize @ :
CGSize 				nsview_intrinsicContentSize( nsview_t object );

// Signature from Objective-C Runtime: v viewDidChangeEffectiveAppearance @ :
void 				nsview_viewDidChangeEffectiveAppearance( nsview_t object );

// Signature from Objective-C Runtime: @ appearance @ :
nsobject_t 			nsview_appearance( nsview_t object );

// Signature from Objective-C Runtime: v setWantsLayer: @ : c
void 				nsview_setWantsLayer( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setShouldBeArchived: @ : c
void 				nsview_setShouldBeArchived( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ centerXAnchor @ :
nsobject_t 			nsview_centerXAnchor( nsview_t object );

// Signature from Objective-C Runtime: @ heightAnchor @ :
nsobject_t 			nsview_heightAnchor( nsview_t object );

// Signature from Objective-C Runtime: @ bottomAnchor @ :
nsobject_t 			nsview_bottomAnchor( nsview_t object );

// Signature from Objective-C Runtime: v addConstraints: @ : @
void 				nsview_addConstraints( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setIgnoreHitTest: @ : c
void 				nsview_setIgnoreHitTest( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ leadingAnchor @ :
nsobject_t 			nsview_leadingAnchor( nsview_t object );

// Signature from Objective-C Runtime: v setAllowedTouchTypes: @ : Q
void 				nsview_setAllowedTouchTypes( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ gestureRecognizers @ :
nsobject_t 			nsview_gestureRecognizers( nsview_t object );

// Signature from Objective-C Runtime: v viewDidMoveToWindow @ :
void 				nsview_viewDidMoveToWindow( nsview_t object );

// Signature from Objective-C Runtime: @ animator @ :
nsobject_t 			nsview_animator( nsview_t object );

// Signature from Objective-C Runtime: @ backgroundColor @ :
nsobject_t 			nsview_backgroundColor( nsview_t object );

// Signature from Objective-C Runtime: v setCornerRadius: @ : d
void 				nsview_setCornerRadius( nsview_t object, double arg0 );

// Signature from Objective-C Runtime: {NSEdgeInsets=dddd} alignmentRectInsets @ :
NSEdgeInsets 		nsview_alignmentRectInsets( nsview_t object );

// Signature from Objective-C Runtime: v setUserInterfaceLayoutDirection: @ : q
void 				nsview_setUserInterfaceLayoutDirection( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setBoundsOrigin: @ : {CGPoint=dd}
void 				nsview_setBoundsOrigin( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v setAnimations: @ : @
void 				nsview_setAnimations( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c gestureRecognizerShouldBegin: @ : @
char 				nsview_gestureRecognizerShouldBegin( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityParent @ :
nsobject_t 			nsview_accessibilityParent( nsview_t object );

// Signature from Objective-C Runtime: @ subviews @ :
nsobject_t 			nsview_subviews( nsview_t object );

// Signature from Objective-C Runtime: c isHiddenOrHasHiddenAncestor @ :
char 				nsview_isHiddenOrHasHiddenAncestor( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityFocusedUIElement @ :
nsobject_t 			nsview_accessibilityFocusedUIElement( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityHitTest: @ : {CGPoint=dd}
nsobject_t 			nsview_accessibilityHitTest( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsview_accessibilityVisibleArea( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsview_accessibilityFrame( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsIgnored @ :
char 				nsview_accessibilityIsIgnored( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue: @ : @
nsobject_t 			nsview_accessibilityAttributeValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ enclosingMenuItem @ :
nsobject_t 			nsview_enclosingMenuItem( nsview_t object );

// Signature from Objective-C Runtime: @ toolTip @ :
nsobject_t 			nsview_toolTip( nsview_t object );

// Signature from Objective-C Runtime: v setToolTip: @ : @
void 				nsview_setToolTip( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c performKeyEquivalent: @ : @
char 				nsview_performKeyEquivalent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAlphaValue: @ : d
void 				nsview_setAlphaValue( nsview_t object, double arg0 );

// Signature from Objective-C Runtime: v setOpaque: @ : c
void 				nsview_setOpaque( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v display @ :
void 				nsview_display( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsview_accessibilityShouldUseUniqueId( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityRoleAttribute @ :
nsobject_t 			nsview_accessibilityRoleAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsRoleAttributeSettable @ :
char 				nsview_accessibilityIsRoleAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityRoleDescriptionAttribute @ :
nsobject_t 			nsview_accessibilityRoleDescriptionAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsRoleDescriptionAttributeSettable @ :
char 				nsview_accessibilityIsRoleDescriptionAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityHelpAttribute @ :
nsobject_t 			nsview_accessibilityHelpAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsHelpAttributeSettable @ :
char 				nsview_accessibilityIsHelpAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityFocusedAttribute @ :
nsobject_t 			nsview_accessibilityFocusedAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsFocusedAttributeSettable @ :
char 				nsview_accessibilityIsFocusedAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: v accessibilitySetFocusedAttribute: @ : @
void 				nsview_accessibilitySetFocusedAttribute( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityIsParentAttributeSettable @ :
char 				nsview_accessibilityIsParentAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsWindowAttributeSettable @ :
char 				nsview_accessibilityIsWindowAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityTopLevelUIElementAttribute @ :
nsobject_t 			nsview_accessibilityTopLevelUIElementAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsTopLevelUIElementAttributeSettable @ :
char 				nsview_accessibilityIsTopLevelUIElementAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityPositionAttribute @ :
nsobject_t 			nsview_accessibilityPositionAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsPositionAttributeSettable @ :
char 				nsview_accessibilityIsPositionAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilitySizeAttribute @ :
nsobject_t 			nsview_accessibilitySizeAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsSizeAttributeSettable @ :
char 				nsview_accessibilityIsSizeAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsAttributeSettable: @ : @
char 				nsview_accessibilityIsAttributeSettable( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilitySetValue:forAttribute: @ : @ @
void 				nsview_accessibilitySetValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityActionNames @ :
nsobject_t 			nsview_accessibilityActionNames( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityActionDescription: @ : @
nsobject_t 			nsview_accessibilityActionDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityPerformAction: @ : @
void 				nsview_accessibilityPerformAction( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalUnitDescriptionAttribute @ :
nsobject_t 			nsview_accessibilityHorizontalUnitDescriptionAttribute( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityVerticalUnitDescriptionAttribute @ :
nsobject_t 			nsview_accessibilityVerticalUnitDescriptionAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsview_accessibilityShouldSendNotification( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ colorSpace @ :
nsobject_t 			nsview_colorSpace( nsview_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsview_accessibilitySupportsOverriddenAttributes( nsview_t object );

// Signature from Objective-C Runtime: v setBounds: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setBounds( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setLayer: @ : @
void 				nsview_setLayer( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ makeBackingLayer @ :
nsobject_t 			nsview_makeBackingLayer( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenAttribute @ :
nsobject_t 			nsview_accessibilityChildrenAttribute( nsview_t object );

// Signature from Objective-C Runtime: d backingScaleFactor @ :
double 				nsview_backingScaleFactor( nsview_t object );

// Signature from Objective-C Runtime: v addTrackingArea: @ : @
void 				nsview_addTrackingArea( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeTrackingArea: @ : @
void 				nsview_removeTrackingArea( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setNextKeyView: @ : @
void 				nsview_setNextKeyView( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} alignmentRectForFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_alignmentRectForFrame( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v removeConstraints: @ : @
void 				nsview_removeConstraints( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v drawRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_drawRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: c mouseDownCanMoveWindow @ :
char 				nsview_mouseDownCanMoveWindow( nsview_t object );

// Signature from Objective-C Runtime: @ animations @ :
nsobject_t 			nsview_animations( nsview_t object );

// Signature from Objective-C Runtime: d cornerRadius @ :
double 				nsview_cornerRadius( nsview_t object );

// Signature from Objective-C Runtime: v lockFocus @ :
void 				nsview_lockFocus( nsview_t object );

// Signature from Objective-C Runtime: v unlockFocus @ :
void 				nsview_unlockFocus( nsview_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsview_userInterfaceItemIdentifier( nsview_t object );

// Signature from Objective-C Runtime: v rightMouseDown: @ : @
void 				nsview_rightMouseDown( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setMenu: @ : @
void 				nsview_setMenu( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsview_setUserInterfaceItemIdentifier( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ designatedFocusRingView @ :
nsobject_t 			nsview_designatedFocusRingView( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenInNavigationOrderAttribute @ :
nsobject_t 			nsview_accessibilityChildrenInNavigationOrderAttribute( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityIsChildrenAttributeSettable @ :
char 				nsview_accessibilityIsChildrenAttributeSettable( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAuditIssuesAttribute @ :
nsobject_t 			nsview_accessibilityAuditIssuesAttribute( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRectToLayer: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_convertRectToLayer( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: c shouldDelayWindowOrderingForEvent: @ : @
char 				nsview_shouldDelayWindowOrderingForEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAppearance: @ : @
void 				nsview_setAppearance( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setSubviews: @ : @
void 				nsview_setSubviews( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ leftAnchor @ :
nsobject_t 			nsview_leftAnchor( nsview_t object );

// Signature from Objective-C Runtime: @ trailingAnchor @ :
nsobject_t 			nsview_trailingAnchor( nsview_t object );

// Signature from Objective-C Runtime: @ centerYAnchor @ :
nsobject_t 			nsview_centerYAnchor( nsview_t object );

// Signature from Objective-C Runtime: @ declaredLayoutConstraints @ :
nsobject_t 			nsview_declaredLayoutConstraints( nsview_t object );

// Signature from Objective-C Runtime: c wantsLayer @ :
char 				nsview_wantsLayer( nsview_t object );

// Signature from Objective-C Runtime: v setLayerContentsRedrawPolicy: @ : q
void 				nsview_setLayerContentsRedrawPolicy( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: v displayIfNeeded @ :
void 				nsview_displayIfNeeded( nsview_t object );

// Signature from Objective-C Runtime: @ preferredLayoutAttributesFittingAttributes: @ : @
nsobject_t 			nsview_preferredLayoutAttributesFittingAttributes( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v replaceSubview:with: @ : @ @
void 				nsview_replaceSubview( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ nsli_widthVariable @ :
nsobject_t 			nsview_nsli_widthVariable( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_heightVariable @ :
nsobject_t 			nsview_nsli_heightVariable( nsview_t object );

// Signature from Objective-C Runtime: v viewWillDraw @ :
void 				nsview_viewWillDraw( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} backingAlignedRect:options: @ : {CGRect={CGPoint=dd}{CGSize=dd}} Q
CGRect 				nsview_backingAlignedRect( nsview_t object, CGRect arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: v willRemoveSubview: @ : @
void 				nsview_willRemoveSubview( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRectToBacking: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_convertRectToBacking( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRectFromBacking: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_convertRectFromBacking( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: c mouse:inRect: @ : {CGPoint=dd} {CGRect={CGPoint=dd}{CGSize=dd}}
char 				nsview_mouse( nsview_t object, CGPoint arg0, CGRect arg1 );

// Signature from Objective-C Runtime: c scrollRectToVisible: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
char 				nsview_scrollRectToVisible( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setNeedsDisplayInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setNeedsDisplayInRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setKeyboardFocusRingNeedsDisplayInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setKeyboardFocusRingNeedsDisplayInRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ nextKeyView @ :
nsobject_t 			nsview_nextKeyView( nsview_t object );

// Signature from Objective-C Runtime: @ previousKeyView @ :
nsobject_t 			nsview_previousKeyView( nsview_t object );

// Signature from Objective-C Runtime: v setPostsBoundsChangedNotifications: @ : c
void 				nsview_setPostsBoundsChangedNotifications( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v scrollPoint: @ : {CGPoint=dd}
void 				nsview_scrollPoint( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v displayRectIgnoringOpacity:inContext: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_displayRectIgnoringOpacity( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPointToBacking: @ : {CGPoint=dd}
CGPoint 			nsview_convertPointToBacking( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: c inLiveResize @ :
char 				nsview_inLiveResize( nsview_t object );

// Signature from Objective-C Runtime: c preservesContentDuringLiveResize @ :
char 				nsview_preservesContentDuringLiveResize( nsview_t object );

// Signature from Objective-C Runtime: c canDraw @ :
char 				nsview_canDraw( nsview_t object );

// Signature from Objective-C Runtime: @ enclosingScrollView @ :
nsobject_t 			nsview_enclosingScrollView( nsview_t object );

// Signature from Objective-C Runtime: v dragImage:at:offset:event:pasteboard:source:slideBack: @ : @ {CGPoint=dd} {CGSize=dd} @ @ @ c
void 				nsview_dragImage( nsview_t object, nsobject_t arg0, CGPoint arg1, CGSize arg2, nsobject_t arg3, nsobject_t arg4, nsobject_t arg5, char arg6 );

// Signature from Objective-C Runtime: v registerForDraggedTypes: @ : @
void 				nsview_registerForDraggedTypes( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unregisterDraggedTypes @ :
void 				nsview_unregisterDraggedTypes( nsview_t object );

// Signature from Objective-C Runtime: c acceptsFirstMouse: @ : @
char 				nsview_acceptsFirstMouse( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c needsPanelToBecomeKey @ :
char 				nsview_needsPanelToBecomeKey( nsview_t object );

// Signature from Objective-C Runtime: Q draggingEntered: @ : @
unsigned long long 	nsview_draggingEntered( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q draggingUpdated: @ : @
unsigned long long 	nsview_draggingUpdated( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v draggingExited: @ : @
void 				nsview_draggingExited( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c performDragOperation: @ : @
char 				nsview_performDragOperation( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v scrollWheel: @ : @
void 				nsview_scrollWheel( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v scrollRect:by: @ : {CGRect={CGPoint=dd}{CGSize=dd}} {CGSize=dd}
void 				nsview_scrollRect( nsview_t object, CGRect arg0, CGSize arg1 );

// Signature from Objective-C Runtime: @ menuForEvent: @ : @
nsobject_t 			nsview_menuForEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bitmapImageRepForCachingDisplayInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			nsview_bitmapImageRepForCachingDisplayInRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v cacheDisplayInRect:toBitmapImageRep: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_cacheDisplayInRect( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: c postsFrameChangedNotifications @ :
char 				nsview_postsFrameChangedNotifications( nsview_t object );

// Signature from Objective-C Runtime: v viewDidMoveToSuperview @ :
void 				nsview_viewDidMoveToSuperview( nsview_t object );

// Signature from Objective-C Runtime: v setFlipped: @ : c
void 				nsview_setFlipped( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ registeredDraggedTypes @ :
nsobject_t 			nsview_registeredDraggedTypes( nsview_t object );

// Signature from Objective-C Runtime: v setFocusRingType: @ : Q
void 				nsview_setFocusRingType( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ headerView @ :
nsobject_t 			nsview_headerView( nsview_t object );

// Signature from Objective-C Runtime: v setNextResponder: @ : @
void 				nsview_setNextResponder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ animationForKey: @ : @
nsobject_t 			nsview_animationForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} centerScanRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_centerScanRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v invalidateIntrinsicContentSizeForCell: @ : @
void 				nsview_invalidateIntrinsicContentSizeForCell( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v invalidateConstraints @ :
void 				nsview_invalidateConstraints( nsview_t object );

// Signature from Objective-C Runtime: c lockFocusIfCanDraw @ :
char 				nsview_lockFocusIfCanDraw( nsview_t object );

// Signature from Objective-C Runtime: v setContentStyle: @ : @
void 				nsview_setContentStyle( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} frameForAlignmentRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_frameForAlignmentRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: d firstBaselineOffsetFromTop @ :
double 				nsview_firstBaselineOffsetFromTop( nsview_t object );

// Signature from Objective-C Runtime: d baselineOffsetFromBottom @ :
double 				nsview_baselineOffsetFromBottom( nsview_t object );

// Signature from Objective-C Runtime: {NSEdgeInsets=dddd} touchBarHitTestInsets @ :
NSEdgeInsets 		nsview_touchBarHitTestInsets( nsview_t object );

// Signature from Objective-C Runtime: c performMnemonic: @ : @
char 				nsview_performMnemonic( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v noteFocusRingMaskChanged @ :
void 				nsview_noteFocusRingMaskChanged( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPointFromBacking: @ : {CGPoint=dd}
CGPoint 			nsview_convertPointFromBacking( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: d lastBaselineOffsetFromBottom @ :
double 				nsview_lastBaselineOffsetFromBottom( nsview_t object );

// Signature from Objective-C Runtime: q layerContentsRedrawPolicy @ :
long long 			nsview_layerContentsRedrawPolicy( nsview_t object );

// Signature from Objective-C Runtime: @ effectiveContentStyle @ :
nsobject_t 			nsview_effectiveContentStyle( nsview_t object );

// Signature from Objective-C Runtime: @ constraintForIdentifier: @ : @
nsobject_t 			nsview_constraintForIdentifier( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setCompositingOperation: @ : Q
void 				nsview_setCompositingOperation( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: Q compositingOperation @ :
unsigned long long 	nsview_compositingOperation( nsview_t object );

// Signature from Objective-C Runtime: v setClipsToBounds: @ : c
void 				nsview_setClipsToBounds( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: d alphaValue @ :
double 				nsview_alphaValue( nsview_t object );

// Signature from Objective-C Runtime: v willOpenMenu:withEvent: @ : @ @
void 				nsview_willOpenMenu( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v didCloseMenu:withEvent: @ : @ @
void 				nsview_didCloseMenu( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v prepareMenu:withEvent: @ : @ @
void 				nsview_prepareMenu( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v prepareForMenu:withEvent: @ : @ @
void 				nsview_prepareForMenu( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityPopUpMenuCreated:forSubview:returningAccessibilityParent: @ : @ @ ^@
void 				nsview_accessibilityPopUpMenuCreated( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: v accessibilityPopUpMenuClosed:accessibilityParent: @ : @ @
void 				nsview_accessibilityPopUpMenuClosed( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v print: @ : @
void 				nsview_print( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c worksWhenModal @ :
char 				nsview_worksWhenModal( nsview_t object );

// Signature from Objective-C Runtime: @ topAnchor @ :
nsobject_t 			nsview_topAnchor( nsview_t object );

// Signature from Objective-C Runtime: @ trackingAreas @ :
nsobject_t 			nsview_trackingAreas( nsview_t object );

// Signature from Objective-C Runtime: @ nextValidKeyView @ :
nsobject_t 			nsview_nextValidKeyView( nsview_t object );

// Signature from Objective-C Runtime: Q focusRingType @ :
unsigned long long 	nsview_focusRingType( nsview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} convertSizeToBacking: @ : {CGSize=dd}
CGSize 				nsview_convertSizeToBacking( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v setAllowsVibrancy: @ : c
void 				nsview_setAllowsVibrancy( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c canBecomeKeyView @ :
char 				nsview_canBecomeKeyView( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityWindowPointForShowMenu @ :
CGPoint 			nsview_accessibilityWindowPointForShowMenu( nsview_t object );

// Signature from Objective-C Runtime: v drawFocusRingMask @ :
void 				nsview_drawFocusRingMask( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAuditParent @ :
nsobject_t 			nsview_accessibilityAuditParent( nsview_t object );

// Signature from Objective-C Runtime: v accessibilityDrawFocusRing @ :
void 				nsview_accessibilityDrawFocusRing( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilitySectionsAttribute @ :
nsobject_t 			nsview_accessibilitySectionsAttribute( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAuditHierarchy @ :
nsobject_t 			nsview_accessibilityAuditHierarchy( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAuditLabel @ :
nsobject_t 			nsview_accessibilityAuditLabel( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAuditContrast @ :
nsobject_t 			nsview_accessibilityAuditContrast( nsview_t object );

// Signature from Objective-C Runtime: @ deepestAccessibilityDescendants @ :
nsobject_t 			nsview_deepestAccessibilityDescendants( nsview_t object );

// Signature from Objective-C Runtime: @ rightAnchor @ :
nsobject_t 			nsview_rightAnchor( nsview_t object );

// Signature from Objective-C Runtime: v updateConstraintsForSubtreeIfNeeded @ :
void 				nsview_updateConstraintsForSubtreeIfNeeded( nsview_t object );

// Signature from Objective-C Runtime: v constraintsDidChangeInEngine: @ : @
void 				nsview_constraintsDidChangeInEngine( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v allocateGState @ :
void 				nsview_allocateGState( nsview_t object );

// Signature from Objective-C Runtime: v viewWillMoveToSuperview: @ : @
void 				nsview_viewWillMoveToSuperview( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setBoundsSize: @ : {CGSize=dd}
void 				nsview_setBoundsSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v translateOriginToPoint: @ : {CGPoint=dd}
void 				nsview_translateOriginToPoint( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v scaleUnitSquareToSize: @ : {CGSize=dd}
void 				nsview_scaleUnitSquareToSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} adjustScroll: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_adjustScroll( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ previousValidKeyView @ :
nsobject_t 			nsview_previousValidKeyView( nsview_t object );

// Signature from Objective-C Runtime: v setFrameRotation: @ : d
void 				nsview_setFrameRotation( nsview_t object, double arg0 );

// Signature from Objective-C Runtime: v setBoundsRotation: @ : d
void 				nsview_setBoundsRotation( nsview_t object, double arg0 );

// Signature from Objective-C Runtime: v rotateByAngle: @ : d
void 				nsview_rotateByAngle( nsview_t object, double arg0 );

// Signature from Objective-C Runtime: c autoscroll: @ : @
char 				nsview_autoscroll( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUpGState @ :
void 				nsview_setUpGState( nsview_t object );

// Signature from Objective-C Runtime: @ viewWithTag: @ : q
nsobject_t 			nsview_viewWithTag( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ beginDraggingSessionWithItems:event:source: @ : @ @ @
nsobject_t 			nsview_beginDraggingSessionWithItems( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ constraints @ :
nsobject_t 			nsview_constraints( nsview_t object );

// Signature from Objective-C Runtime: v viewWillStartLiveResize @ :
void 				nsview_viewWillStartLiveResize( nsview_t object );

// Signature from Objective-C Runtime: v viewDidEndLiveResize @ :
void 				nsview_viewDidEndLiveResize( nsview_t object );

// Signature from Objective-C Runtime: v updateTrackingAreas @ :
void 				nsview_updateTrackingAreas( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRectFromLayer: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_convertRectFromLayer( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v interpretKeyEvents: @ : @
void 				nsview_interpretKeyEvents( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ candidateListTouchBarItem @ :
nsobject_t 			nsview_candidateListTouchBarItem( nsview_t object );

// Signature from Objective-C Runtime: @ lastBaselineAnchor @ :
nsobject_t 			nsview_lastBaselineAnchor( nsview_t object );

// Signature from Objective-C Runtime: v viewDidChangeBackingProperties @ :
void 				nsview_viewDidChangeBackingProperties( nsview_t object );

// Signature from Objective-C Runtime: v viewWillMoveToWindow: @ : @
void 				nsview_viewWillMoveToWindow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAutoresizesSubviews: @ : c
void 				nsview_setAutoresizesSubviews( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setNeedsUpdateConstraints: @ : c
void 				nsview_setNeedsUpdateConstraints( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c acceptsTouchEvents @ :
char 				nsview_acceptsTouchEvents( nsview_t object );

// Signature from Objective-C Runtime: c ignoreHitTest @ :
char 				nsview_ignoreHitTest( nsview_t object );

// Signature from Objective-C Runtime: c shouldBeArchived @ :
char 				nsview_shouldBeArchived( nsview_t object );

// Signature from Objective-C Runtime: v displayRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_displayRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: c shouldBeTreatedAsInkEvent: @ : @
char 				nsview_shouldBeTreatedAsInkEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} focusRingMaskBounds @ :
CGRect 				nsview_focusRingMaskBounds( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityPopUpMenuParent: @ : @
nsobject_t 			nsview_accessibilityPopUpMenuParent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ compositingFilter @ :
nsobject_t 			nsview_compositingFilter( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_ancestorSharedWithItem: @ : @
nsobject_t 			nsview_nsli_ancestorSharedWithItem( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ shadow @ :
nsobject_t 			nsview_shadow( nsview_t object );

// Signature from Objective-C Runtime: v setShadow: @ : @
void 				nsview_setShadow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ backgroundFilters @ :
nsobject_t 			nsview_backgroundFilters( nsview_t object );

// Signature from Objective-C Runtime: v setBackgroundFilters: @ : @
void 				nsview_setBackgroundFilters( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ contentFilters @ :
nsobject_t 			nsview_contentFilters( nsview_t object );

// Signature from Objective-C Runtime: v setContentFilters: @ : @
void 				nsview_setContentFilters( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: f contentHuggingPriorityForOrientation: @ : q
float 				nsview_contentHuggingPriorityForOrientation( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: f contentCompressionResistancePriorityForOrientation: @ : q
float 				nsview_contentCompressionResistancePriorityForOrientation( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ layoutRect @ :
nsobject_t 			nsview_layoutRect( nsview_t object );

// Signature from Objective-C Runtime: @ firstBaselineAnchor @ :
nsobject_t 			nsview_firstBaselineAnchor( nsview_t object );

// Signature from Objective-C Runtime: v discardCursorRects @ :
void 				nsview_discardCursorRects( nsview_t object );

// Signature from Objective-C Runtime: v cursorUpdate: @ : @
void 				nsview_cursorUpdate( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c prepareForDragOperation: @ : @
char 				nsview_prepareForDragOperation( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v concludeDragOperation: @ : @
void 				nsview_concludeDragOperation( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v helpRequested: @ : @
void 				nsview_helpRequested( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q addTrackingRect:owner:userData:assumeInside: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @ ^v c
long long 			nsview_addTrackingRect( nsview_t object, CGRect arg0, nsobject_t arg1, void* arg2, char arg3 );

// Signature from Objective-C Runtime: v removeTrackingRect: @ : q
void 				nsview_removeTrackingRect( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: v trackEventsMatchingMask:timeout:mode:handler: @ : Q d @ @?
void 				nsview_trackEventsMatchingMask( nsview_t object, unsigned long long arg0, double arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ recursiveDescription @ :
nsobject_t 			nsview_recursiveDescription( nsview_t object );

// Signature from Objective-C Runtime: c wantsRestingTouches @ :
char 				nsview_wantsRestingTouches( nsview_t object );

// Signature from Objective-C Runtime: @ functionRow @ :
nsobject_t 			nsview_functionRow( nsview_t object );

// Signature from Objective-C Runtime: Q allowedTouchTypes @ :
unsigned long long 	nsview_allowedTouchTypes( nsview_t object );

// Signature from Objective-C Runtime: c isDrawingFindIndicator @ :
char 				nsview_isDrawingFindIndicator( nsview_t object );

// Signature from Objective-C Runtime: v removeAllToolTips @ :
void 				nsview_removeAllToolTips( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} nsis_frame @ :
CGRect 				nsview_nsis_frame( nsview_t object );

// Signature from Objective-C Runtime: v sortSubviewsUsingBlock: @ : @?
void 				nsview_sortSubviewsUsingBlock( nsview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setLayerContentsPlacement: @ : q
void 				nsview_setLayerContentsPlacement( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: v drawLayer:inContext: @ : @ ^{CGContext=}
void 				nsview_drawLayer( nsview_t object, nsobject_t arg0, CGContext* arg1 );

// Signature from Objective-C Runtime: @ actionForLayer:forKey: @ : @ @
nsobject_t 			nsview_actionForLayer( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: c needsDisplay @ :
char 				nsview_needsDisplay( nsview_t object );

// Signature from Objective-C Runtime: v resizeWithOldSuperviewSize: @ : {CGSize=dd}
void 				nsview_resizeWithOldSuperviewSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: c hasAmbiguousLayout @ :
char 				nsview_hasAmbiguousLayout( nsview_t object );

// Signature from Objective-C Runtime: v setUpdateLayerHandler: @ : @?
void 				nsview_setUpdateLayerHandler( nsview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ alignmentLayoutRect @ :
nsobject_t 			nsview_alignmentLayoutRect( nsview_t object );

// Signature from Objective-C Runtime: @ ancestorSharedWithView: @ : @
nsobject_t 			nsview_ancestorSharedWithView( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c wantsBestResolutionOpenGLSurface @ :
char 				nsview_wantsBestResolutionOpenGLSurface( nsview_t object );

// Signature from Objective-C Runtime: v renewGState @ :
void 				nsview_renewGState( nsview_t object );

// Signature from Objective-C Runtime: v setPressureConfiguration: @ : @
void 				nsview_setPressureConfiguration( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pressureConfiguration @ :
nsobject_t 			nsview_pressureConfiguration( nsview_t object );

// Signature from Objective-C Runtime: c canDrawConcurrently @ :
char 				nsview_canDrawConcurrently( nsview_t object );

// Signature from Objective-C Runtime: c autoresizesSubviews @ :
char 				nsview_autoresizesSubviews( nsview_t object );

// Signature from Objective-C Runtime: c needsLayout @ :
char 				nsview_needsLayout( nsview_t object );

// Signature from Objective-C Runtime: c needsUpdateConstraints @ :
char 				nsview_needsUpdateConstraints( nsview_t object );

// Signature from Objective-C Runtime: @ loggingDescription @ :
nsobject_t 			nsview_loggingDescription( nsview_t object );

// Signature from Objective-C Runtime: v didBecomeActiveFirstResponder @ :
void 				nsview_didBecomeActiveFirstResponder( nsview_t object );

// Signature from Objective-C Runtime: v didResignActiveFirstResponder @ :
void 				nsview_didResignActiveFirstResponder( nsview_t object );

// Signature from Objective-C Runtime: q addToolTipRect:owner:userData: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @ ^v
long long 			nsview_addToolTipRect( nsview_t object, CGRect arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: c wantsExtendedDynamicRangeOpenGLSurface @ :
char 				nsview_wantsExtendedDynamicRangeOpenGLSurface( nsview_t object );

// Signature from Objective-C Runtime: v setWantsExtendedDynamicRangeOpenGLSurface: @ : c
void 				nsview_setWantsExtendedDynamicRangeOpenGLSurface( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPointFromBase: @ : {CGPoint=dd}
CGPoint 			nsview_convertPointFromBase( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v prepareContentInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_prepareContentInRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setHorizontalContentSizeConstraintActive: @ : c
void 				nsview_setHorizontalContentSizeConstraintActive( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setVerticalContentSizeConstraintActive: @ : c
void 				nsview_setVerticalContentSizeConstraintActive( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} rectForPage: @ : q
CGRect 				nsview_rectForPage( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ printJobTitle @ :
nsobject_t 			nsview_printJobTitle( nsview_t object );

// Signature from Objective-C Runtime: v geometryInWindowDidChange @ :
void 				nsview_geometryInWindowDidChange( nsview_t object );

// Signature from Objective-C Runtime: v viewDidHide @ :
void 				nsview_viewDidHide( nsview_t object );

// Signature from Objective-C Runtime: v viewDidUnhide @ :
void 				nsview_viewDidUnhide( nsview_t object );

// Signature from Objective-C Runtime: c isRotatedOrScaledFromBase @ :
char 				nsview_isRotatedOrScaledFromBase( nsview_t object );

// Signature from Objective-C Runtime: @ imageInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			nsview_imageInRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v removeToolTip: @ : q
void 				nsview_removeToolTip( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ inputContext @ :
nsobject_t 			nsview_inputContext( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFocusRingMaskBounds @ :
CGRect 				nsview_accessibilityFocusRingMaskBounds( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPointToLayer: @ : {CGPoint=dd}
CGPoint 			nsview_convertPointToLayer( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: v resizeSubviewsWithOldSize: @ : {CGSize=dd}
void 				nsview_resizeSubviewsWithOldSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: c canDrawSubviewsIntoLayer @ :
char 				nsview_canDrawSubviewsIntoLayer( nsview_t object );

// Signature from Objective-C Runtime: v nsis_valueOfVariable:didChangeInEngine: @ : @ @
void 				nsview_nsis_valueOfVariable( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: {CGSize=dd} convertSizeFromBacking: @ : {CGSize=dd}
CGSize 				nsview_convertSizeFromBacking( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} preparedContentRect @ :
CGRect 				nsview_preparedContentRect( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} overlayBounds @ :
CGRect 				nsview_overlayBounds( nsview_t object );

// Signature from Objective-C Runtime: c needsToDrawRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
char 				nsview_needsToDrawRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v showActiveFirstResponderIndication @ :
void 				nsview_showActiveFirstResponderIndication( nsview_t object );

// Signature from Objective-C Runtime: v drawOverlayRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_drawOverlayRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ visibleAccessibleOrLeafSubviews @ :
nsobject_t 			nsview_visibleAccessibleOrLeafSubviews( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityAuditPotentialChildren @ :
nsobject_t 			nsview_accessibilityAuditPotentialChildren( nsview_t object );

// Signature from Objective-C Runtime: c canSmoothFontsInLayer @ :
char 				nsview_canSmoothFontsInLayer( nsview_t object );

// Signature from Objective-C Runtime: v displayIgnoringOpacity @ :
void 				nsview_displayIgnoringOpacity( nsview_t object );

// Signature from Objective-C Runtime: c isInTouchBar @ :
char 				nsview_isInTouchBar( nsview_t object );

// Signature from Objective-C Runtime: v showDefinitionForAttributedString:range:options:baselineOriginProvider: @ : @ {_NSRange=QQ} @ @?
void 				nsview_showDefinitionForAttributedString( nsview_t object, nsobject_t arg0, _NSRange arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: c isInFullScreenMode @ :
char 				nsview_isInFullScreenMode( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} locationOfPrintRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGPoint 			nsview_locationOfPrintRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} rectForSmartMagnificationAtPoint:inRect: @ : {CGPoint=dd} {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_rectForSmartMagnificationAtPoint( nsview_t object, CGPoint arg0, CGRect arg1 );

// Signature from Objective-C Runtime: c isRotatedFromBase @ :
char 				nsview_isRotatedFromBase( nsview_t object );

// Signature from Objective-C Runtime: v didAddSubview: @ : @
void 				nsview_didAddSubview( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v adjustPageHeightNew:top:bottom:limit: @ : ^d d d d
void 				nsview_adjustPageHeightNew( nsview_t object, double* arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: c knowsPageRange: @ : ^{_NSRange=QQ}
char 				nsview_knowsPageRange( nsview_t object, _NSRange* arg0 );

// Signature from Objective-C Runtime: c knowsPagesFirst:last: @ : ^q ^q
char 				nsview_knowsPagesFirst( nsview_t object, long long* arg0, long long* arg1 );

// Signature from Objective-C Runtime: @ revealContext:rectsForItem: @ : @ @
nsobject_t 			nsview_revealContext( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addLayoutGuide: @ : @
void 				nsview_addLayoutGuide( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} rectPreservedDuringLiveResize @ :
CGRect 				nsview_rectPreservedDuringLiveResize( nsview_t object );

// Signature from Objective-C Runtime: v view:customToolTip:drawInView:displayInfo: @ : @ q @ @
void 				nsview_view( nsview_t object, nsobject_t arg0, long long arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} nsis_frameInEngine:forLayoutGuide:withRounding: @ : @ @ c
CGRect 				nsview_nsis_frameInEngine( nsview_t object, nsobject_t arg0, nsobject_t arg1, char arg2 );

// Signature from Objective-C Runtime: v setCanDrawSubviewsIntoLayer: @ : c
void 				nsview_setCanDrawSubviewsIntoLayer( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setCanDrawConcurrently: @ : c
void 				nsview_setCanDrawConcurrently( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v removeAllGestureRecognizers @ :
void 				nsview_removeAllGestureRecognizers( nsview_t object );

// Signature from Objective-C Runtime: v hideActiveFirstResponderIndication @ :
void 				nsview_hideActiveFirstResponderIndication( nsview_t object );

// Signature from Objective-C Runtime: q layerContentsPlacement @ :
long long 			nsview_layerContentsPlacement( nsview_t object );

// Signature from Objective-C Runtime: q compareGeometry: @ : @
long long 			nsview_compareGeometry( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_engineToUserScalingCoefficientsInEngine: @ : @
CGSize 				nsview_nsli_engineToUserScalingCoefficientsInEngine( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setPreparedContentRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setPreparedContentRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} boundsOrigin @ :
CGPoint 			nsview_boundsOrigin( nsview_t object );

// Signature from Objective-C Runtime: v setFrameTransform: @ : {CGAffineTransform=dddddd}
void 				nsview_setFrameTransform( nsview_t object, CGAffineTransform arg0 );

// Signature from Objective-C Runtime: d frameRotation @ :
double 				nsview_frameRotation( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPointFromLayer: @ : {CGPoint=dd}
CGPoint 			nsview_convertPointFromLayer( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} convertSizeToLayer: @ : {CGSize=dd}
CGSize 				nsview_convertSizeToLayer( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} convertSizeFromLayer: @ : {CGSize=dd}
CGSize 				nsview_convertSizeFromLayer( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v removeGestureRecognizer: @ : @
void 				nsview_removeGestureRecognizer( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v displayIfNeededInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_displayIfNeededInRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v displayIfNeededIgnoringOpacity @ :
void 				nsview_displayIfNeededIgnoringOpacity( nsview_t object );

// Signature from Objective-C Runtime: v displayIfNeededInRectIgnoringOpacity: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_displayIfNeededInRectIgnoringOpacity( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ layoutGuides @ :
nsobject_t 			nsview_layoutGuides( nsview_t object );

// Signature from Objective-C Runtime: v setWantsBestResolutionOpenGLSurface: @ : c
void 				nsview_setWantsBestResolutionOpenGLSurface( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setGestureRecognizers: @ : @
void 				nsview_setGestureRecognizers( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v effectiveAppearanceDidChange @ :
void 				nsview_effectiveAppearanceDidChange( nsview_t object );

// Signature from Objective-C Runtime: v setMaskView: @ : @
void 				nsview_setMaskView( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ maskView @ :
nsobject_t 			nsview_maskView( nsview_t object );

// Signature from Objective-C Runtime: q computed_effectiveSemanticContext @ :
long long 			nsview_computed_effectiveSemanticContext( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} nsis_layoutRectFromHostingViewInEngine: @ : @
CGRect 				nsview_nsis_layoutRectFromHostingViewInEngine( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} nsis_unroundedFrame @ :
CGRect 				nsview_nsis_unroundedFrame( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} nsis_rawAlignmentRect @ :
CGRect 				nsview_nsis_rawAlignmentRect( nsview_t object );

// Signature from Objective-C Runtime: v disableLayoutFlushing @ :
void 				nsview_disableLayoutFlushing( nsview_t object );

// Signature from Objective-C Runtime: v enableLayoutFlushing @ :
void 				nsview_enableLayoutFlushing( nsview_t object );

// Signature from Objective-C Runtime: {CGAffineTransform=dddddd} frameTransform @ :
CGAffineTransform 	nsview_frameTransform( nsview_t object );

// Signature from Objective-C Runtime: v setFrameCenterRotation: @ : d
void 				nsview_setFrameCenterRotation( nsview_t object, double arg0 );

// Signature from Objective-C Runtime: d frameCenterRotation @ :
double 				nsview_frameCenterRotation( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} frameOrigin @ :
CGPoint 			nsview_frameOrigin( nsview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} frameSize @ :
CGSize 				nsview_frameSize( nsview_t object );

// Signature from Objective-C Runtime: c wantsExtendedDynamicRange @ :
char 				nsview_wantsExtendedDynamicRange( nsview_t object );

// Signature from Objective-C Runtime: v setWantsExtendedDynamicRange: @ : c
void 				nsview_setWantsExtendedDynamicRange( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} boundsSize @ :
CGSize 				nsview_boundsSize( nsview_t object );

// Signature from Objective-C Runtime: d boundsRotation @ :
double 				nsview_boundsRotation( nsview_t object );

// Signature from Objective-C Runtime: v setLayerUsesCoreImageFilters: @ : c
void 				nsview_setLayerUsesCoreImageFilters( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c layerUsesCoreImageFilters @ :
char 				nsview_layerUsesCoreImageFilters( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} convertPointToBase: @ : {CGPoint=dd}
CGPoint 			nsview_convertPointToBase( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} convertSizeToBase: @ : {CGSize=dd}
CGSize 				nsview_convertSizeToBase( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} convertSizeFromBase: @ : {CGSize=dd}
CGSize 				nsview_convertSizeFromBase( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRectToBase: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_convertRectToBase( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} convertRectFromBase: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
CGRect 				nsview_convertRectFromBase( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: q gState @ :
long long 			nsview_gState( nsview_t object );

// Signature from Objective-C Runtime: c lockFocusIfCanDrawInContext: @ : @
char 				nsview_lockFocusIfCanDrawInContext( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAcceptsTouchEvents: @ : c
void 				nsview_setAcceptsTouchEvents( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setWantsRestingTouches: @ : c
void 				nsview_setWantsRestingTouches( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c gesturesEnabled @ :
char 				nsview_gesturesEnabled( nsview_t object );

// Signature from Objective-C Runtime: v setGesturesEnabled: @ : c
void 				nsview_setGesturesEnabled( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c usesConstraintsInsteadOfAutoresizing @ :
char 				nsview_usesConstraintsInsteadOfAutoresizing( nsview_t object );

// Signature from Objective-C Runtime: v setUsesConstraintsInsteadOfAutoresizing: @ : c
void 				nsview_setUsesConstraintsInsteadOfAutoresizing( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c isHorizontalContentSizeConstraintActive @ :
char 				nsview_isHorizontalContentSizeConstraintActive( nsview_t object );

// Signature from Objective-C Runtime: c isVerticalContentSizeConstraintActive @ :
char 				nsview_isVerticalContentSizeConstraintActive( nsview_t object );

// Signature from Objective-C Runtime: v translateRectsNeedingDisplayInRect:by: @ : {CGRect={CGPoint=dd}{CGSize=dd}} {CGSize=dd}
void 				nsview_translateRectsNeedingDisplayInRect( nsview_t object, CGRect arg0, CGSize arg1 );

// Signature from Objective-C Runtime: v removeCursorRect:cursor: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_removeCursorRect( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: c shouldDrawColor @ :
char 				nsview_shouldDrawColor( nsview_t object );

// Signature from Objective-C Runtime: c postsBoundsChangedNotifications @ :
char 				nsview_postsBoundsChangedNotifications( nsview_t object );

// Signature from Objective-C Runtime: v willSendMenuNeedsUpdate:withEvent: @ : @ @
void 				nsview_willSendMenuNeedsUpdate( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @? updateLayerHandler @ :
nsobject_t* 		nsview_updateLayerHandler( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} activeDrawingRect @ :
CGRect 				nsview_activeDrawingRect( nsview_t object );

// Signature from Objective-C Runtime: @ contentStyle @ :
nsobject_t 			nsview_contentStyle( nsview_t object );

// Signature from Objective-C Runtime: c computed_inSelectedTableRow @ :
char 				nsview_computed_inSelectedTableRow( nsview_t object );

// Signature from Objective-C Runtime: c computed_titlebarIsForcingDisplayOfDividers @ :
char 				nsview_computed_titlebarIsForcingDisplayOfDividers( nsview_t object );

// Signature from Objective-C Runtime: @ fontSmoothingBackgroundColor @ :
nsobject_t 			nsview_fontSmoothingBackgroundColor( nsview_t object );

// Signature from Objective-C Runtime: v setFontSmoothingBackgroundColor: @ : @
void 				nsview_setFontSmoothingBackgroundColor( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c shouldSetFontSmoothingBackgroundColor @ :
char 				nsview_shouldSetFontSmoothingBackgroundColor( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_minXVariable @ :
nsobject_t 			nsview_nsli_minXVariable( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_minYVariable @ :
nsobject_t 			nsview_nsli_minYVariable( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_superitem @ :
nsobject_t 			nsview_nsli_superitem( nsview_t object );

// Signature from Objective-C Runtime: @ dataWithEPSInsideRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			nsview_dataWithEPSInsideRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ dataWithPDFInsideRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
nsobject_t 			nsview_dataWithPDFInsideRect( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: c dragFile:fromRect:slideBack:event: @ : @ {CGRect={CGPoint=dd}{CGSize=dd}} c @
char 				nsview_dragFile( nsview_t object, nsobject_t arg0, CGRect arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: c dragPromisedFilesOfTypes:fromRect:source:slideBack:event: @ : @ {CGRect={CGPoint=dd}{CGSize=dd}} @ c @
char 				nsview_dragPromisedFilesOfTypes( nsview_t object, nsobject_t arg0, CGRect arg1, nsobject_t arg2, char arg3, nsobject_t arg4 );

// Signature from Objective-C Runtime: v removeLayoutGuide: @ : @
void 				nsview_removeLayoutGuide( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c nsli_lowerAttribute:intoExpression:withCoefficient:forConstraint:onBehalfOfLayoutGuide: @ : i @ d @ @
char 				nsview_nsli_lowerAttribute( nsview_t object, int arg0, nsobject_t arg1, double arg2, nsobject_t arg3, nsobject_t arg4 );

// Signature from Objective-C Runtime: c nsli_lowersExpressionRelativeToConstraintContainer @ :
char 				nsview_nsli_lowersExpressionRelativeToConstraintContainer( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_layoutEngine @ :
nsobject_t 			nsview_nsli_layoutEngine( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_installedConstraints @ :
nsobject_t 			nsview_nsli_installedConstraints( nsview_t object );

// Signature from Objective-C Runtime: c nsli_removeConstraint: @ : @
char 				nsview_nsli_removeConstraint( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ constraintsAffectingLayoutForOrientation:ofItem: @ : q @
nsobject_t 			nsview_constraintsAffectingLayoutForOrientation( nsview_t object, long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_convertSizeToEngineSpace: @ : {CGSize=dd}
CGSize 				nsview_nsli_convertSizeToEngineSpace( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_convertSizeFromEngineSpace: @ : {CGSize=dd}
CGSize 				nsview_nsli_convertSizeFromEngineSpace( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: c nsli_defaultResolvedValue:forSymbolicConstant:inConstraint:error: @ : ^d @ @ ^@
char 				nsview_nsli_defaultResolvedValue( nsview_t object, double* arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: @ nsli_constraintWithAnchor:relatedBy:toAnchor:withSystemSpacingMultipliedBy: @ : @ q @ d
nsobject_t 			nsview_nsli_constraintWithAnchor( nsview_t object, nsobject_t arg0, long long arg1, nsobject_t arg2, double arg3 );

// Signature from Objective-C Runtime: c nsli_isRTL @ :
char 				nsview_nsli_isRTL( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_itemDescribingLayoutDirectionForConstraint:toItem: @ : @ @
nsobject_t 			nsview_nsli_itemDescribingLayoutDirectionForConstraint( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v nsli_addConstraint: @ : @
void 				nsview_nsli_addConstraint( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nsli_boundsWidthVariable @ :
nsobject_t 			nsview_nsli_boundsWidthVariable( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_boundsHeightVariable @ :
nsobject_t 			nsview_nsli_boundsHeightVariable( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_description @ :
nsobject_t 			nsview_nsli_description( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_layoutRect @ :
nsobject_t 			nsview_nsli_layoutRect( nsview_t object );

// Signature from Objective-C Runtime: c nsli_resolvedValue:forSymbolicConstant:inConstraint:error: @ : ^d @ @ ^@
char 				nsview_nsli_resolvedValue( nsview_t object, double* arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t* arg3 );

// Signature from Objective-C Runtime: c nsli_descriptionIncludesPointer @ :
char 				nsview_nsli_descriptionIncludesPointer( nsview_t object );

// Signature from Objective-C Runtime: Q nsli_autoresizingMask @ :
unsigned long long 	nsview_nsli_autoresizingMask( nsview_t object );

// Signature from Objective-C Runtime: c nsli_isFlipped @ :
char 				nsview_nsli_isFlipped( nsview_t object );

// Signature from Objective-C Runtime: Q nsli_piercingToken @ :
unsigned long long 	nsview_nsli_piercingToken( nsview_t object );

// Signature from Objective-C Runtime: v nsli_setPiercingToken: @ : Q
void 				nsview_nsli_setPiercingToken( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: c nsli_isCollectingConstraintChangesForLaterCoordinatedFlush: @ : @
char 				nsview_nsli_isCollectingConstraintChangesForLaterCoordinatedFlush( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c nsis_shouldIntegralizeVariable: @ : @
char 				nsview_nsis_shouldIntegralizeVariable( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c nsis_valueOfVariableIsUserObservable: @ : @
char 				nsview_nsis_valueOfVariableIsUserObservable( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ nsis_descriptionOfVariable: @ : @
nsobject_t 			nsview_nsis_descriptionOfVariable( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i nsis_orientationHintForVariable: @ : @
int 				nsview_nsis_orientationHintForVariable( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d widthAdjustLimit @ :
double 				nsview_widthAdjustLimit( nsview_t object );

// Signature from Objective-C Runtime: v adjustPageWidthNew:left:right:limit: @ : ^d d d d
void 				nsview_adjustPageWidthNew( nsview_t object, double* arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: d heightAdjustLimit @ :
double 				nsview_heightAdjustLimit( nsview_t object );

// Signature from Objective-C Runtime: @ pageFooter @ :
nsobject_t 			nsview_pageFooter( nsview_t object );

// Signature from Objective-C Runtime: @ pageHeader @ :
nsobject_t 			nsview_pageHeader( nsview_t object );

// Signature from Objective-C Runtime: v drawSheetBorderWithSize: @ : {CGSize=dd}
void 				nsview_drawSheetBorderWithSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v drawPageBorderWithSize: @ : {CGSize=dd}
void 				nsview_drawPageBorderWithSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: v beginDocument @ :
void 				nsview_beginDocument( nsview_t object );

// Signature from Objective-C Runtime: v endDocument @ :
void 				nsview_endDocument( nsview_t object );

// Signature from Objective-C Runtime: v endPage @ :
void 				nsview_endPage( nsview_t object );

// Signature from Objective-C Runtime: v writePDFInsideRect:toPasteboard: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_writePDFInsideRect( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v writeEPSInsideRect:toPasteboard: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_writeEPSInsideRect( nsview_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v beginPageInRect:atPlacement: @ : {CGRect={CGPoint=dd}{CGSize=dd}} {CGPoint=dd}
void 				nsview_beginPageInRect( nsview_t object, CGRect arg0, CGPoint arg1 );

// Signature from Objective-C Runtime: v beginPrologueBBox:creationDate:createdBy:fonts:forWhom:pages:title: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @ @ @ @ q @
void 				nsview_beginPrologueBBox( nsview_t object, CGRect arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3, nsobject_t arg4, long long arg5, nsobject_t arg6 );

// Signature from Objective-C Runtime: v endHeaderComments @ :
void 				nsview_endHeaderComments( nsview_t object );

// Signature from Objective-C Runtime: v endPrologue @ :
void 				nsview_endPrologue( nsview_t object );

// Signature from Objective-C Runtime: v beginSetup @ :
void 				nsview_beginSetup( nsview_t object );

// Signature from Objective-C Runtime: v endSetup @ :
void 				nsview_endSetup( nsview_t object );

// Signature from Objective-C Runtime: v beginPage:label:bBox:fonts: @ : q @ {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsview_beginPage( nsview_t object, long long arg0, nsobject_t arg1, CGRect arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v beginPageSetupRect:placement: @ : {CGRect={CGPoint=dd}{CGSize=dd}} {CGPoint=dd}
void 				nsview_beginPageSetupRect( nsview_t object, CGRect arg0, CGPoint arg1 );

// Signature from Objective-C Runtime: v addToPageSetup @ :
void 				nsview_addToPageSetup( nsview_t object );

// Signature from Objective-C Runtime: v endPageSetup @ :
void 				nsview_endPageSetup( nsview_t object );

// Signature from Objective-C Runtime: v beginTrailer @ :
void 				nsview_beginTrailer( nsview_t object );

// Signature from Objective-C Runtime: v endTrailer @ :
void 				nsview_endTrailer( nsview_t object );

// Signature from Objective-C Runtime: c enterFullScreenMode:withOptions: @ : @ @
char 				nsview_enterFullScreenMode( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exitFullScreenModeWithOptions: @ : @
void 				nsview_exitFullScreenModeWithOptions( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ reuseIdentifier @ :
nsobject_t 			nsview_reuseIdentifier( nsview_t object );

// Signature from Objective-C Runtime: @ ns_widgetType @ :
nsobject_t 			nsview_ns_widgetType( nsview_t object );

// Signature from Objective-C Runtime: @ ns_containerWidgetType @ :
nsobject_t 			nsview_ns_containerWidgetType( nsview_t object );

// Signature from Objective-C Runtime: v exerciseAmbiguityInLayout @ :
void 				nsview_exerciseAmbiguityInLayout( nsview_t object );

// Signature from Objective-C Runtime: {CGSize=dd} nsli_engineToUserScalingCoefficients @ :
CGSize 				nsview_nsli_engineToUserScalingCoefficients( nsview_t object );

// Signature from Objective-C Runtime: @ nsli_layoutAnchorForAttribute: @ : q
nsobject_t 			nsview_nsli_layoutAnchorForAttribute( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: c nsli_canHostIndependentVariableAnchor @ :
char 				nsview_nsli_canHostIndependentVariableAnchor( nsview_t object );

// Signature from Objective-C Runtime: v nsli_swapContainerForOutgoingConstraint:toIncomingConstraint: @ : @ @
void 				nsview_nsli_swapContainerForOutgoingConstraint( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ engine:markerForConstraintToBreakAmongConstraints: @ : @ @
nsobject_t 			nsview_engine( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v solutionDidChangeInEngine: @ : @
void 				nsview_solutionDidChangeInEngine( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v measureMin:max:ideal: @ : ^{CGSize=dd} ^{CGSize=dd} ^{CGSize=dd}
void 				nsview_measureMin( nsview_t object, CGSize* arg0, CGSize* arg1, CGSize* arg2 );

// Signature from Objective-C Runtime: @ layoutMarginsGuide @ :
nsobject_t 			nsview_layoutMarginsGuide( nsview_t object );

// Signature from Objective-C Runtime: @ safeAreaLayoutGuide @ :
nsobject_t 			nsview_safeAreaLayoutGuide( nsview_t object );

// Signature from Objective-C Runtime: {NSEdgeInsets=dddd} computedSafeAreaInsets @ :
NSEdgeInsets 		nsview_computedSafeAreaInsets( nsview_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} computedSafeAreaRect @ :
CGRect 				nsview_computedSafeAreaRect( nsview_t object );

// Signature from Objective-C Runtime: @ recursiveConstraintDescription @ :
nsobject_t 			nsview_recursiveConstraintDescription( nsview_t object );

// Signature from Objective-C Runtime: @ recursiveConstraintIdentifierDescription @ :
nsobject_t 			nsview_recursiveConstraintIdentifierDescription( nsview_t object );

// Signature from Objective-C Runtime: @ declaredLayoutRules @ :
nsobject_t 			nsview_declaredLayoutRules( nsview_t object );

// Signature from Objective-C Runtime: c textLayerShouldEnableFontSmoothing: @ : @
char 				nsview_textLayerShouldEnableFontSmoothing( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeConstraintWithIdentifier: @ : @
void 				nsview_removeConstraintWithIdentifier( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsview_retain( nsview_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsview_retainCount( nsview_t object );

// Signature from Objective-C Runtime: v userActivityWasContinued: @ : @
void 				nsview_userActivityWasContinued( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c acceptsFirstResponder @ :
char 				nsview_acceptsFirstResponder( nsview_t object );

// Signature from Objective-C Runtime: v tabletPoint: @ : @
void 				nsview_tabletPoint( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v pressureChangeWithEvent: @ : @
void 				nsview_pressureChangeWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilitySubrole: @ : @
void 				nsview_setAccessibilitySubrole( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySubrole @ :
nsobject_t 			nsview_accessibilitySubrole( nsview_t object );

// Signature from Objective-C Runtime: v mouseDown: @ : @
void 				nsview_mouseDown( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDecrementButton @ :
nsobject_t 			nsview_accessibilityDecrementButton( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityIncrementButton @ :
nsobject_t 			nsview_accessibilityIncrementButton( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityChildren @ :
nsobject_t 			nsview_accessibilityChildren( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityRole @ :
nsobject_t 			nsview_accessibilityRole( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsview_accessibilityLabel( nsview_t object );

// Signature from Objective-C Runtime: q accessibilityIndex @ :
long long 			nsview_accessibilityIndex( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsview_accessibilityCustomActions( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenInNavigationOrder @ :
nsobject_t 			nsview_accessibilityChildrenInNavigationOrder( nsview_t object );

// Signature from Objective-C Runtime: c isAccessibilityElement @ :
char 				nsview_isAccessibilityElement( nsview_t object );

// Signature from Objective-C Runtime: @ supplementalTargetForAction:sender: @ : : @
nsobject_t 			nsview_supplementalTargetForAction( nsview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ nextResponder @ :
nsobject_t 			nsview_nextResponder( nsview_t object );

// Signature from Objective-C Runtime: q accessibilityRowCount @ :
long long 			nsview_accessibilityRowCount( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityVisibleChildren @ :
nsobject_t 			nsview_accessibilityVisibleChildren( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityIndex: @ : q
void 				nsview_setAccessibilityIndex( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRoleDescription @ :
nsobject_t 			nsview_accessibilityRoleDescription( nsview_t object );

// Signature from Objective-C Runtime: q accessibilityColumnCount @ :
long long 			nsview_accessibilityColumnCount( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilitySelectedChildren @ :
nsobject_t 			nsview_accessibilitySelectedChildren( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedChildren: @ : @
void 				nsview_setAccessibilitySelectedChildren( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedCells @ :
nsobject_t 			nsview_accessibilitySelectedCells( nsview_t object );

// Signature from Objective-C Runtime: v mouseEntered: @ : @
void 				nsview_mouseEntered( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v mouseMoved: @ : @
void 				nsview_mouseMoved( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v mouseExited: @ : @
void 				nsview_mouseExited( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsview_setAccessibilityLabel( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setTouchBar: @ : @
void 				nsview_setTouchBar( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ touchBar @ :
nsobject_t 			nsview_touchBar( nsview_t object );

// Signature from Objective-C Runtime: @ validRequestorForSendType:returnType: @ : @ @
nsobject_t 			nsview_validRequestorForSendType( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v invalidateRestorableState @ :
void 				nsview_invalidateRestorableState( nsview_t object );

// Signature from Objective-C Runtime: v encodeRestorableStateWithCoder: @ : @
void 				nsview_encodeRestorableStateWithCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreStateWithCoder: @ : @
void 				nsview_restoreStateWithCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v doCommandBySelector: @ : :
void 				nsview_doCommandBySelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityFocused @ :
char 				nsview_isAccessibilityFocused( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsview_accessibilityIdentifier( nsview_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityLayoutPointForScreenPoint: @ : {CGPoint=dd}
CGPoint 			nsview_accessibilityLayoutPointForScreenPoint( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityLayoutSizeForScreenSize: @ : {CGSize=dd}
CGSize 				nsview_accessibilityLayoutSizeForScreenSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityScreenPointForLayoutPoint: @ : {CGPoint=dd}
CGPoint 			nsview_accessibilityScreenPointForLayoutPoint( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityScreenSizeForLayoutSize: @ : {CGSize=dd}
CGSize 				nsview_accessibilityScreenSizeForLayoutSize( nsview_t object, CGSize arg0 );

// Signature from Objective-C Runtime: @ accessibilityCellForColumn:row: @ : q q
nsobject_t 			nsview_accessibilityCellForColumn( nsview_t object, long long arg0, long long arg1 );

// Signature from Objective-C Runtime: @ accessibilityAttributedStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsview_accessibilityAttributedStringForRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForLine: @ : q
_NSRange 			nsview_accessibilityRangeForLine( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsview_accessibilityStringForRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForPosition: @ : {CGPoint=dd}
_NSRange 			nsview_accessibilityRangeForPosition( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForIndex: @ : q
_NSRange 			nsview_accessibilityRangeForIndex( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameForRange: @ : {_NSRange=QQ}
CGRect 				nsview_accessibilityFrameForRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilityRTFForRange: @ : {_NSRange=QQ}
nsobject_t 			nsview_accessibilityRTFForRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityStyleRangeForIndex: @ : q
_NSRange 			nsview_accessibilityStyleRangeForIndex( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityLineForIndex: @ : q
long long 			nsview_accessibilityLineForIndex( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: c accessibilityPerformCancel @ :
char 				nsview_accessibilityPerformCancel( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformConfirm @ :
char 				nsview_accessibilityPerformConfirm( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDecrement @ :
char 				nsview_accessibilityPerformDecrement( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDelete @ :
char 				nsview_accessibilityPerformDelete( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformIncrement @ :
char 				nsview_accessibilityPerformIncrement( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPick @ :
char 				nsview_accessibilityPerformPick( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPress @ :
char 				nsview_accessibilityPerformPress( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformRaise @ :
char 				nsview_accessibilityPerformRaise( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowAlternateUI @ :
char 				nsview_accessibilityPerformShowAlternateUI( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowDefaultUI @ :
char 				nsview_accessibilityPerformShowDefaultUI( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenu @ :
char 				nsview_accessibilityPerformShowMenu( nsview_t object );

// Signature from Objective-C Runtime: c isAccessibilitySelectorAllowed: @ : :
char 				nsview_isAccessibilitySelectorAllowed( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityElement: @ : c
void 				nsview_setAccessibilityElement( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setAccessibilityFrame( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFocused: @ : c
void 				nsview_setAccessibilityFocused( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsview_accessibilityActivationPoint( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsview_setAccessibilityActivationPoint( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: @ accessibilityTopLevelUIElement @ :
nsobject_t 			nsview_accessibilityTopLevelUIElement( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityTopLevelUIElement: @ : @
void 				nsview_setAccessibilityTopLevelUIElement( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityURL @ :
nsobject_t 			nsview_accessibilityURL( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityURL: @ : @
void 				nsview_setAccessibilityURL( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsview_accessibilityValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsview_setAccessibilityValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValueDescription @ :
nsobject_t 			nsview_accessibilityValueDescription( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityValueDescription: @ : @
void 				nsview_setAccessibilityValueDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityVisibleChildren: @ : @
void 				nsview_setAccessibilityVisibleChildren( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitle @ :
nsobject_t 			nsview_accessibilityTitle( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitle: @ : @
void 				nsview_setAccessibilityTitle( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitleUIElement @ :
nsobject_t 			nsview_accessibilityTitleUIElement( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitleUIElement: @ : @
void 				nsview_setAccessibilityTitleUIElement( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContents @ :
nsobject_t 			nsview_accessibilityNextContents( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityNextContents: @ : @
void 				nsview_setAccessibilityNextContents( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityOrientation @ :
long long 			nsview_accessibilityOrientation( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrientation: @ : q
void 				nsview_setAccessibilityOrientation( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityOverflowButton @ :
nsobject_t 			nsview_accessibilityOverflowButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverflowButton: @ : @
void 				nsview_setAccessibilityOverflowButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityParent: @ : @
void 				nsview_setAccessibilityParent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPlaceholderValue @ :
nsobject_t 			nsview_accessibilityPlaceholderValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityPlaceholderValue: @ : @
void 				nsview_setAccessibilityPlaceholderValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContents @ :
nsobject_t 			nsview_accessibilityPreviousContents( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityPreviousContents: @ : @
void 				nsview_setAccessibilityPreviousContents( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRole: @ : @
void 				nsview_setAccessibilityRole( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRoleDescription: @ : @
void 				nsview_setAccessibilityRoleDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchButton @ :
nsobject_t 			nsview_accessibilitySearchButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchButton: @ : @
void 				nsview_setAccessibilitySearchButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchMenu @ :
nsobject_t 			nsview_accessibilitySearchMenu( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchMenu: @ : @
void 				nsview_setAccessibilitySearchMenu( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilitySelected @ :
char 				nsview_isAccessibilitySelected( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelected: @ : c
void 				nsview_setAccessibilitySelected( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityServesAsTitleForUIElements @ :
nsobject_t 			nsview_accessibilityServesAsTitleForUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityServesAsTitleForUIElements: @ : @
void 				nsview_setAccessibilityServesAsTitleForUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityShownMenu @ :
nsobject_t 			nsview_accessibilityShownMenu( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityShownMenu: @ : @
void 				nsview_setAccessibilityShownMenu( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinValue @ :
nsobject_t 			nsview_accessibilityMinValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinValue: @ : @
void 				nsview_setAccessibilityMinValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMaxValue @ :
nsobject_t 			nsview_accessibilityMaxValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMaxValue: @ : @
void 				nsview_setAccessibilityMaxValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLinkedUIElements @ :
nsobject_t 			nsview_accessibilityLinkedUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityLinkedUIElements: @ : @
void 				nsview_setAccessibilityLinkedUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindow @ :
nsobject_t 			nsview_accessibilityWindow( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindow: @ : @
void 				nsview_setAccessibilityWindow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsview_setAccessibilityIdentifier( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHelp @ :
nsobject_t 			nsview_accessibilityHelp( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHelp: @ : @
void 				nsview_setAccessibilityHelp( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityFilename @ :
nsobject_t 			nsview_accessibilityFilename( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityFilename: @ : @
void 				nsview_setAccessibilityFilename( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityExpanded @ :
char 				nsview_isAccessibilityExpanded( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityExpanded: @ : c
void 				nsview_setAccessibilityExpanded( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEdited @ :
char 				nsview_isAccessibilityEdited( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityEdited: @ : c
void 				nsview_setAccessibilityEdited( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnabled @ :
char 				nsview_isAccessibilityEnabled( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnabled: @ : c
void 				nsview_setAccessibilityEnabled( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildren: @ : @
void 				nsview_setAccessibilityChildren( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildrenInNavigationOrder: @ : @
void 				nsview_setAccessibilityChildrenInNavigationOrder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityClearButton @ :
nsobject_t 			nsview_accessibilityClearButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityClearButton: @ : @
void 				nsview_setAccessibilityClearButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCancelButton @ :
nsobject_t 			nsview_accessibilityCancelButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCancelButton: @ : @
void 				nsview_setAccessibilityCancelButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityProtectedContent @ :
char 				nsview_isAccessibilityProtectedContent( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityProtectedContent: @ : c
void 				nsview_setAccessibilityProtectedContent( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityContents @ :
nsobject_t 			nsview_accessibilityContents( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityContents: @ : @
void 				nsview_setAccessibilityContents( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAlternateUIVisible @ :
char 				nsview_isAccessibilityAlternateUIVisible( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityAlternateUIVisible: @ : c
void 				nsview_setAccessibilityAlternateUIVisible( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedFocusElements @ :
nsobject_t 			nsview_accessibilitySharedFocusElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedFocusElements: @ : @
void 				nsview_setAccessibilitySharedFocusElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityRequired @ :
char 				nsview_isAccessibilityRequired( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityRequired: @ : c
void 				nsview_setAccessibilityRequired( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsview_accessibilityCustomRotors( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsview_setAccessibilityCustomRotors( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityApplicationFocusedUIElement @ :
nsobject_t 			nsview_accessibilityApplicationFocusedUIElement( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityApplicationFocusedUIElement: @ : @
void 				nsview_setAccessibilityApplicationFocusedUIElement( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMainWindow @ :
nsobject_t 			nsview_accessibilityMainWindow( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMainWindow: @ : @
void 				nsview_setAccessibilityMainWindow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityHidden @ :
char 				nsview_isAccessibilityHidden( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHidden: @ : c
void 				nsview_setAccessibilityHidden( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityFrontmost @ :
char 				nsview_isAccessibilityFrontmost( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrontmost: @ : c
void 				nsview_setAccessibilityFrontmost( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFocusedWindow @ :
nsobject_t 			nsview_accessibilityFocusedWindow( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityFocusedWindow: @ : @
void 				nsview_setAccessibilityFocusedWindow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindows @ :
nsobject_t 			nsview_accessibilityWindows( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindows: @ : @
void 				nsview_setAccessibilityWindows( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityExtrasMenuBar @ :
nsobject_t 			nsview_accessibilityExtrasMenuBar( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityExtrasMenuBar: @ : @
void 				nsview_setAccessibilityExtrasMenuBar( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMenuBar @ :
nsobject_t 			nsview_accessibilityMenuBar( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMenuBar: @ : @
void 				nsview_setAccessibilityMenuBar( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnTitles @ :
nsobject_t 			nsview_accessibilityColumnTitles( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnTitles: @ : @
void 				nsview_setAccessibilityColumnTitles( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityOrderedByRow @ :
char 				nsview_isAccessibilityOrderedByRow( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrderedByRow: @ : c
void 				nsview_setAccessibilityOrderedByRow( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityHorizontalUnits @ :
long long 			nsview_accessibilityHorizontalUnits( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnits: @ : q
void 				nsview_setAccessibilityHorizontalUnits( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityVerticalUnits @ :
long long 			nsview_accessibilityVerticalUnits( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnits: @ : q
void 				nsview_setAccessibilityVerticalUnits( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalUnitDescription @ :
nsobject_t 			nsview_accessibilityHorizontalUnitDescription( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnitDescription: @ : @
void 				nsview_setAccessibilityHorizontalUnitDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalUnitDescription @ :
nsobject_t 			nsview_accessibilityVerticalUnitDescription( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnitDescription: @ : @
void 				nsview_setAccessibilityVerticalUnitDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHandles @ :
nsobject_t 			nsview_accessibilityHandles( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHandles: @ : @
void 				nsview_setAccessibilityHandles( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWarningValue @ :
nsobject_t 			nsview_accessibilityWarningValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityWarningValue: @ : @
void 				nsview_setAccessibilityWarningValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCriticalValue @ :
nsobject_t 			nsview_accessibilityCriticalValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCriticalValue: @ : @
void 				nsview_setAccessibilityCriticalValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityDisclosed @ :
char 				nsview_isAccessibilityDisclosed( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosed: @ : c
void 				nsview_setAccessibilityDisclosed( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedByRow @ :
nsobject_t 			nsview_accessibilityDisclosedByRow( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedByRow: @ : @
void 				nsview_setAccessibilityDisclosedByRow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedRows @ :
nsobject_t 			nsview_accessibilityDisclosedRows( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedRows: @ : @
void 				nsview_setAccessibilityDisclosedRows( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityDisclosureLevel @ :
long long 			nsview_accessibilityDisclosureLevel( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosureLevel: @ : q
void 				nsview_setAccessibilityDisclosureLevel( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerUIElements @ :
nsobject_t 			nsview_accessibilityMarkerUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerUIElements: @ : @
void 				nsview_setAccessibilityMarkerUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerValues @ :
nsobject_t 			nsview_accessibilityMarkerValues( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerValues: @ : @
void 				nsview_setAccessibilityMarkerValues( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerGroupUIElement @ :
nsobject_t 			nsview_accessibilityMarkerGroupUIElement( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerGroupUIElement: @ : @
void 				nsview_setAccessibilityMarkerGroupUIElement( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityUnits @ :
long long 			nsview_accessibilityUnits( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnits: @ : q
void 				nsview_setAccessibilityUnits( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUnitDescription @ :
nsobject_t 			nsview_accessibilityUnitDescription( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnitDescription: @ : @
void 				nsview_setAccessibilityUnitDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityRulerMarkerType @ :
long long 			nsview_accessibilityRulerMarkerType( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityRulerMarkerType: @ : q
void 				nsview_setAccessibilityRulerMarkerType( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerTypeDescription @ :
nsobject_t 			nsview_accessibilityMarkerTypeDescription( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerTypeDescription: @ : @
void 				nsview_setAccessibilityMarkerTypeDescription( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalScrollBar @ :
nsobject_t 			nsview_accessibilityHorizontalScrollBar( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalScrollBar: @ : @
void 				nsview_setAccessibilityHorizontalScrollBar( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalScrollBar @ :
nsobject_t 			nsview_accessibilityVerticalScrollBar( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalScrollBar: @ : @
void 				nsview_setAccessibilityVerticalScrollBar( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAllowedValues @ :
nsobject_t 			nsview_accessibilityAllowedValues( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityAllowedValues: @ : @
void 				nsview_setAccessibilityAllowedValues( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLabelUIElements @ :
nsobject_t 			nsview_accessibilityLabelUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelUIElements: @ : @
void 				nsview_setAccessibilityLabelUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: f accessibilityLabelValue @ :
float 				nsview_accessibilityLabelValue( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelValue: @ : f
void 				nsview_setAccessibilityLabelValue( nsview_t object, float arg0 );

// Signature from Objective-C Runtime: @ accessibilitySplitters @ :
nsobject_t 			nsview_accessibilitySplitters( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySplitters: @ : @
void 				nsview_setAccessibilitySplitters( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityDecrementButton: @ : @
void 				nsview_setAccessibilityDecrementButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIncrementButton: @ : @
void 				nsview_setAccessibilityIncrementButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTabs @ :
nsobject_t 			nsview_accessibilityTabs( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityTabs: @ : @
void 				nsview_setAccessibilityTabs( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeader @ :
nsobject_t 			nsview_accessibilityHeader( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeader: @ : @
void 				nsview_setAccessibilityHeader( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityColumnCount: @ : q
void 				nsview_setAccessibilityColumnCount( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRowCount: @ : q
void 				nsview_setAccessibilityRowCount( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumns @ :
nsobject_t 			nsview_accessibilityColumns( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumns: @ : @
void 				nsview_setAccessibilityColumns( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityRows @ :
nsobject_t 			nsview_accessibilityRows( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityRows: @ : @
void 				nsview_setAccessibilityRows( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleRows @ :
nsobject_t 			nsview_accessibilityVisibleRows( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleRows: @ : @
void 				nsview_setAccessibilityVisibleRows( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedRows @ :
nsobject_t 			nsview_accessibilitySelectedRows( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedRows: @ : @
void 				nsview_setAccessibilitySelectedRows( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleColumns @ :
nsobject_t 			nsview_accessibilityVisibleColumns( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleColumns: @ : @
void 				nsview_setAccessibilityVisibleColumns( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedColumns @ :
nsobject_t 			nsview_accessibilitySelectedColumns( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedColumns: @ : @
void 				nsview_setAccessibilitySelectedColumns( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilitySortDirection @ :
long long 			nsview_accessibilitySortDirection( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySortDirection: @ : q
void 				nsview_setAccessibilitySortDirection( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRowHeaderUIElements @ :
nsobject_t 			nsview_accessibilityRowHeaderUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowHeaderUIElements: @ : @
void 				nsview_setAccessibilityRowHeaderUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilitySelectedCells: @ : @
void 				nsview_setAccessibilitySelectedCells( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleCells @ :
nsobject_t 			nsview_accessibilityVisibleCells( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCells: @ : @
void 				nsview_setAccessibilityVisibleCells( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnHeaderUIElements @ :
nsobject_t 			nsview_accessibilityColumnHeaderUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnHeaderUIElements: @ : @
void 				nsview_setAccessibilityColumnHeaderUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRowIndexRange @ :
_NSRange 			nsview_accessibilityRowIndexRange( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowIndexRange: @ : {_NSRange=QQ}
void 				nsview_setAccessibilityRowIndexRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityColumnIndexRange @ :
_NSRange 			nsview_accessibilityColumnIndexRange( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnIndexRange: @ : {_NSRange=QQ}
void 				nsview_setAccessibilityColumnIndexRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityInsertionPointLineNumber @ :
long long 			nsview_accessibilityInsertionPointLineNumber( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityInsertionPointLineNumber: @ : q
void 				nsview_setAccessibilityInsertionPointLineNumber( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySharedCharacterRange @ :
_NSRange 			nsview_accessibilitySharedCharacterRange( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedCharacterRange: @ : {_NSRange=QQ}
void 				nsview_setAccessibilitySharedCharacterRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedTextUIElements @ :
nsobject_t 			nsview_accessibilitySharedTextUIElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedTextUIElements: @ : @
void 				nsview_setAccessibilitySharedTextUIElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityVisibleCharacterRange @ :
_NSRange 			nsview_accessibilityVisibleCharacterRange( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCharacterRange: @ : {_NSRange=QQ}
void 				nsview_setAccessibilityVisibleCharacterRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityNumberOfCharacters @ :
long long 			nsview_accessibilityNumberOfCharacters( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityNumberOfCharacters: @ : q
void 				nsview_setAccessibilityNumberOfCharacters( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedText @ :
nsobject_t 			nsview_accessibilitySelectedText( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedText: @ : @
void 				nsview_setAccessibilitySelectedText( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySelectedTextRange @ :
_NSRange 			nsview_accessibilitySelectedTextRange( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRange: @ : {_NSRange=QQ}
void 				nsview_setAccessibilitySelectedTextRange( nsview_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedTextRanges @ :
nsobject_t 			nsview_accessibilitySelectedTextRanges( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRanges: @ : @
void 				nsview_setAccessibilitySelectedTextRanges( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityToolbarButton @ :
nsobject_t 			nsview_accessibilityToolbarButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityToolbarButton: @ : @
void 				nsview_setAccessibilityToolbarButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityModal @ :
char 				nsview_isAccessibilityModal( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityModal: @ : c
void 				nsview_setAccessibilityModal( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityProxy @ :
nsobject_t 			nsview_accessibilityProxy( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityProxy: @ : @
void 				nsview_setAccessibilityProxy( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMain @ :
char 				nsview_isAccessibilityMain( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMain: @ : c
void 				nsview_setAccessibilityMain( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFullScreenButton @ :
nsobject_t 			nsview_accessibilityFullScreenButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityFullScreenButton: @ : @
void 				nsview_setAccessibilityFullScreenButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityGrowArea @ :
nsobject_t 			nsview_accessibilityGrowArea( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityGrowArea: @ : @
void 				nsview_setAccessibilityGrowArea( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDocument @ :
nsobject_t 			nsview_accessibilityDocument( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDocument: @ : @
void 				nsview_setAccessibilityDocument( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDefaultButton @ :
nsobject_t 			nsview_accessibilityDefaultButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityDefaultButton: @ : @
void 				nsview_setAccessibilityDefaultButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCloseButton @ :
nsobject_t 			nsview_accessibilityCloseButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCloseButton: @ : @
void 				nsview_setAccessibilityCloseButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityZoomButton @ :
nsobject_t 			nsview_accessibilityZoomButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityZoomButton: @ : @
void 				nsview_setAccessibilityZoomButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinimizeButton @ :
nsobject_t 			nsview_accessibilityMinimizeButton( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimizeButton: @ : @
void 				nsview_setAccessibilityMinimizeButton( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMinimized @ :
char 				nsview_isAccessibilityMinimized( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimized: @ : c
void 				nsview_setAccessibilityMinimized( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsview_setAccessibilityCustomActions( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v quickLookPreviewItemsAtWindowLocation: @ : {CGPoint=dd}
void 				nsview_quickLookPreviewItemsAtWindowLocation( nsview_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: c presentError: @ : @
char 				nsview_presentError( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ willPresentError: @ : @
nsobject_t 			nsview_willPresentError( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v keyDown: @ : @
void 				nsview_keyDown( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c resignFirstResponder @ :
char 				nsview_resignFirstResponder( nsview_t object );

// Signature from Objective-C Runtime: c becomeFirstResponder @ :
char 				nsview_becomeFirstResponder( nsview_t object );

// Signature from Objective-C Runtime: @ undoManager @ :
nsobject_t 			nsview_undoManager( nsview_t object );

// Signature from Objective-C Runtime: c validateProposedFirstResponder:forEvent: @ : @ @
char 				nsview_validateProposedFirstResponder( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityResultsForSearchPredicate: @ : @
nsobject_t 			nsview_accessibilityResultsForSearchPredicate( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForColumnIndex: @ : q
nsobject_t 			nsview_accessibilityHeaderForColumnIndex( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForRowIndex: @ : q
nsobject_t 			nsview_accessibilityHeaderForRowIndex( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityAuditIssues @ :
nsobject_t 			nsview_accessibilityAuditIssues( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityAuditIssues: @ : @
void 				nsview_setAccessibilityAuditIssues( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAutoInteractable @ :
char 				nsview_isAccessibilityAutoInteractable( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityAutoInteractable: @ : c
void 				nsview_setAccessibilityAutoInteractable( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsview_accessibilityContainerType( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsview_setAccessibilityContainerType( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsview_accessibilityUserInputLabels( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsview_setAccessibilityUserInputLabels( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsview_accessibilityAttributedUserInputLabels( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsview_setAccessibilityAttributedUserInputLabels( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomChoosers @ :
nsobject_t 			nsview_accessibilityCustomChoosers( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomChoosers: @ : @
void 				nsview_setAccessibilityCustomChoosers( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnhancedUserInterface @ :
char 				nsview_isAccessibilityEnhancedUserInterface( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnhancedUserInterface: @ : c
void 				nsview_setAccessibilityEnhancedUserInterface( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFunctionRowTopLevelElements @ :
nsobject_t 			nsview_accessibilityFunctionRowTopLevelElements( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityFunctionRowTopLevelElements: @ : @
void 				nsview_setAccessibilityFunctionRowTopLevelElements( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMimicNativeView @ :
char 				nsview_isAccessibilityMimicNativeView( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityMimicNativeView: @ : c
void 				nsview_setAccessibilityMimicNativeView( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySections @ :
nsobject_t 			nsview_accessibilitySections( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilitySections: @ : @
void 				nsview_setAccessibilitySections( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderGroup @ :
nsobject_t 			nsview_accessibilityHeaderGroup( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeaderGroup: @ : @
void 				nsview_setAccessibilityHeaderGroup( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameInParentSpace @ :
CGRect 				nsview_accessibilityFrameInParentSpace( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrameInParentSpace: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsview_setAccessibilityFrameInParentSpace( nsview_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContentSibling @ :
nsobject_t 			nsview_accessibilityPreviousContentSibling( nsview_t object );

// Signature from Objective-C Runtime: v setPreviousContentSibling: @ : @
void 				nsview_setPreviousContentSibling( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContentSibling @ :
nsobject_t 			nsview_accessibilityNextContentSibling( nsview_t object );

// Signature from Objective-C Runtime: v setNextContentSibling: @ : @
void 				nsview_setNextContentSibling( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingAbove @ :
nsobject_t 			nsview_accessibilityContentSiblingAbove( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingAbove: @ : @
void 				nsview_setAccessibilityContentSiblingAbove( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingBelow @ :
nsobject_t 			nsview_accessibilityContentSiblingBelow( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingBelow: @ : @
void 				nsview_setAccessibilityContentSiblingBelow( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityOverridesAlwaysTakePrecedence @ :
char 				nsview_accessibilityOverridesAlwaysTakePrecedence( nsview_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverridesAlwaysTakePrecedence: @ : c
void 				nsview_setAccessibilityOverridesAlwaysTakePrecedence( nsview_t object, char arg0 );

// Signature from Objective-C Runtime: @ makeTouchBar @ :
nsobject_t 			nsview_makeTouchBar( nsview_t object );

// Signature from Objective-C Runtime: v mouseDragged: @ : @
void 				nsview_mouseDragged( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v mouseUp: @ : @
void 				nsview_mouseUp( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_touchBarProviders @ :
nsobject_t 			nsview_NS_touchBarProviders( nsview_t object );

// Signature from Objective-C Runtime: @ NS_touchBarProvidersKeyPaths @ :
nsobject_t 			nsview_NS_touchBarProvidersKeyPaths( nsview_t object );

// Signature from Objective-C Runtime: v magnifyWithEvent: @ : @
void 				nsview_magnifyWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v translateWithEvent: @ : @
void 				nsview_translateWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesBeganWithEvent: @ : @
void 				nsview_touchesBeganWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesMovedWithEvent: @ : @
void 				nsview_touchesMovedWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesEndedWithEvent: @ : @
void 				nsview_touchesEndedWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v touchesCancelledWithEvent: @ : @
void 				nsview_touchesCancelledWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v rightMouseUp: @ : @
void 				nsview_rightMouseUp( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v keyUp: @ : @
void 				nsview_keyUp( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v flagsChanged: @ : @
void 				nsview_flagsChanged( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v rightMouseDragged: @ : @
void 				nsview_rightMouseDragged( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v otherMouseDown: @ : @
void 				nsview_otherMouseDown( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v otherMouseDragged: @ : @
void 				nsview_otherMouseDragged( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v otherMouseUp: @ : @
void 				nsview_otherMouseUp( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ userActivity @ :
nsobject_t 			nsview_userActivity( nsview_t object );

// Signature from Objective-C Runtime: v updateUserActivityState: @ : @
void 				nsview_updateUserActivityState( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v restoreUserActivityState: @ : @
void 				nsview_restoreUserActivityState( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserActivity: @ : @
void 				nsview_setUserActivity( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v insertText: @ : @
void 				nsview_insertText( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c tryToPerform:with: @ : : @
char 				nsview_tryToPerform( nsview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v flushBufferedKeyEvents @ :
void 				nsview_flushBufferedKeyEvents( nsview_t object );

// Signature from Objective-C Runtime: @ servicesRequestor @ :
nsobject_t 			nsview_servicesRequestor( nsview_t object );

// Signature from Objective-C Runtime: v quickAction:didFailWithRequestor:error: @ : @ @ @
void 				nsview_quickAction( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ additionalQuickActionItemSource @ :
nsobject_t 			nsview_additionalQuickActionItemSource( nsview_t object );

// Signature from Objective-C Runtime: @ colorFactory @ :
nsobject_t 			nsview_colorFactory( nsview_t object );

// Signature from Objective-C Runtime: Q interfaceStyle @ :
unsigned long long 	nsview_interfaceStyle( nsview_t object );

// Signature from Objective-C Runtime: v setInterfaceStyle: @ : Q
void 				nsview_setInterfaceStyle( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ dependencyInfo @ :
nsobject_t 			nsview_dependencyInfo( nsview_t object );

// Signature from Objective-C Runtime: v rotateWithEvent: @ : @
void 				nsview_rotateWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v noResponderFor: @ : :
void 				nsview_noResponderFor( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: Q gestureEventMask @ :
unsigned long long 	nsview_gestureEventMask( nsview_t object );

// Signature from Objective-C Runtime: v setGestureEventMask: @ : Q
void 				nsview_setGestureEventMask( nsview_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: c wantsForwardedScrollEventsForAxis: @ : q
char 				nsview_wantsForwardedScrollEventsForAxis( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: c wantsScrollEventsForSwipeTrackingOnAxis: @ : q
char 				nsview_wantsScrollEventsForSwipeTrackingOnAxis( nsview_t object, long long arg0 );

// Signature from Objective-C Runtime: v setDependencyInfo: @ : @
void 				nsview_setDependencyInfo( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v invalidateRequestor @ :
void 				nsview_invalidateRequestor( nsview_t object );

// Signature from Objective-C Runtime: v tabletProximity: @ : @
void 				nsview_tabletProximity( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v smartMagnifyWithEvent: @ : @
void 				nsview_smartMagnifyWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v swipeWithEvent: @ : @
void 				nsview_swipeWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v beginGestureWithEvent: @ : @
void 				nsview_beginGestureWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v endGestureWithEvent: @ : @
void 				nsview_endGestureWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v quickLookWithEvent: @ : @
void 				nsview_quickLookWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v navigateWithEvent: @ : @
void 				nsview_navigateWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v changeModeWithEvent: @ : @
void 				nsview_changeModeWithEvent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c wantsForwardedScrollEvents @ :
char 				nsview_wantsForwardedScrollEvents( nsview_t object );

// Signature from Objective-C Runtime: v showContextHelp: @ : @
void 				nsview_showContextHelp( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ presentationWindowForError:originatedInWindow: @ : @ @
nsobject_t 			nsview_presentationWindowForError( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsview_accessibilityOverriddenAttributes( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsview_accessibilityReplaceRange( nsview_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsview_accessibilityArrayAttributeCount( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsview_accessibilityIndexOfChild( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsview_accessibilityArrayAttributeValues( nsview_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsview_accessibilityParameterizedAttributeNames( nsview_t object );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsview_accessibilityIndexForChildUIElementAttributeForParameter( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsview_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsview_accessibilityTemporaryChildren( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsview_accessibilityPerformShowMenuOfChild( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsview_accessibilityPresenterProcessIdentifier( nsview_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsview_accessibilitySupportsNotifications( nsview_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsview_accessibilityAllowsOverriddenAttributesWhenIgnored( nsview_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsview_accessibilitySetOverrideValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsview_accessibilityEncodeOverriddenAttributes( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsview_accessibilityDecodeOverriddenAttributes( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsview_accessibilitySupportsCustomElementData( nsview_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsview_bind( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsview_awakeFromNib( nsview_t object );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsview_unbind( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsview_valueClassForBinding( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsview_NS_observationForKeyPath( nsview_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsview_NS_observationForKeyPaths( nsview_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsview_optionDescriptionsForBinding( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsview_exposedBindings( nsview_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsview_infoForBinding( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsview_prepareForInterfaceBuilder( nsview_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsview_accessibilityAddTemporaryChild( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsview_accessibilityRemoveTemporaryChild( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsview_NSLifeguard_autorelease( nsview_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsview_accessibilitySetPresenterProcessIdentifier( nsview_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsview_NS_tiledLayerVisibleRect( nsview_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsview_NS_addTiledLayerDescendent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsview_NS_removeTiledLayerDescendent( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsview_CAMLTypeSupportedForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsview_CAMLTypeForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsview_CA_validateValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsview_encodeWithCAMLWriter( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsview_CA_interpolateValues( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsview_CAMLType( nsview_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsview_CA_archivingValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsview_CA_roundToIntegerFromValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsview_CA_addValue( nsview_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsview_CA_interpolateValue( nsview_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsview_CA_distanceToValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsview_CA_prepareRenderValue( nsview_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsview_CA_copyRenderValue( nsview_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsview_supportsRBSXPCSecureCoding( nsview_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsview_RBSIsXPCObject( nsview_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsview_NSRepresentation( nsview_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsview_supportsBSXPCSecureCoding( nsview_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsview_bs_isPlistableType( nsview_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsview_bs_secureEncoded( nsview_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsview_bs_encoded( nsview_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsview_classForCoder( nsview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsview_replacementObjectForCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsview_awakeAfterUsingCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsview_implementsSelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsview_setObservationInfo( nsview_t object, void* arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsview_replacementObjectForPortCoder( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsview_willChangeValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsview_dictionaryWithValuesForKeys( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsview_valueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsview_valueForUndefinedKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsview_classForKeyedArchiver( nsview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsview_replacementObjectForKeyedArchiver( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsview_valueForKeyPath( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsview_addObserver( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsview_objectSpecifier( nsview_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsview_replacementObjectForArchiver( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsview_classForArchiver( nsview_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsview_attributeKeys( nsview_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsview_toOneRelationshipKeys( nsview_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsview_toManyRelationshipKeys( nsview_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsview_inverseForRelationshipKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsview_classDescription( nsview_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsview_copyScriptingValue( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsview_methodDescriptionForSelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsview_newScriptingObjectOfClass( nsview_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsview_handleQueryWithUnboundKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsview_handleTakeValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsview_storedValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsview_takeStoredValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsview_takeValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsview_valuesForKeys( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsview_takeValuesFromDictionary( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsview_unableToSetNilForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsview_keyValueBindingForKey( nsview_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsview_createKeyValueBindingForKey( nsview_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsview_mutableArrayValueForKeyPath( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsview_mutableOrderedSetValueForKeyPath( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsview_mutableSetValueForKeyPath( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsview_removeObservation( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsview_receiveObservedValue( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsview_receiveObservedError( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsview_finishObserving( nsview_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsview_setObservation( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsview_observeValueForKeyPath( nsview_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsview_removeObserver( nsview_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsview_className( nsview_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsview_addChainedObservers( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsview_addObserverBlock( nsview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsview_addObservationTransformer( nsview_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsview_setNilValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsview_mutableArrayValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsview_mutableOrderedSetValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsview_mutableSetValueForKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsview_setValuesForKeysWithDictionary( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsview_willChange( nsview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsview_didChange( nsview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsview_observationInfo( nsview_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsview_autoContentAccessingProxy( nsview_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsview_coerceValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsview_setScriptingProperties( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsview_scriptingValueForSpecifier( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsview_scriptingProperties( nsview_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsview_coerceValueForScriptingProperties( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsview_valueAtIndex( nsview_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsview_valueWithName( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsview_valueWithUniqueID( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsview_insertValue( nsview_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsview_replaceValueAtIndex( nsview_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsview_removeValueAtIndex( nsview_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsview_classForPortCoder( nsview_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsview_performSelector( nsview_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsview_classCode( nsview_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsview_isEqualTo( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsview_isLessThanOrEqualTo( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsview_isLessThan( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsview_isGreaterThanOrEqualTo( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsview_isGreaterThan( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsview_isNotEqualTo( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsview_doesContain( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsview_isLike( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsview_isCaseInsensitiveLike( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsview_performSelectorOnMainThread( nsview_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsview_performSelectorInBackground( nsview_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsview_classDescriptionForDestinationKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsview_entityName( nsview_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsview_ownsDestinationObjectsForRelationshipKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsview_isToManyKey( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsview_removeObject( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsview_addObject( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsview_validateTakeValue( nsview_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsview_allPropertyKeys( nsview_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsview_clearProperties( nsview_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsview_flushKeyBindings( nsview_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsview_takeStoredValuesFromDictionary( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsview_isNSDate__( nsview_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsview_isNSString__( nsview_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsview_isNSCFConstantString__( nsview_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsview_isNSNumber__( nsview_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsview_isNSArray__( nsview_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsview_isNSDictionary__( nsview_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsview_isNSSet__( nsview_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsview_isNSData__( nsview_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsview_isNSObject__( nsview_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsview_isNSOrderedSet__( nsview_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsview_isNSTimeZone__( nsview_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsview_isNSValue__( nsview_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsview_description( nsview_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsview_doesNotRecognizeSelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsview_methodSignatureForSelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsview_autorelease( nsview_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsview_copy( nsview_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsview_finalize( nsview_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsview_isEqual( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsview_class( nsview_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsview_self( nsview_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsview_isProxy( nsview_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsview_isKindOfClass( nsview_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsview_isMemberOfClass( nsview_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsview_conformsToProtocol( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsview_respondsToSelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsview_zone( nsview_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsview_hash( nsview_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsview_superclass( nsview_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsview_debugDescription( nsview_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsview_retainWeakReference( nsview_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsview_allowsWeakReference( nsview_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsview_isFault( nsview_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsview_forwardInvocation( nsview_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsview_forwardingTargetForSelector( nsview_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsview_mutableCopy( nsview_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsview_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsview_new( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingAlignmentRectInsets @ :
nsobject_t 			nsview_keyPathsForValuesAffectingAlignmentRectInsets( );

// Signature from Objective-C Runtime: @ defaultAnimationForKey: @ : @
nsobject_t 			nsview_defaultAnimationForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesInvalidatingDisplay @ :
nsobject_t 			nsview_keyPathsForValuesInvalidatingDisplay( );

// Signature from Objective-C Runtime: c requiresConstraintBasedLayout @ :
char 				nsview_requiresConstraintBasedLayout( );

// Signature from Objective-C Runtime: @ keyPathsForValuesInvalidatingConstraints @ :
nsobject_t 			nsview_keyPathsForValuesInvalidatingConstraints( );

// Signature from Objective-C Runtime: @ keyPathsForValuesInvalidatingIntrinsicContentSize @ :
nsobject_t 			nsview_keyPathsForValuesInvalidatingIntrinsicContentSize( );

// Signature from Objective-C Runtime: @ focusView @ :
nsobject_t 			nsview_focusView( );

// Signature from Objective-C Runtime: Q defaultFocusRingType @ :
unsigned long long 	nsview_defaultFocusRingType( );

// Signature from Objective-C Runtime: @ defaultMenu @ :
nsobject_t 			nsview_defaultMenu( );

// Signature from Objective-C Runtime: c isCompatibleWithResponsiveScrolling @ :
char 				nsview_isCompatibleWithResponsiveScrolling( );

// Signature from Objective-C Runtime: @ keyPathsForValuesInvalidatingLayout @ :
nsobject_t 			nsview_keyPathsForValuesInvalidatingLayout( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfHidden @ :
char 				nsview_automaticallyNotifiesObserversOfHidden( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfHiddenOrHasHiddenAncestor @ :
char 				nsview_automaticallyNotifiesObserversOfHiddenOrHasHiddenAncestor( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfWantsLayer @ :
char 				nsview_automaticallyNotifiesObserversOfWantsLayer( );

// Signature from Objective-C Runtime: q default_semanticContext @ :
long long 			nsview_default_semanticContext( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingUserInterfaceLayoutDirection @ :
nsobject_t 			nsview_keyPathsForValuesAffectingUserInterfaceLayoutDirection( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOf_userInterfaceLayoutDirectionPropagatesToDescendants @ :
char 				nsview_automaticallyNotifiesObserversOf_userInterfaceLayoutDirectionPropagatesToDescendants( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOf_recommendedDrawableSize @ :
char 				nsview_automaticallyNotifiesObserversOf_recommendedDrawableSize( );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingFunctionRow @ :
nsobject_t 			nsview_keyPathsForValuesAffectingFunctionRow( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOf_titlebarOverhang @ :
char 				nsview_automaticallyNotifiesObserversOf_titlebarOverhang( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfTouchBar @ :
char 				nsview_automaticallyNotifiesObserversOfTouchBar( );

// Signature from Objective-C Runtime: c automaticallyTracksDependenciesOnValueForKey: @ : @
char 				nsview_automaticallyTracksDependenciesOnValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ restorableStateKeyPaths @ :
nsobject_t 			nsview_restorableStateKeyPaths( );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversOfServicesRequestor @ :
char 				nsview_automaticallyNotifiesObserversOfServicesRequestor( );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsview_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsview_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsview_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsview_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsview_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsview_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsview_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsview_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsview_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsview_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsview_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsview_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsview_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsview_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsview_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsview_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsview_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsview_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsview_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsview_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsview_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsview_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsview_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsview_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsview_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsview_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsview_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsview_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsview_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsview_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsview_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsview_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsview_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsview_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsview_t 			nsview_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsview_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsview_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsview_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsview_instancesRespondToSelector( nsselector_t arg0 );

#endif