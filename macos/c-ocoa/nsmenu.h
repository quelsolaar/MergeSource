/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSMENU_HEADER
#define SHIMMER_C_OCOA_NSMENU_HEADER

typedef void*	nsmenu_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsmenu_copyWithZone( nsmenu_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} size @ :
CGSize 				nsmenu_size( nsmenu_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsmenu_dealloc( nsmenu_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsmenu_description( nsmenu_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsmenu_init( nsmenu_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsmenu_encodeWithCoder( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsmenu_initWithCoder( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ delegate @ :
nsobject_t 			nsmenu_delegate( nsmenu_t object );

// Signature from Objective-C Runtime: v setDelegate: @ : @
void 				nsmenu_setDelegate( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ itemAtIndex: @ : q
nsobject_t 			nsmenu_itemAtIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ itemArray @ :
nsobject_t 			nsmenu_itemArray( nsmenu_t object );

// Signature from Objective-C Runtime: @ identifier @ :
nsobject_t 			nsmenu_identifier( nsmenu_t object );

// Signature from Objective-C Runtime: v update @ :
void 				nsmenu_update( nsmenu_t object );

// Signature from Objective-C Runtime: @ initWithTitle: @ : @
nsobject_t 			nsmenu_initWithTitle( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v addItem: @ : @
void 				nsmenu_addItem( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setTitle: @ : @
void 				nsmenu_setTitle( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ supermenu @ :
nsobject_t 			nsmenu_supermenu( nsmenu_t object );

// Signature from Objective-C Runtime: v setIdentifier: @ : @
void 				nsmenu_setIdentifier( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q numberOfItems @ :
long long 			nsmenu_numberOfItems( nsmenu_t object );

// Signature from Objective-C Runtime: v removeItem: @ : @
void 				nsmenu_removeItem( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeAllItems @ :
void 				nsmenu_removeAllItems( nsmenu_t object );

// Signature from Objective-C Runtime: @ title @ :
nsobject_t 			nsmenu_title( nsmenu_t object );

// Signature from Objective-C Runtime: @ effectiveAppearance @ :
nsobject_t 			nsmenu_effectiveAppearance( nsmenu_t object );

// Signature from Objective-C Runtime: q userInterfaceLayoutDirection @ :
long long 			nsmenu_userInterfaceLayoutDirection( nsmenu_t object );

// Signature from Objective-C Runtime: q indexOfItem: @ : @
long long 			nsmenu_indexOfItem( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c autoenablesItems @ :
char 				nsmenu_autoenablesItems( nsmenu_t object );

// Signature from Objective-C Runtime: @ appearance @ :
nsobject_t 			nsmenu_appearance( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySubrole: @ : @
void 				nsmenu_setAccessibilitySubrole( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setUserInterfaceLayoutDirection: @ : q
void 				nsmenu_setUserInterfaceLayoutDirection( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilitySubrole @ :
nsobject_t 			nsmenu_accessibilitySubrole( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityDecrementButton @ :
nsobject_t 			nsmenu_accessibilityDecrementButton( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityIncrementButton @ :
nsobject_t 			nsmenu_accessibilityIncrementButton( nsmenu_t object );

// Signature from Objective-C Runtime: v removeItemAtIndex: @ : q
void 				nsmenu_removeItemAtIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityParent @ :
nsobject_t 			nsmenu_accessibilityParent( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityChildren @ :
nsobject_t 			nsmenu_accessibilityChildren( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityRole @ :
nsobject_t 			nsmenu_accessibilityRole( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityLabel @ :
nsobject_t 			nsmenu_accessibilityLabel( nsmenu_t object );

// Signature from Objective-C Runtime: q accessibilityIndex @ :
long long 			nsmenu_accessibilityIndex( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityCustomActions @ :
nsobject_t 			nsmenu_accessibilityCustomActions( nsmenu_t object );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrame @ :
CGRect 				nsmenu_accessibilityFrame( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityIsIgnored @ :
char 				nsmenu_accessibilityIsIgnored( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityChildrenInNavigationOrder @ :
nsobject_t 			nsmenu_accessibilityChildrenInNavigationOrder( nsmenu_t object );

// Signature from Objective-C Runtime: c isAccessibilityElement @ :
char 				nsmenu_isAccessibilityElement( nsmenu_t object );

// Signature from Objective-C Runtime: v insertItem:atIndex: @ : @ q
void 				nsmenu_insertItem( nsmenu_t object, nsobject_t arg0, long long arg1 );

// Signature from Objective-C Runtime: c performKeyEquivalent: @ : @
char 				nsmenu_performKeyEquivalent( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityRowCount @ :
long long 			nsmenu_accessibilityRowCount( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityVisibleChildren @ :
nsobject_t 			nsmenu_accessibilityVisibleChildren( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityIndex: @ : q
void 				nsmenu_setAccessibilityIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRoleDescription @ :
nsobject_t 			nsmenu_accessibilityRoleDescription( nsmenu_t object );

// Signature from Objective-C Runtime: q accessibilityColumnCount @ :
long long 			nsmenu_accessibilityColumnCount( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilitySelectedChildren @ :
nsobject_t 			nsmenu_accessibilitySelectedChildren( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedChildren: @ : @
void 				nsmenu_setAccessibilitySelectedChildren( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedCells @ :
nsobject_t 			nsmenu_accessibilitySelectedCells( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsmenu_accessibilitySupportsOverriddenAttributes( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsmenu_accessibilitySetOverrideValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setAccessibilityLabel: @ : @
void 				nsmenu_setAccessibilityLabel( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ font @ :
nsobject_t 			nsmenu_font( nsmenu_t object );

// Signature from Objective-C Runtime: v setFont: @ : @
void 				nsmenu_setFont( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v sizeToFit @ :
void 				nsmenu_sizeToFit( nsmenu_t object );

// Signature from Objective-C Runtime: q indexOfItemWithTarget:andAction: @ : @ :
long long 			nsmenu_indexOfItemWithTarget( nsmenu_t object, nsobject_t arg0, nsselector_t arg1 );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsmenu_userInterfaceItemIdentifier( nsmenu_t object );

// Signature from Objective-C Runtime: v performActionForItemAtIndex: @ : q
void 				nsmenu_performActionForItemAtIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: c isAccessibilityFocused @ :
char 				nsmenu_isAccessibilityFocused( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityIdentifier @ :
nsobject_t 			nsmenu_accessibilityIdentifier( nsmenu_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityLayoutPointForScreenPoint: @ : {CGPoint=dd}
CGPoint 			nsmenu_accessibilityLayoutPointForScreenPoint( nsmenu_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityLayoutSizeForScreenSize: @ : {CGSize=dd}
CGSize 				nsmenu_accessibilityLayoutSizeForScreenSize( nsmenu_t object, CGSize arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityScreenPointForLayoutPoint: @ : {CGPoint=dd}
CGPoint 			nsmenu_accessibilityScreenPointForLayoutPoint( nsmenu_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {CGSize=dd} accessibilityScreenSizeForLayoutSize: @ : {CGSize=dd}
CGSize 				nsmenu_accessibilityScreenSizeForLayoutSize( nsmenu_t object, CGSize arg0 );

// Signature from Objective-C Runtime: @ accessibilityCellForColumn:row: @ : q q
nsobject_t 			nsmenu_accessibilityCellForColumn( nsmenu_t object, long long arg0, long long arg1 );

// Signature from Objective-C Runtime: @ accessibilityAttributedStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsmenu_accessibilityAttributedStringForRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForLine: @ : q
_NSRange 			nsmenu_accessibilityRangeForLine( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityStringForRange: @ : {_NSRange=QQ}
nsobject_t 			nsmenu_accessibilityStringForRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForPosition: @ : {CGPoint=dd}
_NSRange 			nsmenu_accessibilityRangeForPosition( nsmenu_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRangeForIndex: @ : q
_NSRange 			nsmenu_accessibilityRangeForIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameForRange: @ : {_NSRange=QQ}
CGRect 				nsmenu_accessibilityFrameForRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilityRTFForRange: @ : {_NSRange=QQ}
nsobject_t 			nsmenu_accessibilityRTFForRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityStyleRangeForIndex: @ : q
_NSRange 			nsmenu_accessibilityStyleRangeForIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityLineForIndex: @ : q
long long 			nsmenu_accessibilityLineForIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: c accessibilityPerformCancel @ :
char 				nsmenu_accessibilityPerformCancel( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformConfirm @ :
char 				nsmenu_accessibilityPerformConfirm( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDecrement @ :
char 				nsmenu_accessibilityPerformDecrement( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformDelete @ :
char 				nsmenu_accessibilityPerformDelete( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformIncrement @ :
char 				nsmenu_accessibilityPerformIncrement( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPick @ :
char 				nsmenu_accessibilityPerformPick( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformPress @ :
char 				nsmenu_accessibilityPerformPress( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformRaise @ :
char 				nsmenu_accessibilityPerformRaise( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowAlternateUI @ :
char 				nsmenu_accessibilityPerformShowAlternateUI( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowDefaultUI @ :
char 				nsmenu_accessibilityPerformShowDefaultUI( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenu @ :
char 				nsmenu_accessibilityPerformShowMenu( nsmenu_t object );

// Signature from Objective-C Runtime: c isAccessibilitySelectorAllowed: @ : :
char 				nsmenu_isAccessibilitySelectorAllowed( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityElement: @ : c
void 				nsmenu_setAccessibilityElement( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFrame: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsmenu_setAccessibilityFrame( nsmenu_t object, CGRect arg0 );

// Signature from Objective-C Runtime: v setAccessibilityFocused: @ : c
void 				nsmenu_setAccessibilityFocused( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: {CGPoint=dd} accessibilityActivationPoint @ :
CGPoint 			nsmenu_accessibilityActivationPoint( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityActivationPoint: @ : {CGPoint=dd}
void 				nsmenu_setAccessibilityActivationPoint( nsmenu_t object, CGPoint arg0 );

// Signature from Objective-C Runtime: @ accessibilityTopLevelUIElement @ :
nsobject_t 			nsmenu_accessibilityTopLevelUIElement( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityTopLevelUIElement: @ : @
void 				nsmenu_setAccessibilityTopLevelUIElement( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityURL @ :
nsobject_t 			nsmenu_accessibilityURL( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityURL: @ : @
void 				nsmenu_setAccessibilityURL( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValue @ :
nsobject_t 			nsmenu_accessibilityValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityValue: @ : @
void 				nsmenu_setAccessibilityValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityValueDescription @ :
nsobject_t 			nsmenu_accessibilityValueDescription( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityValueDescription: @ : @
void 				nsmenu_setAccessibilityValueDescription( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityVisibleChildren: @ : @
void 				nsmenu_setAccessibilityVisibleChildren( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitle @ :
nsobject_t 			nsmenu_accessibilityTitle( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitle: @ : @
void 				nsmenu_setAccessibilityTitle( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTitleUIElement @ :
nsobject_t 			nsmenu_accessibilityTitleUIElement( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityTitleUIElement: @ : @
void 				nsmenu_setAccessibilityTitleUIElement( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContents @ :
nsobject_t 			nsmenu_accessibilityNextContents( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityNextContents: @ : @
void 				nsmenu_setAccessibilityNextContents( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityOrientation @ :
long long 			nsmenu_accessibilityOrientation( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrientation: @ : q
void 				nsmenu_setAccessibilityOrientation( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityOverflowButton @ :
nsobject_t 			nsmenu_accessibilityOverflowButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverflowButton: @ : @
void 				nsmenu_setAccessibilityOverflowButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityParent: @ : @
void 				nsmenu_setAccessibilityParent( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPlaceholderValue @ :
nsobject_t 			nsmenu_accessibilityPlaceholderValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityPlaceholderValue: @ : @
void 				nsmenu_setAccessibilityPlaceholderValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContents @ :
nsobject_t 			nsmenu_accessibilityPreviousContents( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityPreviousContents: @ : @
void 				nsmenu_setAccessibilityPreviousContents( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRole: @ : @
void 				nsmenu_setAccessibilityRole( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRoleDescription: @ : @
void 				nsmenu_setAccessibilityRoleDescription( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchButton @ :
nsobject_t 			nsmenu_accessibilitySearchButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchButton: @ : @
void 				nsmenu_setAccessibilitySearchButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySearchMenu @ :
nsobject_t 			nsmenu_accessibilitySearchMenu( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySearchMenu: @ : @
void 				nsmenu_setAccessibilitySearchMenu( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilitySelected @ :
char 				nsmenu_isAccessibilitySelected( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelected: @ : c
void 				nsmenu_setAccessibilitySelected( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityServesAsTitleForUIElements @ :
nsobject_t 			nsmenu_accessibilityServesAsTitleForUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityServesAsTitleForUIElements: @ : @
void 				nsmenu_setAccessibilityServesAsTitleForUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityShownMenu @ :
nsobject_t 			nsmenu_accessibilityShownMenu( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityShownMenu: @ : @
void 				nsmenu_setAccessibilityShownMenu( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinValue @ :
nsobject_t 			nsmenu_accessibilityMinValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinValue: @ : @
void 				nsmenu_setAccessibilityMinValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMaxValue @ :
nsobject_t 			nsmenu_accessibilityMaxValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMaxValue: @ : @
void 				nsmenu_setAccessibilityMaxValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLinkedUIElements @ :
nsobject_t 			nsmenu_accessibilityLinkedUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityLinkedUIElements: @ : @
void 				nsmenu_setAccessibilityLinkedUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindow @ :
nsobject_t 			nsmenu_accessibilityWindow( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindow: @ : @
void 				nsmenu_setAccessibilityWindow( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIdentifier: @ : @
void 				nsmenu_setAccessibilityIdentifier( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHelp @ :
nsobject_t 			nsmenu_accessibilityHelp( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHelp: @ : @
void 				nsmenu_setAccessibilityHelp( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityFilename @ :
nsobject_t 			nsmenu_accessibilityFilename( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityFilename: @ : @
void 				nsmenu_setAccessibilityFilename( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityExpanded @ :
char 				nsmenu_isAccessibilityExpanded( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityExpanded: @ : c
void 				nsmenu_setAccessibilityExpanded( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEdited @ :
char 				nsmenu_isAccessibilityEdited( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityEdited: @ : c
void 				nsmenu_setAccessibilityEdited( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnabled @ :
char 				nsmenu_isAccessibilityEnabled( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnabled: @ : c
void 				nsmenu_setAccessibilityEnabled( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildren: @ : @
void 				nsmenu_setAccessibilityChildren( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityChildrenInNavigationOrder: @ : @
void 				nsmenu_setAccessibilityChildrenInNavigationOrder( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityClearButton @ :
nsobject_t 			nsmenu_accessibilityClearButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityClearButton: @ : @
void 				nsmenu_setAccessibilityClearButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCancelButton @ :
nsobject_t 			nsmenu_accessibilityCancelButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityCancelButton: @ : @
void 				nsmenu_setAccessibilityCancelButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityProtectedContent @ :
char 				nsmenu_isAccessibilityProtectedContent( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityProtectedContent: @ : c
void 				nsmenu_setAccessibilityProtectedContent( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityContents @ :
nsobject_t 			nsmenu_accessibilityContents( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityContents: @ : @
void 				nsmenu_setAccessibilityContents( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAlternateUIVisible @ :
char 				nsmenu_isAccessibilityAlternateUIVisible( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityAlternateUIVisible: @ : c
void 				nsmenu_setAccessibilityAlternateUIVisible( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedFocusElements @ :
nsobject_t 			nsmenu_accessibilitySharedFocusElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedFocusElements: @ : @
void 				nsmenu_setAccessibilitySharedFocusElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityRequired @ :
char 				nsmenu_isAccessibilityRequired( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityRequired: @ : c
void 				nsmenu_setAccessibilityRequired( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomRotors @ :
nsobject_t 			nsmenu_accessibilityCustomRotors( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomRotors: @ : @
void 				nsmenu_setAccessibilityCustomRotors( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityApplicationFocusedUIElement @ :
nsobject_t 			nsmenu_accessibilityApplicationFocusedUIElement( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityApplicationFocusedUIElement: @ : @
void 				nsmenu_setAccessibilityApplicationFocusedUIElement( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMainWindow @ :
nsobject_t 			nsmenu_accessibilityMainWindow( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMainWindow: @ : @
void 				nsmenu_setAccessibilityMainWindow( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityHidden @ :
char 				nsmenu_isAccessibilityHidden( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHidden: @ : c
void 				nsmenu_setAccessibilityHidden( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: c isAccessibilityFrontmost @ :
char 				nsmenu_isAccessibilityFrontmost( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrontmost: @ : c
void 				nsmenu_setAccessibilityFrontmost( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFocusedWindow @ :
nsobject_t 			nsmenu_accessibilityFocusedWindow( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityFocusedWindow: @ : @
void 				nsmenu_setAccessibilityFocusedWindow( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWindows @ :
nsobject_t 			nsmenu_accessibilityWindows( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityWindows: @ : @
void 				nsmenu_setAccessibilityWindows( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityExtrasMenuBar @ :
nsobject_t 			nsmenu_accessibilityExtrasMenuBar( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityExtrasMenuBar: @ : @
void 				nsmenu_setAccessibilityExtrasMenuBar( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMenuBar @ :
nsobject_t 			nsmenu_accessibilityMenuBar( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMenuBar: @ : @
void 				nsmenu_setAccessibilityMenuBar( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnTitles @ :
nsobject_t 			nsmenu_accessibilityColumnTitles( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnTitles: @ : @
void 				nsmenu_setAccessibilityColumnTitles( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityOrderedByRow @ :
char 				nsmenu_isAccessibilityOrderedByRow( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityOrderedByRow: @ : c
void 				nsmenu_setAccessibilityOrderedByRow( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityHorizontalUnits @ :
long long 			nsmenu_accessibilityHorizontalUnits( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnits: @ : q
void 				nsmenu_setAccessibilityHorizontalUnits( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: q accessibilityVerticalUnits @ :
long long 			nsmenu_accessibilityVerticalUnits( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnits: @ : q
void 				nsmenu_setAccessibilityVerticalUnits( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalUnitDescription @ :
nsobject_t 			nsmenu_accessibilityHorizontalUnitDescription( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalUnitDescription: @ : @
void 				nsmenu_setAccessibilityHorizontalUnitDescription( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalUnitDescription @ :
nsobject_t 			nsmenu_accessibilityVerticalUnitDescription( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalUnitDescription: @ : @
void 				nsmenu_setAccessibilityVerticalUnitDescription( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHandles @ :
nsobject_t 			nsmenu_accessibilityHandles( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHandles: @ : @
void 				nsmenu_setAccessibilityHandles( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityWarningValue @ :
nsobject_t 			nsmenu_accessibilityWarningValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityWarningValue: @ : @
void 				nsmenu_setAccessibilityWarningValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCriticalValue @ :
nsobject_t 			nsmenu_accessibilityCriticalValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityCriticalValue: @ : @
void 				nsmenu_setAccessibilityCriticalValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityDisclosed @ :
char 				nsmenu_isAccessibilityDisclosed( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosed: @ : c
void 				nsmenu_setAccessibilityDisclosed( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedByRow @ :
nsobject_t 			nsmenu_accessibilityDisclosedByRow( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedByRow: @ : @
void 				nsmenu_setAccessibilityDisclosedByRow( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDisclosedRows @ :
nsobject_t 			nsmenu_accessibilityDisclosedRows( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosedRows: @ : @
void 				nsmenu_setAccessibilityDisclosedRows( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityDisclosureLevel @ :
long long 			nsmenu_accessibilityDisclosureLevel( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityDisclosureLevel: @ : q
void 				nsmenu_setAccessibilityDisclosureLevel( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerUIElements @ :
nsobject_t 			nsmenu_accessibilityMarkerUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerUIElements: @ : @
void 				nsmenu_setAccessibilityMarkerUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerValues @ :
nsobject_t 			nsmenu_accessibilityMarkerValues( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerValues: @ : @
void 				nsmenu_setAccessibilityMarkerValues( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerGroupUIElement @ :
nsobject_t 			nsmenu_accessibilityMarkerGroupUIElement( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerGroupUIElement: @ : @
void 				nsmenu_setAccessibilityMarkerGroupUIElement( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityUnits @ :
long long 			nsmenu_accessibilityUnits( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnits: @ : q
void 				nsmenu_setAccessibilityUnits( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUnitDescription @ :
nsobject_t 			nsmenu_accessibilityUnitDescription( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityUnitDescription: @ : @
void 				nsmenu_setAccessibilityUnitDescription( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilityRulerMarkerType @ :
long long 			nsmenu_accessibilityRulerMarkerType( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityRulerMarkerType: @ : q
void 				nsmenu_setAccessibilityRulerMarkerType( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityMarkerTypeDescription @ :
nsobject_t 			nsmenu_accessibilityMarkerTypeDescription( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMarkerTypeDescription: @ : @
void 				nsmenu_setAccessibilityMarkerTypeDescription( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHorizontalScrollBar @ :
nsobject_t 			nsmenu_accessibilityHorizontalScrollBar( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHorizontalScrollBar: @ : @
void 				nsmenu_setAccessibilityHorizontalScrollBar( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVerticalScrollBar @ :
nsobject_t 			nsmenu_accessibilityVerticalScrollBar( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVerticalScrollBar: @ : @
void 				nsmenu_setAccessibilityVerticalScrollBar( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAllowedValues @ :
nsobject_t 			nsmenu_accessibilityAllowedValues( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityAllowedValues: @ : @
void 				nsmenu_setAccessibilityAllowedValues( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityLabelUIElements @ :
nsobject_t 			nsmenu_accessibilityLabelUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelUIElements: @ : @
void 				nsmenu_setAccessibilityLabelUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: f accessibilityLabelValue @ :
float 				nsmenu_accessibilityLabelValue( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityLabelValue: @ : f
void 				nsmenu_setAccessibilityLabelValue( nsmenu_t object, float arg0 );

// Signature from Objective-C Runtime: @ accessibilitySplitters @ :
nsobject_t 			nsmenu_accessibilitySplitters( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySplitters: @ : @
void 				nsmenu_setAccessibilitySplitters( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityDecrementButton: @ : @
void 				nsmenu_setAccessibilityDecrementButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityIncrementButton: @ : @
void 				nsmenu_setAccessibilityIncrementButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTabs @ :
nsobject_t 			nsmenu_accessibilityTabs( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityTabs: @ : @
void 				nsmenu_setAccessibilityTabs( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeader @ :
nsobject_t 			nsmenu_accessibilityHeader( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeader: @ : @
void 				nsmenu_setAccessibilityHeader( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilityColumnCount: @ : q
void 				nsmenu_setAccessibilityColumnCount( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAccessibilityRowCount: @ : q
void 				nsmenu_setAccessibilityRowCount( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumns @ :
nsobject_t 			nsmenu_accessibilityColumns( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumns: @ : @
void 				nsmenu_setAccessibilityColumns( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityRows @ :
nsobject_t 			nsmenu_accessibilityRows( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityRows: @ : @
void 				nsmenu_setAccessibilityRows( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleRows @ :
nsobject_t 			nsmenu_accessibilityVisibleRows( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleRows: @ : @
void 				nsmenu_setAccessibilityVisibleRows( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedRows @ :
nsobject_t 			nsmenu_accessibilitySelectedRows( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedRows: @ : @
void 				nsmenu_setAccessibilitySelectedRows( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleColumns @ :
nsobject_t 			nsmenu_accessibilityVisibleColumns( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleColumns: @ : @
void 				nsmenu_setAccessibilityVisibleColumns( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedColumns @ :
nsobject_t 			nsmenu_accessibilitySelectedColumns( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedColumns: @ : @
void 				nsmenu_setAccessibilitySelectedColumns( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q accessibilitySortDirection @ :
long long 			nsmenu_accessibilitySortDirection( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySortDirection: @ : q
void 				nsmenu_setAccessibilitySortDirection( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityRowHeaderUIElements @ :
nsobject_t 			nsmenu_accessibilityRowHeaderUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowHeaderUIElements: @ : @
void 				nsmenu_setAccessibilityRowHeaderUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setAccessibilitySelectedCells: @ : @
void 				nsmenu_setAccessibilitySelectedCells( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityVisibleCells @ :
nsobject_t 			nsmenu_accessibilityVisibleCells( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCells: @ : @
void 				nsmenu_setAccessibilityVisibleCells( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityColumnHeaderUIElements @ :
nsobject_t 			nsmenu_accessibilityColumnHeaderUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnHeaderUIElements: @ : @
void 				nsmenu_setAccessibilityColumnHeaderUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityRowIndexRange @ :
_NSRange 			nsmenu_accessibilityRowIndexRange( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityRowIndexRange: @ : {_NSRange=QQ}
void 				nsmenu_setAccessibilityRowIndexRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityColumnIndexRange @ :
_NSRange 			nsmenu_accessibilityColumnIndexRange( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityColumnIndexRange: @ : {_NSRange=QQ}
void 				nsmenu_setAccessibilityColumnIndexRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityInsertionPointLineNumber @ :
long long 			nsmenu_accessibilityInsertionPointLineNumber( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityInsertionPointLineNumber: @ : q
void 				nsmenu_setAccessibilityInsertionPointLineNumber( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySharedCharacterRange @ :
_NSRange 			nsmenu_accessibilitySharedCharacterRange( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedCharacterRange: @ : {_NSRange=QQ}
void 				nsmenu_setAccessibilitySharedCharacterRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySharedTextUIElements @ :
nsobject_t 			nsmenu_accessibilitySharedTextUIElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySharedTextUIElements: @ : @
void 				nsmenu_setAccessibilitySharedTextUIElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilityVisibleCharacterRange @ :
_NSRange 			nsmenu_accessibilityVisibleCharacterRange( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityVisibleCharacterRange: @ : {_NSRange=QQ}
void 				nsmenu_setAccessibilityVisibleCharacterRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: q accessibilityNumberOfCharacters @ :
long long 			nsmenu_accessibilityNumberOfCharacters( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityNumberOfCharacters: @ : q
void 				nsmenu_setAccessibilityNumberOfCharacters( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedText @ :
nsobject_t 			nsmenu_accessibilitySelectedText( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedText: @ : @
void 				nsmenu_setAccessibilitySelectedText( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} accessibilitySelectedTextRange @ :
_NSRange 			nsmenu_accessibilitySelectedTextRange( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRange: @ : {_NSRange=QQ}
void 				nsmenu_setAccessibilitySelectedTextRange( nsmenu_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ accessibilitySelectedTextRanges @ :
nsobject_t 			nsmenu_accessibilitySelectedTextRanges( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySelectedTextRanges: @ : @
void 				nsmenu_setAccessibilitySelectedTextRanges( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityToolbarButton @ :
nsobject_t 			nsmenu_accessibilityToolbarButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityToolbarButton: @ : @
void 				nsmenu_setAccessibilityToolbarButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityModal @ :
char 				nsmenu_isAccessibilityModal( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityModal: @ : c
void 				nsmenu_setAccessibilityModal( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityProxy @ :
nsobject_t 			nsmenu_accessibilityProxy( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityProxy: @ : @
void 				nsmenu_setAccessibilityProxy( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMain @ :
char 				nsmenu_isAccessibilityMain( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMain: @ : c
void 				nsmenu_setAccessibilityMain( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFullScreenButton @ :
nsobject_t 			nsmenu_accessibilityFullScreenButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityFullScreenButton: @ : @
void 				nsmenu_setAccessibilityFullScreenButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityGrowArea @ :
nsobject_t 			nsmenu_accessibilityGrowArea( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityGrowArea: @ : @
void 				nsmenu_setAccessibilityGrowArea( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDocument @ :
nsobject_t 			nsmenu_accessibilityDocument( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityDocument: @ : @
void 				nsmenu_setAccessibilityDocument( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityDefaultButton @ :
nsobject_t 			nsmenu_accessibilityDefaultButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityDefaultButton: @ : @
void 				nsmenu_setAccessibilityDefaultButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCloseButton @ :
nsobject_t 			nsmenu_accessibilityCloseButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityCloseButton: @ : @
void 				nsmenu_setAccessibilityCloseButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityZoomButton @ :
nsobject_t 			nsmenu_accessibilityZoomButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityZoomButton: @ : @
void 				nsmenu_setAccessibilityZoomButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityMinimizeButton @ :
nsobject_t 			nsmenu_accessibilityMinimizeButton( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimizeButton: @ : @
void 				nsmenu_setAccessibilityMinimizeButton( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMinimized @ :
char 				nsmenu_isAccessibilityMinimized( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMinimized: @ : c
void 				nsmenu_setAccessibilityMinimized( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: v setAccessibilityCustomActions: @ : @
void 				nsmenu_setAccessibilityCustomActions( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ insertItemWithTitle:action:keyEquivalent:atIndex: @ : @ : @ q
nsobject_t 			nsmenu_insertItemWithTitle( nsmenu_t object, nsobject_t arg0, nsselector_t arg1, nsobject_t arg2, long long arg3 );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsmenu_setUserInterfaceItemIdentifier( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ itemWithTitle: @ : @
nsobject_t 			nsmenu_itemWithTitle( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q indexOfItemWithSubmenu: @ : @
long long 			nsmenu_indexOfItemWithSubmenu( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addItemWithTitle:action:keyEquivalent: @ : @ : @
nsobject_t 			nsmenu_addItemWithTitle( nsmenu_t object, nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v setAppearance: @ : @
void 				nsmenu_setAppearance( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d minimumWidth @ :
double 				nsmenu_minimumWidth( nsmenu_t object );

// Signature from Objective-C Runtime: c showsStateColumn @ :
char 				nsmenu_showsStateColumn( nsmenu_t object );

// Signature from Objective-C Runtime: @ appearanceParent @ :
nsobject_t 			nsmenu_appearanceParent( nsmenu_t object );

// Signature from Objective-C Runtime: v setAppearanceParent: @ : @
void 				nsmenu_setAppearanceParent( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ storyboard @ :
nsobject_t 			nsmenu_storyboard( nsmenu_t object );

// Signature from Objective-C Runtime: v presentControllerAsModalWindow: @ : @
void 				nsmenu_presentControllerAsModalWindow( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityResultsForSearchPredicate: @ : @
nsobject_t 			nsmenu_accessibilityResultsForSearchPredicate( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForColumnIndex: @ : q
nsobject_t 			nsmenu_accessibilityHeaderForColumnIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderForRowIndex: @ : q
nsobject_t 			nsmenu_accessibilityHeaderForRowIndex( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityAuditIssues @ :
nsobject_t 			nsmenu_accessibilityAuditIssues( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityAuditIssues: @ : @
void 				nsmenu_setAccessibilityAuditIssues( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityAutoInteractable @ :
char 				nsmenu_isAccessibilityAutoInteractable( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityAutoInteractable: @ : c
void 				nsmenu_setAccessibilityAutoInteractable( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: q accessibilityContainerType @ :
long long 			nsmenu_accessibilityContainerType( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityContainerType: @ : q
void 				nsmenu_setAccessibilityContainerType( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityUserInputLabels @ :
nsobject_t 			nsmenu_accessibilityUserInputLabels( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityUserInputLabels: @ : @
void 				nsmenu_setAccessibilityUserInputLabels( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedUserInputLabels @ :
nsobject_t 			nsmenu_accessibilityAttributedUserInputLabels( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityAttributedUserInputLabels: @ : @
void 				nsmenu_setAccessibilityAttributedUserInputLabels( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityCustomChoosers @ :
nsobject_t 			nsmenu_accessibilityCustomChoosers( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityCustomChoosers: @ : @
void 				nsmenu_setAccessibilityCustomChoosers( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityEnhancedUserInterface @ :
char 				nsmenu_isAccessibilityEnhancedUserInterface( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityEnhancedUserInterface: @ : c
void 				nsmenu_setAccessibilityEnhancedUserInterface( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilityFunctionRowTopLevelElements @ :
nsobject_t 			nsmenu_accessibilityFunctionRowTopLevelElements( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityFunctionRowTopLevelElements: @ : @
void 				nsmenu_setAccessibilityFunctionRowTopLevelElements( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isAccessibilityMimicNativeView @ :
char 				nsmenu_isAccessibilityMimicNativeView( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityMimicNativeView: @ : c
void 				nsmenu_setAccessibilityMimicNativeView( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: @ accessibilitySections @ :
nsobject_t 			nsmenu_accessibilitySections( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilitySections: @ : @
void 				nsmenu_setAccessibilitySections( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityHeaderGroup @ :
nsobject_t 			nsmenu_accessibilityHeaderGroup( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityHeaderGroup: @ : @
void 				nsmenu_setAccessibilityHeaderGroup( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} accessibilityFrameInParentSpace @ :
CGRect 				nsmenu_accessibilityFrameInParentSpace( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityFrameInParentSpace: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nsmenu_setAccessibilityFrameInParentSpace( nsmenu_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ accessibilityPreviousContentSibling @ :
nsobject_t 			nsmenu_accessibilityPreviousContentSibling( nsmenu_t object );

// Signature from Objective-C Runtime: v setPreviousContentSibling: @ : @
void 				nsmenu_setPreviousContentSibling( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityNextContentSibling @ :
nsobject_t 			nsmenu_accessibilityNextContentSibling( nsmenu_t object );

// Signature from Objective-C Runtime: v setNextContentSibling: @ : @
void 				nsmenu_setNextContentSibling( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingAbove @ :
nsobject_t 			nsmenu_accessibilityContentSiblingAbove( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingAbove: @ : @
void 				nsmenu_setAccessibilityContentSiblingAbove( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityContentSiblingBelow @ :
nsobject_t 			nsmenu_accessibilityContentSiblingBelow( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityContentSiblingBelow: @ : @
void 				nsmenu_setAccessibilityContentSiblingBelow( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityOverridesAlwaysTakePrecedence @ :
char 				nsmenu_accessibilityOverridesAlwaysTakePrecedence( nsmenu_t object );

// Signature from Objective-C Runtime: v setAccessibilityOverridesAlwaysTakePrecedence: @ : c
void 				nsmenu_setAccessibilityOverridesAlwaysTakePrecedence( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: q indexOfItemWithRepresentedObject: @ : @
long long 			nsmenu_indexOfItemWithRepresentedObject( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q indexOfItemWithTag: @ : q
long long 			nsmenu_indexOfItemWithTag( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: v setAutoenablesItems: @ : c
void 				nsmenu_setAutoenablesItems( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: q indexOfItemWithTitle: @ : @
long long 			nsmenu_indexOfItemWithTitle( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c popUpMenuPositioningItem:atLocation:inView: @ : @ {CGPoint=dd} @
char 				nsmenu_popUpMenuPositioningItem( nsmenu_t object, nsobject_t arg0, CGPoint arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v cancelTracking @ :
void 				nsmenu_cancelTracking( nsmenu_t object );

// Signature from Objective-C Runtime: v setShowsStateColumn: @ : c
void 				nsmenu_setShowsStateColumn( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: v helpRequested: @ : @
void 				nsmenu_helpRequested( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setSubmenu:forItem: @ : @ @
void 				nsmenu_setSubmenu( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setMenuRepresentation: @ : @
void 				nsmenu_setMenuRepresentation( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v recordKeyboardShortcutEvent:withKeyEquivalent:modifierMask:title: @ : @ @ Q @
void 				nsmenu_recordKeyboardShortcutEvent( nsmenu_t object, nsobject_t arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v itemChanged: @ : @
void 				nsmenu_itemChanged( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ attachedMenu @ :
nsobject_t 			nsmenu_attachedMenu( nsmenu_t object );

// Signature from Objective-C Runtime: c isAttached @ :
char 				nsmenu_isAttached( nsmenu_t object );

// Signature from Objective-C Runtime: {CGPoint=dd} locationForSubmenu: @ : @
CGPoint 			nsmenu_locationForSubmenu( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d menuBarHeight @ :
double 				nsmenu_menuBarHeight( nsmenu_t object );

// Signature from Objective-C Runtime: v setSupermenu: @ : @
void 				nsmenu_setSupermenu( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setItemArray: @ : @
void 				nsmenu_setItemArray( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ itemWithTag: @ : q
nsobject_t 			nsmenu_itemWithTag( nsmenu_t object, long long arg0 );

// Signature from Objective-C Runtime: v setMenuChangedMessagesEnabled: @ : c
void 				nsmenu_setMenuChangedMessagesEnabled( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: c menuChangedMessagesEnabled @ :
char 				nsmenu_menuChangedMessagesEnabled( nsmenu_t object );

// Signature from Objective-C Runtime: Q propertiesToUpdate @ :
unsigned long long 	nsmenu_propertiesToUpdate( nsmenu_t object );

// Signature from Objective-C Runtime: @ menuRepresentation @ :
nsobject_t 			nsmenu_menuRepresentation( nsmenu_t object );

// Signature from Objective-C Runtime: v setContextMenuRepresentation: @ : @
void 				nsmenu_setContextMenuRepresentation( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ contextMenuRepresentation @ :
nsobject_t 			nsmenu_contextMenuRepresentation( nsmenu_t object );

// Signature from Objective-C Runtime: v setTearOffMenuRepresentation: @ : @
void 				nsmenu_setTearOffMenuRepresentation( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ tearOffMenuRepresentation @ :
nsobject_t 			nsmenu_tearOffMenuRepresentation( nsmenu_t object );

// Signature from Objective-C Runtime: c isTornOff @ :
char 				nsmenu_isTornOff( nsmenu_t object );

// Signature from Objective-C Runtime: v setMinimumWidth: @ : d
void 				nsmenu_setMinimumWidth( nsmenu_t object, double arg0 );

// Signature from Objective-C Runtime: c allowsContextMenuPlugIns @ :
char 				nsmenu_allowsContextMenuPlugIns( nsmenu_t object );

// Signature from Objective-C Runtime: v setAllowsContextMenuPlugIns: @ : c
void 				nsmenu_setAllowsContextMenuPlugIns( nsmenu_t object, char arg0 );

// Signature from Objective-C Runtime: v highlightItem: @ : @
void 				nsmenu_highlightItem( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ highlightedItem @ :
nsobject_t 			nsmenu_highlightedItem( nsmenu_t object );

// Signature from Objective-C Runtime: v cancelTrackingWithoutAnimation @ :
void 				nsmenu_cancelTrackingWithoutAnimation( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsmenu_accessibilityOverriddenAttributes( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsmenu_accessibilityReplaceRange( nsmenu_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsmenu_accessibilityVisibleArea( nsmenu_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsmenu_accessibilityArrayAttributeCount( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsmenu_accessibilityIndexOfChild( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsmenu_accessibilityArrayAttributeValues( nsmenu_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsmenu_accessibilityParameterizedAttributeNames( nsmenu_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsmenu_accessibilityAttributeValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsmenu_accessibilityIndexForChildUIElementAttributeForParameter( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsmenu_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsmenu_accessibilityTemporaryChildren( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsmenu_accessibilityPerformShowMenuOfChild( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsmenu_accessibilityPresenterProcessIdentifier( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsmenu_accessibilityShouldUseUniqueId( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsmenu_accessibilitySupportsNotifications( nsmenu_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsmenu_accessibilityShouldSendNotification( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsmenu_accessibilityAllowsOverriddenAttributesWhenIgnored( nsmenu_t object );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsmenu_accessibilityEncodeOverriddenAttributes( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsmenu_accessibilityDecodeOverriddenAttributes( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsmenu_accessibilitySupportsCustomElementData( nsmenu_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsmenu_bind( nsmenu_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsmenu_awakeFromNib( nsmenu_t object );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsmenu_unbind( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsmenu_valueClassForBinding( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsmenu_NS_observationForKeyPath( nsmenu_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsmenu_NS_observationForKeyPaths( nsmenu_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsmenu_optionDescriptionsForBinding( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsmenu_exposedBindings( nsmenu_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsmenu_infoForBinding( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsmenu_prepareForInterfaceBuilder( nsmenu_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsmenu_accessibilityAddTemporaryChild( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsmenu_accessibilityRemoveTemporaryChild( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsmenu_NSLifeguard_autorelease( nsmenu_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsmenu_accessibilitySetPresenterProcessIdentifier( nsmenu_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsmenu_NS_tiledLayerVisibleRect( nsmenu_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsmenu_NS_addTiledLayerDescendent( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsmenu_NS_removeTiledLayerDescendent( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsmenu_CAMLTypeSupportedForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsmenu_CAMLTypeForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsmenu_CA_validateValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsmenu_encodeWithCAMLWriter( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsmenu_CA_interpolateValues( nsmenu_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsmenu_CAMLType( nsmenu_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsmenu_CA_archivingValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsmenu_CA_roundToIntegerFromValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsmenu_CA_addValue( nsmenu_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsmenu_CA_interpolateValue( nsmenu_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsmenu_CA_distanceToValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsmenu_CA_prepareRenderValue( nsmenu_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsmenu_CA_copyRenderValue( nsmenu_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsmenu_supportsRBSXPCSecureCoding( nsmenu_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsmenu_RBSIsXPCObject( nsmenu_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsmenu_NSRepresentation( nsmenu_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsmenu_supportsBSXPCSecureCoding( nsmenu_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsmenu_bs_isPlistableType( nsmenu_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsmenu_bs_secureEncoded( nsmenu_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsmenu_bs_encoded( nsmenu_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsmenu_classForCoder( nsmenu_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsmenu_replacementObjectForCoder( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsmenu_awakeAfterUsingCoder( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsmenu_implementsSelector( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsmenu_setObservationInfo( nsmenu_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsmenu_setValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsmenu_replacementObjectForPortCoder( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsmenu_willChangeValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsmenu_didChangeValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsmenu_dictionaryWithValuesForKeys( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsmenu_valueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsmenu_valueForUndefinedKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsmenu_classForKeyedArchiver( nsmenu_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsmenu_replacementObjectForKeyedArchiver( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsmenu_valueForKeyPath( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsmenu_addObserver( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsmenu_objectSpecifier( nsmenu_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsmenu_replacementObjectForArchiver( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsmenu_classForArchiver( nsmenu_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsmenu_attributeKeys( nsmenu_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsmenu_toOneRelationshipKeys( nsmenu_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsmenu_toManyRelationshipKeys( nsmenu_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsmenu_inverseForRelationshipKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsmenu_classDescription( nsmenu_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsmenu_copyScriptingValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsmenu_methodDescriptionForSelector( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsmenu_newScriptingObjectOfClass( nsmenu_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsmenu_handleQueryWithUnboundKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsmenu_handleTakeValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsmenu_storedValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsmenu_takeStoredValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsmenu_takeValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsmenu_valuesForKeys( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsmenu_takeValuesFromDictionary( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsmenu_unableToSetNilForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsmenu_keyValueBindingForKey( nsmenu_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsmenu_createKeyValueBindingForKey( nsmenu_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsmenu_mutableArrayValueForKeyPath( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsmenu_mutableOrderedSetValueForKeyPath( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsmenu_mutableSetValueForKeyPath( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsmenu_removeObservation( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsmenu_receiveObservedValue( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsmenu_receiveObservedError( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsmenu_finishObserving( nsmenu_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsmenu_setObservation( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsmenu_observeValueForKeyPath( nsmenu_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsmenu_removeObserver( nsmenu_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsmenu_className( nsmenu_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsmenu_addChainedObservers( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsmenu_addObserverBlock( nsmenu_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsmenu_addObservationTransformer( nsmenu_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsmenu_setNilValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsmenu_mutableArrayValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsmenu_mutableOrderedSetValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsmenu_mutableSetValueForKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsmenu_setValuesForKeysWithDictionary( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsmenu_willChange( nsmenu_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsmenu_didChange( nsmenu_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsmenu_observationInfo( nsmenu_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsmenu_autoContentAccessingProxy( nsmenu_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsmenu_coerceValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsmenu_setScriptingProperties( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsmenu_scriptingValueForSpecifier( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsmenu_scriptingProperties( nsmenu_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsmenu_coerceValueForScriptingProperties( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsmenu_valueAtIndex( nsmenu_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsmenu_valueWithName( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsmenu_valueWithUniqueID( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsmenu_insertValue( nsmenu_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsmenu_replaceValueAtIndex( nsmenu_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsmenu_removeValueAtIndex( nsmenu_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsmenu_classForPortCoder( nsmenu_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsmenu_performSelector( nsmenu_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsmenu_classCode( nsmenu_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsmenu_isEqualTo( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsmenu_isLessThanOrEqualTo( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsmenu_isLessThan( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsmenu_isGreaterThanOrEqualTo( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsmenu_isGreaterThan( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsmenu_isNotEqualTo( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsmenu_doesContain( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsmenu_isLike( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsmenu_isCaseInsensitiveLike( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsmenu_performSelectorOnMainThread( nsmenu_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsmenu_performSelectorInBackground( nsmenu_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsmenu_classDescriptionForDestinationKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsmenu_entityName( nsmenu_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsmenu_ownsDestinationObjectsForRelationshipKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsmenu_isToManyKey( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsmenu_removeObject( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsmenu_addObject( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsmenu_validateTakeValue( nsmenu_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsmenu_allPropertyKeys( nsmenu_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsmenu_clearProperties( nsmenu_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsmenu_flushKeyBindings( nsmenu_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsmenu_takeStoredValuesFromDictionary( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsmenu_isNSDate__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsmenu_isNSString__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsmenu_isNSCFConstantString__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsmenu_isNSNumber__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsmenu_isNSArray__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsmenu_isNSDictionary__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsmenu_isNSSet__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsmenu_isNSData__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsmenu_isNSObject__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsmenu_isNSOrderedSet__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsmenu_isNSTimeZone__( nsmenu_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsmenu_isNSValue__( nsmenu_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsmenu_doesNotRecognizeSelector( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsmenu_methodSignatureForSelector( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsmenu_retain( nsmenu_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsmenu_retainCount( nsmenu_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsmenu_autorelease( nsmenu_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsmenu_copy( nsmenu_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsmenu_finalize( nsmenu_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsmenu_isEqual( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsmenu_class( nsmenu_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsmenu_self( nsmenu_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsmenu_isProxy( nsmenu_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsmenu_isKindOfClass( nsmenu_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsmenu_isMemberOfClass( nsmenu_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsmenu_conformsToProtocol( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsmenu_respondsToSelector( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsmenu_zone( nsmenu_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsmenu_hash( nsmenu_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsmenu_superclass( nsmenu_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsmenu_debugDescription( nsmenu_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsmenu_retainWeakReference( nsmenu_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsmenu_allowsWeakReference( nsmenu_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsmenu_isFault( nsmenu_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsmenu_forwardInvocation( nsmenu_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsmenu_forwardingTargetForSelector( nsmenu_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsmenu_mutableCopy( nsmenu_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsmenu_initialize( );

// Signature from Objective-C Runtime: c isMenuBarVisible @ :
char 				nsmenu_isMenuBarVisible( );

// Signature from Objective-C Runtime: @ standardImportFromDeviceMenuWithOptions: @ : Q
nsobject_t 			nsmenu_standardImportFromDeviceMenuWithOptions( unsigned long long arg0 );

// Signature from Objective-C Runtime: v popUpContextMenu:withEvent:forView: @ : @ @ @
void 				nsmenu_popUpContextMenu( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c menuBarVisible @ :
char 				nsmenu_menuBarVisible( );

// Signature from Objective-C Runtime: v setMenuZone: @ : ^{_NSZone=}
void 				nsmenu_setMenuZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} menuZone @ :
_NSZone* 			nsmenu_menuZone( );

// Signature from Objective-C Runtime: q menuTypeForEvent: @ : @
long long 			nsmenu_menuTypeForEvent( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setMenuBarVisible: @ : c
void 				nsmenu_setMenuBarVisible( char arg0 );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsmenu_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsmenu_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsmenu_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsmenu_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsmenu_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsmenu_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsmenu_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsmenu_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsmenu_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsmenu_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsmenu_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsmenu_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsmenu_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsmenu_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsmenu_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsmenu_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsmenu_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsmenu_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsmenu_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsmenu_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsmenu_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsmenu_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsmenu_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsmenu_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsmenu_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsmenu_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsmenu_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsmenu_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsmenu_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsmenu_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsmenu_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsmenu_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsmenu_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsmenu_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsmenu_t 			nsmenu_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsmenu_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsmenu_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsmenu_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsmenu_instancesRespondToSelector( nsselector_t arg0 );

#endif