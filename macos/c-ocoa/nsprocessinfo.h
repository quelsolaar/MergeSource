/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSPROCESSINFO_HEADER
#define SHIMMER_C_OCOA_NSPROCESSINFO_HEADER

typedef void*	nsprocessinfo_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ bs_jobLabel @ :
nsobject_t 			nsprocessinfo_bs_jobLabel( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsprocessinfo_dealloc( nsprocessinfo_t object );

// Signature from Objective-C Runtime: i processIdentifier @ :
int 				nsprocessinfo_processIdentifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setArguments: @ : @
void 				nsprocessinfo_setArguments( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ arguments @ :
nsobject_t 			nsprocessinfo_arguments( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isiOSAppOnMac @ :
char 				nsprocessinfo_isiOSAppOnMac( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ processName @ :
nsobject_t 			nsprocessinfo_processName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ globallyUniqueString @ :
nsobject_t 			nsprocessinfo_globallyUniqueString( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ environment @ :
nsobject_t 			nsprocessinfo_environment( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v disableAutomaticTermination: @ : @
void 				nsprocessinfo_disableAutomaticTermination( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v disableSuddenTermination @ :
void 				nsprocessinfo_disableSuddenTermination( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v enableAutomaticTermination: @ : @
void 				nsprocessinfo_enableAutomaticTermination( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v enableSuddenTermination @ :
void 				nsprocessinfo_enableSuddenTermination( nsprocessinfo_t object );

// Signature from Objective-C Runtime: q thermalState @ :
long long 			nsprocessinfo_thermalState( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q operatingSystem @ :
unsigned long long 	nsprocessinfo_operatingSystem( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ hostName @ :
nsobject_t 			nsprocessinfo_hostName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setProcessName: @ : @
void 				nsprocessinfo_setProcessName( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ userName @ :
nsobject_t 			nsprocessinfo_userName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ userHomeDirectory @ :
nsobject_t 			nsprocessinfo_userHomeDirectory( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ operatingSystemName @ :
nsobject_t 			nsprocessinfo_operatingSystemName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ operatingSystemVersionString @ :
nsobject_t 			nsprocessinfo_operatingSystemVersionString( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q processorCount @ :
unsigned long long 	nsprocessinfo_processorCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q activeProcessorCount @ :
unsigned long long 	nsprocessinfo_activeProcessorCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q physicalMemory @ :
unsigned long long 	nsprocessinfo_physicalMemory( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isTranslated @ :
char 				nsprocessinfo_isTranslated( nsprocessinfo_t object );

// Signature from Objective-C Runtime: d systemUptime @ :
double 				nsprocessinfo_systemUptime( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setAutomaticTerminationSupportEnabled: @ : c
void 				nsprocessinfo_setAutomaticTerminationSupportEnabled( nsprocessinfo_t object, char arg0 );

// Signature from Objective-C Runtime: c automaticTerminationSupportEnabled @ :
char 				nsprocessinfo_automaticTerminationSupportEnabled( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v performActivityWithOptions:reason:usingBlock: @ : Q @ @?
void 				nsprocessinfo_performActivityWithOptions( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ beginSuspensionOfSystemBehaviors:reason: @ : Q @
nsobject_t 			nsprocessinfo_beginSuspensionOfSystemBehaviors( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v endSystemBehaviorSuspension: @ : @
void 				nsprocessinfo_endSystemBehaviorSuspension( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ beginActivityWithOptions:reason: @ : Q @
nsobject_t 			nsprocessinfo_beginActivityWithOptions( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v endActivity: @ : @
void 				nsprocessinfo_endActivity( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performExpiringActivityWithReason:usingBlock: @ : @ @?
void 				nsprocessinfo_performExpiringActivityWithReason( nsprocessinfo_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ fullUserName @ :
nsobject_t 			nsprocessinfo_fullUserName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isLowPowerModeEnabled @ :
char 				nsprocessinfo_isLowPowerModeEnabled( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isMacCatalystApp @ :
char 				nsprocessinfo_isMacCatalystApp( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsprocessinfo_accessibilityOverriddenAttributes( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsprocessinfo_accessibilityReplaceRange( nsprocessinfo_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsprocessinfo_accessibilityVisibleArea( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsprocessinfo_accessibilityArrayAttributeCount( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsprocessinfo_accessibilityIndexOfChild( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsprocessinfo_accessibilityArrayAttributeValues( nsprocessinfo_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsprocessinfo_accessibilityParameterizedAttributeNames( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsprocessinfo_accessibilityAttributeValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsprocessinfo_accessibilityIndexForChildUIElementAttributeForParameter( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsprocessinfo_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsprocessinfo_accessibilityTemporaryChildren( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsprocessinfo_accessibilityPerformShowMenuOfChild( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsprocessinfo_accessibilityPresenterProcessIdentifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsprocessinfo_accessibilityShouldUseUniqueId( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsprocessinfo_accessibilitySupportsNotifications( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsprocessinfo_accessibilityShouldSendNotification( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsprocessinfo_accessibilitySupportsOverriddenAttributes( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsprocessinfo_accessibilityAllowsOverriddenAttributesWhenIgnored( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsprocessinfo_accessibilitySetOverrideValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsprocessinfo_accessibilityEncodeOverriddenAttributes( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsprocessinfo_accessibilityDecodeOverriddenAttributes( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsprocessinfo_accessibilitySupportsCustomElementData( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsprocessinfo_bind( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsprocessinfo_awakeFromNib( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsprocessinfo_userInterfaceItemIdentifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsprocessinfo_setUserInterfaceItemIdentifier( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsprocessinfo_unbind( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsprocessinfo_valueClassForBinding( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsprocessinfo_NS_observationForKeyPath( nsprocessinfo_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsprocessinfo_NS_observationForKeyPaths( nsprocessinfo_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsprocessinfo_optionDescriptionsForBinding( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsprocessinfo_exposedBindings( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsprocessinfo_infoForBinding( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsprocessinfo_prepareForInterfaceBuilder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsprocessinfo_accessibilityAddTemporaryChild( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsprocessinfo_accessibilityRemoveTemporaryChild( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsprocessinfo_NSLifeguard_autorelease( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsprocessinfo_accessibilitySetPresenterProcessIdentifier( nsprocessinfo_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsprocessinfo_NS_tiledLayerVisibleRect( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsprocessinfo_NS_addTiledLayerDescendent( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsprocessinfo_NS_removeTiledLayerDescendent( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsprocessinfo_CAMLTypeSupportedForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsprocessinfo_CAMLTypeForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsprocessinfo_CA_validateValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsprocessinfo_encodeWithCAMLWriter( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsprocessinfo_CA_interpolateValues( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsprocessinfo_CAMLType( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsprocessinfo_CA_archivingValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsprocessinfo_CA_roundToIntegerFromValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsprocessinfo_CA_addValue( nsprocessinfo_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsprocessinfo_CA_interpolateValue( nsprocessinfo_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsprocessinfo_CA_distanceToValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsprocessinfo_CA_prepareRenderValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsprocessinfo_CA_copyRenderValue( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsprocessinfo_supportsRBSXPCSecureCoding( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsprocessinfo_RBSIsXPCObject( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsprocessinfo_NSRepresentation( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsprocessinfo_supportsBSXPCSecureCoding( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsprocessinfo_bs_isPlistableType( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsprocessinfo_bs_secureEncoded( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsprocessinfo_bs_encoded( nsprocessinfo_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsprocessinfo_classForCoder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForCoder( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsprocessinfo_awakeAfterUsingCoder( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsprocessinfo_implementsSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsprocessinfo_setObservationInfo( nsprocessinfo_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsprocessinfo_setValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForPortCoder( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsprocessinfo_willChangeValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsprocessinfo_didChangeValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsprocessinfo_dictionaryWithValuesForKeys( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsprocessinfo_valueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsprocessinfo_valueForUndefinedKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsprocessinfo_classForKeyedArchiver( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForKeyedArchiver( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_valueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsprocessinfo_addObserver( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsprocessinfo_objectSpecifier( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsprocessinfo_replacementObjectForArchiver( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsprocessinfo_classForArchiver( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsprocessinfo_attributeKeys( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsprocessinfo_toOneRelationshipKeys( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsprocessinfo_toManyRelationshipKeys( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsprocessinfo_inverseForRelationshipKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsprocessinfo_classDescription( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsprocessinfo_copyScriptingValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsprocessinfo_methodDescriptionForSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsprocessinfo_newScriptingObjectOfClass( nsprocessinfo_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsprocessinfo_handleQueryWithUnboundKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsprocessinfo_handleTakeValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsprocessinfo_storedValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsprocessinfo_takeStoredValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsprocessinfo_takeValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsprocessinfo_valuesForKeys( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsprocessinfo_takeValuesFromDictionary( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsprocessinfo_unableToSetNilForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsprocessinfo_keyValueBindingForKey( nsprocessinfo_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsprocessinfo_createKeyValueBindingForKey( nsprocessinfo_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_mutableArrayValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_mutableOrderedSetValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsprocessinfo_mutableSetValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsprocessinfo_removeObservation( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsprocessinfo_receiveObservedValue( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsprocessinfo_receiveObservedError( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsprocessinfo_finishObserving( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsprocessinfo_setObservation( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsprocessinfo_observeValueForKeyPath( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsprocessinfo_removeObserver( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsprocessinfo_className( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsprocessinfo_addChainedObservers( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsprocessinfo_addObserverBlock( nsprocessinfo_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsprocessinfo_addObservationTransformer( nsprocessinfo_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsprocessinfo_setNilValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsprocessinfo_mutableArrayValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsprocessinfo_mutableOrderedSetValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsprocessinfo_mutableSetValueForKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsprocessinfo_setValuesForKeysWithDictionary( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsprocessinfo_willChange( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsprocessinfo_didChange( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsprocessinfo_observationInfo( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsprocessinfo_autoContentAccessingProxy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsprocessinfo_coerceValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsprocessinfo_setScriptingProperties( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsprocessinfo_scriptingValueForSpecifier( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsprocessinfo_scriptingProperties( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsprocessinfo_coerceValueForScriptingProperties( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsprocessinfo_valueAtIndex( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsprocessinfo_valueWithName( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsprocessinfo_valueWithUniqueID( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsprocessinfo_insertValue( nsprocessinfo_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsprocessinfo_replaceValueAtIndex( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsprocessinfo_removeValueAtIndex( nsprocessinfo_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsprocessinfo_classForPortCoder( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsprocessinfo_performSelector( nsprocessinfo_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsprocessinfo_classCode( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsprocessinfo_isEqualTo( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsprocessinfo_isLessThanOrEqualTo( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsprocessinfo_isLessThan( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsprocessinfo_isGreaterThanOrEqualTo( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsprocessinfo_isGreaterThan( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsprocessinfo_isNotEqualTo( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsprocessinfo_doesContain( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsprocessinfo_isLike( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsprocessinfo_isCaseInsensitiveLike( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsprocessinfo_performSelectorOnMainThread( nsprocessinfo_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsprocessinfo_performSelectorInBackground( nsprocessinfo_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsprocessinfo_classDescriptionForDestinationKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsprocessinfo_entityName( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsprocessinfo_ownsDestinationObjectsForRelationshipKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsprocessinfo_isToManyKey( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsprocessinfo_removeObject( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsprocessinfo_addObject( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsprocessinfo_validateTakeValue( nsprocessinfo_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsprocessinfo_allPropertyKeys( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsprocessinfo_clearProperties( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsprocessinfo_flushKeyBindings( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsprocessinfo_takeStoredValuesFromDictionary( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsprocessinfo_isNSDate__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsprocessinfo_isNSString__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsprocessinfo_isNSCFConstantString__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsprocessinfo_isNSNumber__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsprocessinfo_isNSArray__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsprocessinfo_isNSDictionary__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsprocessinfo_isNSSet__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsprocessinfo_isNSData__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsprocessinfo_isNSObject__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsprocessinfo_isNSOrderedSet__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsprocessinfo_isNSTimeZone__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsprocessinfo_isNSValue__( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsprocessinfo_description( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsprocessinfo_doesNotRecognizeSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsprocessinfo_methodSignatureForSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsprocessinfo_retain( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsprocessinfo_retainCount( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsprocessinfo_autorelease( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsprocessinfo_copy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsprocessinfo_finalize( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsprocessinfo_isEqual( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsprocessinfo_class( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsprocessinfo_self( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsprocessinfo_isProxy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsprocessinfo_isKindOfClass( nsprocessinfo_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsprocessinfo_isMemberOfClass( nsprocessinfo_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsprocessinfo_conformsToProtocol( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsprocessinfo_respondsToSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsprocessinfo_zone( nsprocessinfo_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsprocessinfo_hash( nsprocessinfo_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsprocessinfo_superclass( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsprocessinfo_debugDescription( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsprocessinfo_init( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsprocessinfo_retainWeakReference( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsprocessinfo_allowsWeakReference( nsprocessinfo_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsprocessinfo_isFault( nsprocessinfo_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsprocessinfo_forwardInvocation( nsprocessinfo_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsprocessinfo_forwardingTargetForSelector( nsprocessinfo_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsprocessinfo_mutableCopy( nsprocessinfo_t object );

// Signature from Objective-C Runtime: @ processInfo @ :
nsobject_t 			nsprocessinfo_processInfo( );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsprocessinfo_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsprocessinfo_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsprocessinfo_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsprocessinfo_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsprocessinfo_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsprocessinfo_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsprocessinfo_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsprocessinfo_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsprocessinfo_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsprocessinfo_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsprocessinfo_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsprocessinfo_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsprocessinfo_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsprocessinfo_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsprocessinfo_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsprocessinfo_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsprocessinfo_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsprocessinfo_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsprocessinfo_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsprocessinfo_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsprocessinfo_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsprocessinfo_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsprocessinfo_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsprocessinfo_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsprocessinfo_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsprocessinfo_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsprocessinfo_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsprocessinfo_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsprocessinfo_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsprocessinfo_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsprocessinfo_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsprocessinfo_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsprocessinfo_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsprocessinfo_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsprocessinfo_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsprocessinfo_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsprocessinfo_t 	nsprocessinfo_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsprocessinfo_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsprocessinfo_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsprocessinfo_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsprocessinfo_instancesRespondToSelector( nsselector_t arg0 );

#endif