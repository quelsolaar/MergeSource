/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSCOLOR_HEADER
#define SHIMMER_C_OCOA_NSCOLOR_HEADER

typedef void*	nscolor_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nscolor_copy( nscolor_t object );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nscolor_copyWithZone( nscolor_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nscolor_hash( nscolor_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nscolor_init( nscolor_t object );

// Signature from Objective-C Runtime: v set @ :
void 				nscolor_set( nscolor_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nscolor_encodeWithCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nscolor_initWithCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q type @ :
long long 			nscolor_type( nscolor_t object );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nscolor_replacementObjectForPortCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{CGColor=} CGColor @ :
CGColor* 			nscolor_CGColor( nscolor_t object );

// Signature from Objective-C Runtime: v setStroke @ :
void 				nscolor_setStroke( nscolor_t object );

// Signature from Objective-C Runtime: d cyanComponent @ :
double 				nscolor_cyanComponent( nscolor_t object );

// Signature from Objective-C Runtime: d magentaComponent @ :
double 				nscolor_magentaComponent( nscolor_t object );

// Signature from Objective-C Runtime: d yellowComponent @ :
double 				nscolor_yellowComponent( nscolor_t object );

// Signature from Objective-C Runtime: d blackComponent @ :
double 				nscolor_blackComponent( nscolor_t object );

// Signature from Objective-C Runtime: d alphaComponent @ :
double 				nscolor_alphaComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ colorWithAlphaComponent: @ : d
nsobject_t 			nscolor_colorWithAlphaComponent( nscolor_t object, double arg0 );

// Signature from Objective-C Runtime: @ colorUsingColorSpace: @ : @
nsobject_t 			nscolor_colorUsingColorSpace( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: d redComponent @ :
double 				nscolor_redComponent( nscolor_t object );

// Signature from Objective-C Runtime: d greenComponent @ :
double 				nscolor_greenComponent( nscolor_t object );

// Signature from Objective-C Runtime: d blueComponent @ :
double 				nscolor_blueComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ colorUsingType: @ : q
nsobject_t 			nscolor_colorUsingType( nscolor_t object, long long arg0 );

// Signature from Objective-C Runtime: q numberOfComponents @ :
long long 			nscolor_numberOfComponents( nscolor_t object );

// Signature from Objective-C Runtime: v getComponents: @ : ^d
void 				nscolor_getComponents( nscolor_t object, double* arg0 );

// Signature from Objective-C Runtime: @ colorSpace @ :
nsobject_t 			nscolor_colorSpace( nscolor_t object );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nscolor_CA_addValue( nscolor_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nscolor_CA_interpolateValue( nscolor_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nscolor_CA_distanceToValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ colorUsingColorSpaceName: @ : @
nsobject_t 			nscolor_colorUsingColorSpaceName( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithPasteboardPropertyList:ofType: @ : @ @
nsobject_t 			nscolor_initWithPasteboardPropertyList( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v getRed:green:blue:alpha: @ : ^d ^d ^d ^d
void 				nscolor_getRed( nscolor_t object, double* arg0, double* arg1, double* arg2, double* arg3 );

// Signature from Objective-C Runtime: @ colorSpaceName @ :
nsobject_t 			nscolor_colorSpaceName( nscolor_t object );

// Signature from Objective-C Runtime: @ blendedColorWithFraction:ofColor: @ : d @
nsobject_t 			nscolor_blendedColorWithFraction( nscolor_t object, double arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v getWhite:alpha: @ : ^d ^d
void 				nscolor_getWhite( nscolor_t object, double* arg0, double* arg1 );

// Signature from Objective-C Runtime: v getCyan:magenta:yellow:black:alpha: @ : ^d ^d ^d ^d ^d
void 				nscolor_getCyan( nscolor_t object, double* arg0, double* arg1, double* arg2, double* arg3, double* arg4 );

// Signature from Objective-C Runtime: v setFill @ :
void 				nscolor_setFill( nscolor_t object );

// Signature from Objective-C Runtime: v getHue:saturation:brightness:alpha: @ : ^d ^d ^d ^d
void 				nscolor_getHue( nscolor_t object, double* arg0, double* arg1, double* arg2, double* arg3 );

// Signature from Objective-C Runtime: @ patternImage @ :
nsobject_t 			nscolor_patternImage( nscolor_t object );

// Signature from Objective-C Runtime: d whiteComponent @ :
double 				nscolor_whiteComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ writableTypesForPasteboard: @ : @
nsobject_t 			nscolor_writableTypesForPasteboard( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pasteboardPropertyListForType: @ : @
nsobject_t 			nscolor_pasteboardPropertyListForType( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isUniform @ :
char 				nscolor_isUniform( nscolor_t object );

// Signature from Objective-C Runtime: v writeToPasteboard: @ : @
void 				nscolor_writeToPasteboard( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v drawSwatchInRect: @ : {CGRect={CGPoint=dd}{CGSize=dd}}
void 				nscolor_drawSwatchInRect( nscolor_t object, CGRect arg0 );

// Signature from Objective-C Runtime: @ catalogNameComponent @ :
nsobject_t 			nscolor_catalogNameComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ colorNameComponent @ :
nsobject_t 			nscolor_colorNameComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ localizedCatalogNameComponent @ :
nsobject_t 			nscolor_localizedCatalogNameComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ localizedColorNameComponent @ :
nsobject_t 			nscolor_localizedColorNameComponent( nscolor_t object );

// Signature from Objective-C Runtime: d hueComponent @ :
double 				nscolor_hueComponent( nscolor_t object );

// Signature from Objective-C Runtime: d saturationComponent @ :
double 				nscolor_saturationComponent( nscolor_t object );

// Signature from Objective-C Runtime: d brightnessComponent @ :
double 				nscolor_brightnessComponent( nscolor_t object );

// Signature from Objective-C Runtime: @ highlightWithLevel: @ : d
nsobject_t 			nscolor_highlightWithLevel( nscolor_t object, double arg0 );

// Signature from Objective-C Runtime: @ shadowWithLevel: @ : d
nsobject_t 			nscolor_shadowWithLevel( nscolor_t object, double arg0 );

// Signature from Objective-C Runtime: @ colorWithSystemEffect: @ : q
nsobject_t 			nscolor_colorWithSystemEffect( nscolor_t object, long long arg0 );

// Signature from Objective-C Runtime: @ accessibilityName @ :
nsobject_t 			nscolor_accessibilityName( nscolor_t object );

// Signature from Objective-C Runtime: @ scriptingColorDescriptor @ :
nsobject_t 			nscolor_scriptingColorDescriptor( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nscolor_accessibilityOverriddenAttributes( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nscolor_accessibilityReplaceRange( nscolor_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nscolor_accessibilityVisibleArea( nscolor_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nscolor_accessibilityArrayAttributeCount( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nscolor_accessibilityIndexOfChild( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nscolor_accessibilityArrayAttributeValues( nscolor_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nscolor_accessibilityParameterizedAttributeNames( nscolor_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nscolor_accessibilityAttributeValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nscolor_accessibilityIndexForChildUIElementAttributeForParameter( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nscolor_accessibilityAttributedValueForStringAttributeAttributeForParameter( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nscolor_accessibilityTemporaryChildren( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nscolor_accessibilityPerformShowMenuOfChild( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nscolor_accessibilityPresenterProcessIdentifier( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nscolor_accessibilityShouldUseUniqueId( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nscolor_accessibilitySupportsNotifications( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nscolor_accessibilityShouldSendNotification( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nscolor_accessibilitySupportsOverriddenAttributes( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nscolor_accessibilityAllowsOverriddenAttributesWhenIgnored( nscolor_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nscolor_accessibilitySetOverrideValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nscolor_accessibilityEncodeOverriddenAttributes( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nscolor_accessibilityDecodeOverriddenAttributes( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nscolor_accessibilitySupportsCustomElementData( nscolor_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nscolor_bind( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nscolor_awakeFromNib( nscolor_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nscolor_userInterfaceItemIdentifier( nscolor_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nscolor_setUserInterfaceItemIdentifier( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nscolor_unbind( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nscolor_valueClassForBinding( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nscolor_NS_observationForKeyPath( nscolor_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nscolor_NS_observationForKeyPaths( nscolor_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nscolor_optionDescriptionsForBinding( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nscolor_exposedBindings( nscolor_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nscolor_infoForBinding( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nscolor_prepareForInterfaceBuilder( nscolor_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nscolor_accessibilityAddTemporaryChild( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nscolor_accessibilityRemoveTemporaryChild( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nscolor_NSLifeguard_autorelease( nscolor_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nscolor_accessibilitySetPresenterProcessIdentifier( nscolor_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nscolor_NS_tiledLayerVisibleRect( nscolor_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nscolor_NS_addTiledLayerDescendent( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nscolor_NS_removeTiledLayerDescendent( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nscolor_CAMLTypeSupportedForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nscolor_CAMLTypeForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nscolor_CA_validateValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nscolor_encodeWithCAMLWriter( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nscolor_CA_interpolateValues( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nscolor_CAMLType( nscolor_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nscolor_CA_archivingValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nscolor_CA_roundToIntegerFromValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nscolor_CA_prepareRenderValue( nscolor_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nscolor_CA_copyRenderValue( nscolor_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nscolor_supportsRBSXPCSecureCoding( nscolor_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nscolor_RBSIsXPCObject( nscolor_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nscolor_NSRepresentation( nscolor_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nscolor_supportsBSXPCSecureCoding( nscolor_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nscolor_bs_isPlistableType( nscolor_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nscolor_bs_secureEncoded( nscolor_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nscolor_bs_encoded( nscolor_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nscolor_classForCoder( nscolor_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nscolor_replacementObjectForCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nscolor_awakeAfterUsingCoder( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nscolor_implementsSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nscolor_setObservationInfo( nscolor_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nscolor_setValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nscolor_willChangeValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nscolor_didChangeValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nscolor_dictionaryWithValuesForKeys( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nscolor_valueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nscolor_valueForUndefinedKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nscolor_classForKeyedArchiver( nscolor_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nscolor_replacementObjectForKeyedArchiver( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nscolor_valueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nscolor_addObserver( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nscolor_objectSpecifier( nscolor_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nscolor_replacementObjectForArchiver( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nscolor_classForArchiver( nscolor_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nscolor_attributeKeys( nscolor_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nscolor_toOneRelationshipKeys( nscolor_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nscolor_toManyRelationshipKeys( nscolor_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nscolor_inverseForRelationshipKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nscolor_classDescription( nscolor_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nscolor_copyScriptingValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nscolor_methodDescriptionForSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nscolor_newScriptingObjectOfClass( nscolor_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nscolor_handleQueryWithUnboundKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nscolor_handleTakeValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nscolor_storedValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nscolor_takeStoredValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nscolor_takeValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nscolor_valuesForKeys( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nscolor_takeValuesFromDictionary( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nscolor_unableToSetNilForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nscolor_keyValueBindingForKey( nscolor_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nscolor_createKeyValueBindingForKey( nscolor_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nscolor_mutableArrayValueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nscolor_mutableOrderedSetValueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nscolor_mutableSetValueForKeyPath( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nscolor_removeObservation( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nscolor_receiveObservedValue( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nscolor_receiveObservedError( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nscolor_finishObserving( nscolor_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nscolor_setObservation( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nscolor_observeValueForKeyPath( nscolor_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nscolor_removeObserver( nscolor_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nscolor_className( nscolor_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nscolor_addChainedObservers( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nscolor_addObserverBlock( nscolor_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nscolor_addObservationTransformer( nscolor_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nscolor_setNilValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nscolor_mutableArrayValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nscolor_mutableOrderedSetValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nscolor_mutableSetValueForKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nscolor_setValuesForKeysWithDictionary( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nscolor_willChange( nscolor_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nscolor_didChange( nscolor_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nscolor_observationInfo( nscolor_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nscolor_autoContentAccessingProxy( nscolor_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nscolor_coerceValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nscolor_setScriptingProperties( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nscolor_scriptingValueForSpecifier( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nscolor_scriptingProperties( nscolor_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nscolor_coerceValueForScriptingProperties( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nscolor_valueAtIndex( nscolor_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nscolor_valueWithName( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nscolor_valueWithUniqueID( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nscolor_insertValue( nscolor_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nscolor_replaceValueAtIndex( nscolor_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nscolor_removeValueAtIndex( nscolor_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nscolor_classForPortCoder( nscolor_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nscolor_performSelector( nscolor_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nscolor_classCode( nscolor_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nscolor_isEqualTo( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nscolor_isLessThanOrEqualTo( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nscolor_isLessThan( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nscolor_isGreaterThanOrEqualTo( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nscolor_isGreaterThan( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nscolor_isNotEqualTo( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nscolor_doesContain( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nscolor_isLike( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nscolor_isCaseInsensitiveLike( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nscolor_performSelectorOnMainThread( nscolor_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nscolor_performSelectorInBackground( nscolor_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nscolor_classDescriptionForDestinationKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nscolor_entityName( nscolor_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nscolor_ownsDestinationObjectsForRelationshipKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nscolor_isToManyKey( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nscolor_removeObject( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nscolor_addObject( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nscolor_validateTakeValue( nscolor_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nscolor_allPropertyKeys( nscolor_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nscolor_clearProperties( nscolor_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nscolor_flushKeyBindings( nscolor_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nscolor_takeStoredValuesFromDictionary( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nscolor_isNSDate__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nscolor_isNSString__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nscolor_isNSCFConstantString__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nscolor_isNSNumber__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nscolor_isNSArray__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nscolor_isNSDictionary__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nscolor_isNSSet__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nscolor_isNSData__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nscolor_isNSObject__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nscolor_isNSOrderedSet__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nscolor_isNSTimeZone__( nscolor_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nscolor_isNSValue__( nscolor_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nscolor_description( nscolor_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nscolor_doesNotRecognizeSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nscolor_methodSignatureForSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nscolor_retain( nscolor_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nscolor_retainCount( nscolor_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nscolor_autorelease( nscolor_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nscolor_finalize( nscolor_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nscolor_dealloc( nscolor_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nscolor_isEqual( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nscolor_class( nscolor_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nscolor_self( nscolor_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nscolor_isProxy( nscolor_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nscolor_isKindOfClass( nscolor_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nscolor_isMemberOfClass( nscolor_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nscolor_conformsToProtocol( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nscolor_respondsToSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nscolor_zone( nscolor_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nscolor_superclass( nscolor_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nscolor_debugDescription( nscolor_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nscolor_retainWeakReference( nscolor_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nscolor_allowsWeakReference( nscolor_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nscolor_isFault( nscolor_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nscolor_forwardInvocation( nscolor_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nscolor_forwardingTargetForSelector( nscolor_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nscolor_mutableCopy( nscolor_t object );

// Signature from Objective-C Runtime: v load @ :
void 				nscolor_load( );

// Signature from Objective-C Runtime: c supportsSecureCoding @ :
char 				nscolor_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ colorWithCalibratedRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithCalibratedRed( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nscolor_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: @ labelColor @ :
nsobject_t 			nscolor_labelColor( );

// Signature from Objective-C Runtime: @ secondaryLabelColor @ :
nsobject_t 			nscolor_secondaryLabelColor( );

// Signature from Objective-C Runtime: @ shadowColor @ :
nsobject_t 			nscolor_shadowColor( );

// Signature from Objective-C Runtime: @ quaternaryLabelColor @ :
nsobject_t 			nscolor_quaternaryLabelColor( );

// Signature from Objective-C Runtime: @ controlBackgroundColor @ :
nsobject_t 			nscolor_controlBackgroundColor( );

// Signature from Objective-C Runtime: @ redColor @ :
nsobject_t 			nscolor_redColor( );

// Signature from Objective-C Runtime: @ clearColor @ :
nsobject_t 			nscolor_clearColor( );

// Signature from Objective-C Runtime: @ controlStripSeparatorColor @ :
nsobject_t 			nscolor_controlStripSeparatorColor( );

// Signature from Objective-C Runtime: @ scrubberTexturedBackgroundColor @ :
nsobject_t 			nscolor_scrubberTexturedBackgroundColor( );

// Signature from Objective-C Runtime: @ blackColor @ :
nsobject_t 			nscolor_blackColor( );

// Signature from Objective-C Runtime: @ whiteColor @ :
nsobject_t 			nscolor_whiteColor( );

// Signature from Objective-C Runtime: @ colorWithColorSpace:components:count: @ : @ r^d q
nsobject_t 			nscolor_colorWithColorSpace( nsobject_t arg0, double* arg1, long long arg2 );

// Signature from Objective-C Runtime: @ alternateSelectedControlColor @ :
nsobject_t 			nscolor_alternateSelectedControlColor( );

// Signature from Objective-C Runtime: @ colorWithCalibratedWhite:alpha: @ : d d
nsobject_t 			nscolor_colorWithCalibratedWhite( double arg0, double arg1 );

// Signature from Objective-C Runtime: @ systemPurpleColor @ :
nsobject_t 			nscolor_systemPurpleColor( );

// Signature from Objective-C Runtime: @ textColor @ :
nsobject_t 			nscolor_textColor( );

// Signature from Objective-C Runtime: @ colorWithCGColor: @ : ^{CGColor=}
nsobject_t 			nscolor_colorWithCGColor( CGColor* arg0 );

// Signature from Objective-C Runtime: @ readableTypesForPasteboard: @ : @
nsobject_t 			nscolor_readableTypesForPasteboard( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ colorWithRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithRed( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithWhite:alpha: @ : d d
nsobject_t 			nscolor_colorWithWhite( double arg0, double arg1 );

// Signature from Objective-C Runtime: @ controlColor @ :
nsobject_t 			nscolor_controlColor( );

// Signature from Objective-C Runtime: @ colorWithDeviceRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithDeviceRed( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithDeviceCyan:magenta:yellow:black:alpha: @ : d d d d d
nsobject_t 			nscolor_colorWithDeviceCyan( double arg0, double arg1, double arg2, double arg3, double arg4 );

// Signature from Objective-C Runtime: @ controlTextColor @ :
nsobject_t 			nscolor_controlTextColor( );

// Signature from Objective-C Runtime: @ colorWithPatternImage: @ : @
nsobject_t 			nscolor_colorWithPatternImage( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ thinSplitViewDividerColor @ :
nsobject_t 			nscolor_thinSplitViewDividerColor( );

// Signature from Objective-C Runtime: @ secondarySelectedControlColor @ :
nsobject_t 			nscolor_secondarySelectedControlColor( );

// Signature from Objective-C Runtime: @ greenColor @ :
nsobject_t 			nscolor_greenColor( );

// Signature from Objective-C Runtime: @ purpleColor @ :
nsobject_t 			nscolor_purpleColor( );

// Signature from Objective-C Runtime: @ systemMintColor @ :
nsobject_t 			nscolor_systemMintColor( );

// Signature from Objective-C Runtime: @ blueColor @ :
nsobject_t 			nscolor_blueColor( );

// Signature from Objective-C Runtime: @ controlAccentColor @ :
nsobject_t 			nscolor_controlAccentColor( );

// Signature from Objective-C Runtime: @ disabledControlTextColor @ :
nsobject_t 			nscolor_disabledControlTextColor( );

// Signature from Objective-C Runtime: @ colorNamed:bundle: @ : @ @
nsobject_t 			nscolor_colorNamed( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ tertiaryLabelColor @ :
nsobject_t 			nscolor_tertiaryLabelColor( );

// Signature from Objective-C Runtime: @ selectedMenuItemTextColor @ :
nsobject_t 			nscolor_selectedMenuItemTextColor( );

// Signature from Objective-C Runtime: @ alternateSelectedControlTextColor @ :
nsobject_t 			nscolor_alternateSelectedControlTextColor( );

// Signature from Objective-C Runtime: @ colorWithCalibratedHue:saturation:brightness:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithCalibratedHue( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ windowBackgroundColor @ :
nsobject_t 			nscolor_windowBackgroundColor( );

// Signature from Objective-C Runtime: @ textBackgroundColor @ :
nsobject_t 			nscolor_textBackgroundColor( );

// Signature from Objective-C Runtime: @ selectedControlTextColor @ :
nsobject_t 			nscolor_selectedControlTextColor( );

// Signature from Objective-C Runtime: @ windowFrameTextColor @ :
nsobject_t 			nscolor_windowFrameTextColor( );

// Signature from Objective-C Runtime: @ containerBorderColor @ :
nsobject_t 			nscolor_containerBorderColor( );

// Signature from Objective-C Runtime: @ placeholderTextColor @ :
nsobject_t 			nscolor_placeholderTextColor( );

// Signature from Objective-C Runtime: @ selectedTextBackgroundColor @ :
nsobject_t 			nscolor_selectedTextBackgroundColor( );

// Signature from Objective-C Runtime: @ selectedTextColor @ :
nsobject_t 			nscolor_selectedTextColor( );

// Signature from Objective-C Runtime: @ lightGrayColor @ :
nsobject_t 			nscolor_lightGrayColor( );

// Signature from Objective-C Runtime: @ colorWithDeviceWhite:alpha: @ : d d
nsobject_t 			nscolor_colorWithDeviceWhite( double arg0, double arg1 );

// Signature from Objective-C Runtime: @ controlAlternatingRowColor @ :
nsobject_t 			nscolor_controlAlternatingRowColor( );

// Signature from Objective-C Runtime: @ alternatingContentBackgroundColor @ :
nsobject_t 			nscolor_alternatingContentBackgroundColor( );

// Signature from Objective-C Runtime: @ selectedMenuItemColor @ :
nsobject_t 			nscolor_selectedMenuItemColor( );

// Signature from Objective-C Runtime: c ignoresAlpha @ :
char 				nscolor_ignoresAlpha( );

// Signature from Objective-C Runtime: @ oldSystemColorWithCoder: @ : @
nsobject_t 			nscolor_oldSystemColorWithCoder( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ highlightColor @ :
nsobject_t 			nscolor_highlightColor( );

// Signature from Objective-C Runtime: @ blueControlTintColor @ :
nsobject_t 			nscolor_blueControlTintColor( );

// Signature from Objective-C Runtime: @ graphiteControlTintColor @ :
nsobject_t 			nscolor_graphiteControlTintColor( );

// Signature from Objective-C Runtime: @ clearControlTintColor @ :
nsobject_t 			nscolor_clearControlTintColor( );

// Signature from Objective-C Runtime: @ darkGrayColor @ :
nsobject_t 			nscolor_darkGrayColor( );

// Signature from Objective-C Runtime: @ grayColor @ :
nsobject_t 			nscolor_grayColor( );

// Signature from Objective-C Runtime: @ cyanColor @ :
nsobject_t 			nscolor_cyanColor( );

// Signature from Objective-C Runtime: @ yellowColor @ :
nsobject_t 			nscolor_yellowColor( );

// Signature from Objective-C Runtime: @ magentaColor @ :
nsobject_t 			nscolor_magentaColor( );

// Signature from Objective-C Runtime: @ orangeColor @ :
nsobject_t 			nscolor_orangeColor( );

// Signature from Objective-C Runtime: @ brownColor @ :
nsobject_t 			nscolor_brownColor( );

// Signature from Objective-C Runtime: @ blackDeviceColor @ :
nsobject_t 			nscolor_blackDeviceColor( );

// Signature from Objective-C Runtime: @ lightGrayDeviceColor @ :
nsobject_t 			nscolor_lightGrayDeviceColor( );

// Signature from Objective-C Runtime: @ whiteDeviceColor @ :
nsobject_t 			nscolor_whiteDeviceColor( );

// Signature from Objective-C Runtime: @ grayDeviceColor @ :
nsobject_t 			nscolor_grayDeviceColor( );

// Signature from Objective-C Runtime: @ sourceListBackgroundColor @ :
nsobject_t 			nscolor_sourceListBackgroundColor( );

// Signature from Objective-C Runtime: @ linenColor @ :
nsobject_t 			nscolor_linenColor( );

// Signature from Objective-C Runtime: @ quarternaryLabelColor @ :
nsobject_t 			nscolor_quarternaryLabelColor( );

// Signature from Objective-C Runtime: @ controlShadowColor @ :
nsobject_t 			nscolor_controlShadowColor( );

// Signature from Objective-C Runtime: @ controlDarkShadowColor @ :
nsobject_t 			nscolor_controlDarkShadowColor( );

// Signature from Objective-C Runtime: @ controlHighlightColor @ :
nsobject_t 			nscolor_controlHighlightColor( );

// Signature from Objective-C Runtime: @ controlLightHighlightColor @ :
nsobject_t 			nscolor_controlLightHighlightColor( );

// Signature from Objective-C Runtime: @ unemphasizedSelectedTextColor @ :
nsobject_t 			nscolor_unemphasizedSelectedTextColor( );

// Signature from Objective-C Runtime: @ unemphasizedSelectedTextBackgroundColor @ :
nsobject_t 			nscolor_unemphasizedSelectedTextBackgroundColor( );

// Signature from Objective-C Runtime: @ selectedControlColor @ :
nsobject_t 			nscolor_selectedControlColor( );

// Signature from Objective-C Runtime: @ scrollBarColor @ :
nsobject_t 			nscolor_scrollBarColor( );

// Signature from Objective-C Runtime: @ gridColor @ :
nsobject_t 			nscolor_gridColor( );

// Signature from Objective-C Runtime: @ toolTipColor @ :
nsobject_t 			nscolor_toolTipColor( );

// Signature from Objective-C Runtime: @ toolTipTextColor @ :
nsobject_t 			nscolor_toolTipTextColor( );

// Signature from Objective-C Runtime: @ knobColor @ :
nsobject_t 			nscolor_knobColor( );

// Signature from Objective-C Runtime: @ selectedKnobColor @ :
nsobject_t 			nscolor_selectedKnobColor( );

// Signature from Objective-C Runtime: @ windowFrameColor @ :
nsobject_t 			nscolor_windowFrameColor( );

// Signature from Objective-C Runtime: @ keyboardFocusIndicatorColor @ :
nsobject_t 			nscolor_keyboardFocusIndicatorColor( );

// Signature from Objective-C Runtime: @ progressIndicatorColor @ :
nsobject_t 			nscolor_progressIndicatorColor( );

// Signature from Objective-C Runtime: @ headerColor @ :
nsobject_t 			nscolor_headerColor( );

// Signature from Objective-C Runtime: @ headerTextColor @ :
nsobject_t 			nscolor_headerTextColor( );

// Signature from Objective-C Runtime: @ selectedHeaderTextColor @ :
nsobject_t 			nscolor_selectedHeaderTextColor( );

// Signature from Objective-C Runtime: @ quinaryLabelColor @ :
nsobject_t 			nscolor_quinaryLabelColor( );

// Signature from Objective-C Runtime: @ systemRedColor @ :
nsobject_t 			nscolor_systemRedColor( );

// Signature from Objective-C Runtime: @ systemGreenColor @ :
nsobject_t 			nscolor_systemGreenColor( );

// Signature from Objective-C Runtime: @ systemBlueColor @ :
nsobject_t 			nscolor_systemBlueColor( );

// Signature from Objective-C Runtime: @ systemOrangeColor @ :
nsobject_t 			nscolor_systemOrangeColor( );

// Signature from Objective-C Runtime: @ systemYellowColor @ :
nsobject_t 			nscolor_systemYellowColor( );

// Signature from Objective-C Runtime: @ systemBrownColor @ :
nsobject_t 			nscolor_systemBrownColor( );

// Signature from Objective-C Runtime: @ systemPinkColor @ :
nsobject_t 			nscolor_systemPinkColor( );

// Signature from Objective-C Runtime: @ systemGrayColor @ :
nsobject_t 			nscolor_systemGrayColor( );

// Signature from Objective-C Runtime: @ systemTealColor @ :
nsobject_t 			nscolor_systemTealColor( );

// Signature from Objective-C Runtime: @ systemIndigoColor @ :
nsobject_t 			nscolor_systemIndigoColor( );

// Signature from Objective-C Runtime: @ alternateSelectionBlueColor @ :
nsobject_t 			nscolor_alternateSelectionBlueColor( );

// Signature from Objective-C Runtime: @ alternateSelectionGraphiteColor @ :
nsobject_t 			nscolor_alternateSelectionGraphiteColor( );

// Signature from Objective-C Runtime: @ linkColor @ :
nsobject_t 			nscolor_linkColor( );

// Signature from Objective-C Runtime: @ springLoadedOverlayColor @ :
nsobject_t 			nscolor_springLoadedOverlayColor( );

// Signature from Objective-C Runtime: @ findHighlightColor @ :
nsobject_t 			nscolor_findHighlightColor( );

// Signature from Objective-C Runtime: @ separatorColor @ :
nsobject_t 			nscolor_separatorColor( );

// Signature from Objective-C Runtime: @ contentBackgroundColor @ :
nsobject_t 			nscolor_contentBackgroundColor( );

// Signature from Objective-C Runtime: @ selectedContentBackgroundColor @ :
nsobject_t 			nscolor_selectedContentBackgroundColor( );

// Signature from Objective-C Runtime: @ selectedContentTextColor @ :
nsobject_t 			nscolor_selectedContentTextColor( );

// Signature from Objective-C Runtime: @ unemphasizedSelectedContentBackgroundColor @ :
nsobject_t 			nscolor_unemphasizedSelectedContentBackgroundColor( );

// Signature from Objective-C Runtime: @ underPageBackgroundColor @ :
nsobject_t 			nscolor_underPageBackgroundColor( );

// Signature from Objective-C Runtime: @ textSpellingIndicatorColor @ :
nsobject_t 			nscolor_textSpellingIndicatorColor( );

// Signature from Objective-C Runtime: @ textGrammarIndicatorColor @ :
nsobject_t 			nscolor_textGrammarIndicatorColor( );

// Signature from Objective-C Runtime: @ textCorrectionIndicatorColor @ :
nsobject_t 			nscolor_textCorrectionIndicatorColor( );

// Signature from Objective-C Runtime: @ graphiteSelectedTextBackgroundColor @ :
nsobject_t 			nscolor_graphiteSelectedTextBackgroundColor( );

// Signature from Objective-C Runtime: @ detailAccentColor @ :
nsobject_t 			nscolor_detailAccentColor( );

// Signature from Objective-C Runtime: @ controlAccentRedColor @ :
nsobject_t 			nscolor_controlAccentRedColor( );

// Signature from Objective-C Runtime: @ controlAccentOrangeColor @ :
nsobject_t 			nscolor_controlAccentOrangeColor( );

// Signature from Objective-C Runtime: @ controlAccentYellowColor @ :
nsobject_t 			nscolor_controlAccentYellowColor( );

// Signature from Objective-C Runtime: @ controlAccentGreenColor @ :
nsobject_t 			nscolor_controlAccentGreenColor( );

// Signature from Objective-C Runtime: @ controlAccentBlueColor @ :
nsobject_t 			nscolor_controlAccentBlueColor( );

// Signature from Objective-C Runtime: @ controlAccentPurpleColor @ :
nsobject_t 			nscolor_controlAccentPurpleColor( );

// Signature from Objective-C Runtime: @ controlAccentPinkColor @ :
nsobject_t 			nscolor_controlAccentPinkColor( );

// Signature from Objective-C Runtime: @ controlAccentSpaceGrayColor @ :
nsobject_t 			nscolor_controlAccentSpaceGrayColor( );

// Signature from Objective-C Runtime: @ controlAccentGoldColor @ :
nsobject_t 			nscolor_controlAccentGoldColor( );

// Signature from Objective-C Runtime: @ controlAccentRoseGoldColor @ :
nsobject_t 			nscolor_controlAccentRoseGoldColor( );

// Signature from Objective-C Runtime: @ controlAccentSilverColor @ :
nsobject_t 			nscolor_controlAccentSilverColor( );

// Signature from Objective-C Runtime: @ controlAccentNoColor @ :
nsobject_t 			nscolor_controlAccentNoColor( );

// Signature from Objective-C Runtime: @ controlAccentHardwareColor @ :
nsobject_t 			nscolor_controlAccentHardwareColor( );

// Signature from Objective-C Runtime: @ controlAlternatingRowBackgroundColors @ :
nsobject_t 			nscolor_controlAlternatingRowBackgroundColors( );

// Signature from Objective-C Runtime: @ alternatingContentBackgroundColors @ :
nsobject_t 			nscolor_alternatingContentBackgroundColors( );

// Signature from Objective-C Runtime: @ highlightedMenuColor @ :
nsobject_t 			nscolor_highlightedMenuColor( );

// Signature from Objective-C Runtime: @ highlightedMenuTextColor @ :
nsobject_t 			nscolor_highlightedMenuTextColor( );

// Signature from Objective-C Runtime: @ selectedInactiveColor @ :
nsobject_t 			nscolor_selectedInactiveColor( );

// Signature from Objective-C Runtime: @ colorWithDeviceHue:saturation:brightness:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithDeviceHue( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithCatalogName:colorName: @ : @ @
nsobject_t 			nscolor_colorWithCatalogName( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ colorWithName:dynamicProvider: @ : @ @?
nsobject_t 			nscolor_colorWithName( nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: @ colorWithGenericGamma22White:alpha: @ : d d
nsobject_t 			nscolor_colorWithGenericGamma22White( double arg0, double arg1 );

// Signature from Objective-C Runtime: @ colorWithSRGBRed:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithSRGBRed( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithDisplayP3Red:green:blue:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithDisplayP3Red( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorWithHue:saturation:brightness:alpha: @ : d d d d
nsobject_t 			nscolor_colorWithHue( double arg0, double arg1, double arg2, double arg3 );

// Signature from Objective-C Runtime: @ colorFromPasteboard: @ : @
nsobject_t 			nscolor_colorFromPasteboard( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setIgnoresAlpha: @ : c
void 				nscolor_setIgnoresAlpha( char arg0 );

// Signature from Objective-C Runtime: @ colorForControlTint: @ : Q
nsobject_t 			nscolor_colorForControlTint( unsigned long long arg0 );

// Signature from Objective-C Runtime: Q currentControlTint @ :
unsigned long long 	nscolor_currentControlTint( );

// Signature from Objective-C Runtime: @ colorWithCIColor: @ : @
nsobject_t 			nscolor_colorWithCIColor( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ transparencyCheckboardPatternColor @ :
nsobject_t 			nscolor_transparencyCheckboardPatternColor( );

// Signature from Objective-C Runtime: @ colorWithHex:alpha:colorSpace: @ : @ d @
nsobject_t 			nscolor_colorWithHex( nsobject_t arg0, double arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: @ controlFillColor @ :
nsobject_t 			nscolor_controlFillColor( );

// Signature from Objective-C Runtime: @ scriptingColorWithDescriptor: @ : @
nsobject_t 			nscolor_scriptingColorWithDescriptor( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nscolor_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nscolor_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nscolor_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nscolor_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nscolor_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nscolor_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nscolor_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nscolor_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nscolor_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nscolor_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nscolor_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nscolor_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: q version @ :
long long 			nscolor_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nscolor_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nscolor_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nscolor_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nscolor_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nscolor_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nscolor_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nscolor_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nscolor_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nscolor_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nscolor_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nscolor_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nscolor_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nscolor_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nscolor_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nscolor_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nscolor_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nscolor_initialize( );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nscolor_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nscolor_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nscolor_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nscolor_t 			nscolor_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nscolor_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nscolor_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nscolor_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nscolor_instancesRespondToSelector( nsselector_t arg0 );

#endif