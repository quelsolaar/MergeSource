/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSOPENGLCONTEXT_HEADER
#define SHIMMER_C_OCOA_NSOPENGLCONTEXT_HEADER

typedef void*	nsopenglcontext_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsopenglcontext_dealloc( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v lock @ :
void 				nsopenglcontext_lock( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v unlock @ :
void 				nsopenglcontext_unlock( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v update @ :
void 				nsopenglcontext_update( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ view @ :
nsobject_t 			nsopenglcontext_view( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ pixelFormat @ :
nsobject_t 			nsopenglcontext_pixelFormat( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setView: @ : @
void 				nsopenglcontext_setView( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: ^{_CGLContextObject=} CGLContextObj @ :
_CGLContextObject* 	nsopenglcontext_CGLContextObj( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ initWithCGLContextObj: @ : ^{_CGLContextObject=}
nsobject_t 			nsopenglcontext_initWithCGLContextObj( nsopenglcontext_t object, _CGLContextObject* arg0 );

// Signature from Objective-C Runtime: v clearDrawable @ :
void 				nsopenglcontext_clearDrawable( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v makeCurrentContext @ :
void 				nsopenglcontext_makeCurrentContext( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setValues:forParameter: @ : r^i q
void 				nsopenglcontext_setValues( nsopenglcontext_t object, int* arg0, long long arg1 );

// Signature from Objective-C Runtime: @ initWithFormat:shareContext: @ : @ @
nsobject_t 			nsopenglcontext_initWithFormat( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v copyAttributesFromContext:withMask: @ : @ I
void 				nsopenglcontext_copyAttributesFromContext( nsopenglcontext_t object, nsobject_t arg0, unsigned int arg1 );

// Signature from Objective-C Runtime: v flushBuffer @ :
void 				nsopenglcontext_flushBuffer( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setOffScreen:width:height:rowbytes: @ : ^v i i i
void 				nsopenglcontext_setOffScreen( nsopenglcontext_t object, void* arg0, int arg1, int arg2, int arg3 );

// Signature from Objective-C Runtime: v setFullScreen @ :
void 				nsopenglcontext_setFullScreen( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v getValues:forParameter: @ : ^i q
void 				nsopenglcontext_getValues( nsopenglcontext_t object, int* arg0, long long arg1 );

// Signature from Objective-C Runtime: v setCurrentVirtualScreen: @ : i
void 				nsopenglcontext_setCurrentVirtualScreen( nsopenglcontext_t object, int arg0 );

// Signature from Objective-C Runtime: i currentVirtualScreen @ :
int 				nsopenglcontext_currentVirtualScreen( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v createTexture:fromView:internalFormat: @ : I @ I
void 				nsopenglcontext_createTexture( nsopenglcontext_t object, unsigned int arg0, nsobject_t arg1, unsigned int arg2 );

// Signature from Objective-C Runtime: c texImageIOSurface:target:internalFormat:width:height:format:type:plane: @ : @ I I i i I I I
char 				nsopenglcontext_texImageIOSurface( nsopenglcontext_t object, nsobject_t arg0, unsigned int arg1, unsigned int arg2, int arg3, int arg4, unsigned int arg5, unsigned int arg6, unsigned int arg7 );

// Signature from Objective-C Runtime: {CGSize=dd} defaultFramebufferDimensions @ :
CGSize 				nsopenglcontext_defaultFramebufferDimensions( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c hasDefaultFramebuffer @ :
char 				nsopenglcontext_hasDefaultFramebuffer( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ pixelBuffer @ :
nsobject_t 			nsopenglcontext_pixelBuffer( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen: @ : @ I i i
void 				nsopenglcontext_setPixelBuffer( nsopenglcontext_t object, nsobject_t arg0, unsigned int arg1, int arg2, int arg3 );

// Signature from Objective-C Runtime: I pixelBufferCubeMapFace @ :
unsigned int 		nsopenglcontext_pixelBufferCubeMapFace( nsopenglcontext_t object );

// Signature from Objective-C Runtime: i pixelBufferMipMapLevel @ :
int 				nsopenglcontext_pixelBufferMipMapLevel( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setTextureImageToPixelBuffer:colorBuffer: @ : @ I
void 				nsopenglcontext_setTextureImageToPixelBuffer( nsopenglcontext_t object, nsobject_t arg0, unsigned int arg1 );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsopenglcontext_accessibilityOverriddenAttributes( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsopenglcontext_accessibilityReplaceRange( nsopenglcontext_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsopenglcontext_accessibilityVisibleArea( nsopenglcontext_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsopenglcontext_accessibilityArrayAttributeCount( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsopenglcontext_accessibilityIndexOfChild( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsopenglcontext_accessibilityArrayAttributeValues( nsopenglcontext_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsopenglcontext_accessibilityParameterizedAttributeNames( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsopenglcontext_accessibilityAttributeValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsopenglcontext_accessibilityIndexForChildUIElementAttributeForParameter( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsopenglcontext_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsopenglcontext_accessibilityTemporaryChildren( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsopenglcontext_accessibilityPerformShowMenuOfChild( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsopenglcontext_accessibilityPresenterProcessIdentifier( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsopenglcontext_accessibilityShouldUseUniqueId( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsopenglcontext_accessibilitySupportsNotifications( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsopenglcontext_accessibilityShouldSendNotification( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsopenglcontext_accessibilitySupportsOverriddenAttributes( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsopenglcontext_accessibilityAllowsOverriddenAttributesWhenIgnored( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsopenglcontext_accessibilitySetOverrideValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsopenglcontext_accessibilityEncodeOverriddenAttributes( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsopenglcontext_accessibilityDecodeOverriddenAttributes( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsopenglcontext_accessibilitySupportsCustomElementData( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsopenglcontext_bind( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsopenglcontext_awakeFromNib( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsopenglcontext_userInterfaceItemIdentifier( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsopenglcontext_setUserInterfaceItemIdentifier( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsopenglcontext_unbind( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsopenglcontext_valueClassForBinding( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsopenglcontext_NS_observationForKeyPath( nsopenglcontext_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsopenglcontext_NS_observationForKeyPaths( nsopenglcontext_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsopenglcontext_optionDescriptionsForBinding( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsopenglcontext_exposedBindings( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsopenglcontext_infoForBinding( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsopenglcontext_prepareForInterfaceBuilder( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsopenglcontext_accessibilityAddTemporaryChild( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsopenglcontext_accessibilityRemoveTemporaryChild( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsopenglcontext_NSLifeguard_autorelease( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsopenglcontext_accessibilitySetPresenterProcessIdentifier( nsopenglcontext_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsopenglcontext_NS_tiledLayerVisibleRect( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsopenglcontext_NS_addTiledLayerDescendent( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsopenglcontext_NS_removeTiledLayerDescendent( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsopenglcontext_CAMLTypeSupportedForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsopenglcontext_CAMLTypeForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsopenglcontext_CA_validateValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsopenglcontext_encodeWithCAMLWriter( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsopenglcontext_CA_interpolateValues( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsopenglcontext_CAMLType( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsopenglcontext_CA_archivingValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsopenglcontext_CA_roundToIntegerFromValue( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsopenglcontext_CA_addValue( nsopenglcontext_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsopenglcontext_CA_interpolateValue( nsopenglcontext_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsopenglcontext_CA_distanceToValue( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsopenglcontext_CA_prepareRenderValue( nsopenglcontext_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsopenglcontext_CA_copyRenderValue( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsopenglcontext_supportsRBSXPCSecureCoding( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsopenglcontext_RBSIsXPCObject( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsopenglcontext_NSRepresentation( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsopenglcontext_supportsBSXPCSecureCoding( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsopenglcontext_bs_isPlistableType( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsopenglcontext_bs_secureEncoded( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsopenglcontext_bs_encoded( nsopenglcontext_t object );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsopenglcontext_classForCoder( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsopenglcontext_replacementObjectForCoder( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsopenglcontext_awakeAfterUsingCoder( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsopenglcontext_implementsSelector( nsopenglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsopenglcontext_setObservationInfo( nsopenglcontext_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsopenglcontext_setValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsopenglcontext_replacementObjectForPortCoder( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsopenglcontext_willChangeValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsopenglcontext_didChangeValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsopenglcontext_dictionaryWithValuesForKeys( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsopenglcontext_valueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsopenglcontext_valueForUndefinedKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsopenglcontext_classForKeyedArchiver( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsopenglcontext_replacementObjectForKeyedArchiver( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsopenglcontext_valueForKeyPath( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsopenglcontext_addObserver( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsopenglcontext_objectSpecifier( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsopenglcontext_replacementObjectForArchiver( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsopenglcontext_classForArchiver( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsopenglcontext_attributeKeys( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsopenglcontext_toOneRelationshipKeys( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsopenglcontext_toManyRelationshipKeys( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsopenglcontext_inverseForRelationshipKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsopenglcontext_classDescription( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsopenglcontext_copyScriptingValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsopenglcontext_methodDescriptionForSelector( nsopenglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsopenglcontext_newScriptingObjectOfClass( nsopenglcontext_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsopenglcontext_handleQueryWithUnboundKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsopenglcontext_handleTakeValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsopenglcontext_storedValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsopenglcontext_takeStoredValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsopenglcontext_takeValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsopenglcontext_valuesForKeys( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsopenglcontext_takeValuesFromDictionary( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsopenglcontext_unableToSetNilForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsopenglcontext_keyValueBindingForKey( nsopenglcontext_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsopenglcontext_createKeyValueBindingForKey( nsopenglcontext_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsopenglcontext_mutableArrayValueForKeyPath( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsopenglcontext_mutableOrderedSetValueForKeyPath( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsopenglcontext_mutableSetValueForKeyPath( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsopenglcontext_removeObservation( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsopenglcontext_receiveObservedValue( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsopenglcontext_receiveObservedError( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsopenglcontext_finishObserving( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsopenglcontext_setObservation( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsopenglcontext_observeValueForKeyPath( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsopenglcontext_removeObserver( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsopenglcontext_className( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsopenglcontext_addChainedObservers( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsopenglcontext_addObserverBlock( nsopenglcontext_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsopenglcontext_addObservationTransformer( nsopenglcontext_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsopenglcontext_setNilValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsopenglcontext_mutableArrayValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsopenglcontext_mutableOrderedSetValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsopenglcontext_mutableSetValueForKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsopenglcontext_setValuesForKeysWithDictionary( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsopenglcontext_willChange( nsopenglcontext_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsopenglcontext_didChange( nsopenglcontext_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsopenglcontext_observationInfo( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsopenglcontext_autoContentAccessingProxy( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsopenglcontext_coerceValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsopenglcontext_setScriptingProperties( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsopenglcontext_scriptingValueForSpecifier( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsopenglcontext_scriptingProperties( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsopenglcontext_coerceValueForScriptingProperties( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsopenglcontext_valueAtIndex( nsopenglcontext_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsopenglcontext_valueWithName( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsopenglcontext_valueWithUniqueID( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsopenglcontext_insertValue( nsopenglcontext_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsopenglcontext_replaceValueAtIndex( nsopenglcontext_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsopenglcontext_removeValueAtIndex( nsopenglcontext_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsopenglcontext_classForPortCoder( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsopenglcontext_performSelector( nsopenglcontext_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsopenglcontext_classCode( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsopenglcontext_isEqualTo( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsopenglcontext_isLessThanOrEqualTo( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsopenglcontext_isLessThan( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsopenglcontext_isGreaterThanOrEqualTo( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsopenglcontext_isGreaterThan( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsopenglcontext_isNotEqualTo( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsopenglcontext_doesContain( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsopenglcontext_isLike( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsopenglcontext_isCaseInsensitiveLike( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsopenglcontext_performSelectorOnMainThread( nsopenglcontext_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsopenglcontext_performSelectorInBackground( nsopenglcontext_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsopenglcontext_classDescriptionForDestinationKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsopenglcontext_entityName( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsopenglcontext_ownsDestinationObjectsForRelationshipKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsopenglcontext_isToManyKey( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsopenglcontext_removeObject( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsopenglcontext_addObject( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsopenglcontext_validateTakeValue( nsopenglcontext_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsopenglcontext_allPropertyKeys( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsopenglcontext_clearProperties( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsopenglcontext_flushKeyBindings( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsopenglcontext_takeStoredValuesFromDictionary( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsopenglcontext_isNSDate__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsopenglcontext_isNSString__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsopenglcontext_isNSCFConstantString__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsopenglcontext_isNSNumber__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsopenglcontext_isNSArray__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsopenglcontext_isNSDictionary__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsopenglcontext_isNSSet__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsopenglcontext_isNSData__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsopenglcontext_isNSObject__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsopenglcontext_isNSOrderedSet__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsopenglcontext_isNSTimeZone__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsopenglcontext_isNSValue__( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsopenglcontext_description( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsopenglcontext_doesNotRecognizeSelector( nsopenglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsopenglcontext_methodSignatureForSelector( nsopenglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsopenglcontext_retain( nsopenglcontext_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsopenglcontext_retainCount( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsopenglcontext_autorelease( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsopenglcontext_copy( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsopenglcontext_finalize( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsopenglcontext_isEqual( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsopenglcontext_class( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsopenglcontext_self( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsopenglcontext_isProxy( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsopenglcontext_isKindOfClass( nsopenglcontext_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsopenglcontext_isMemberOfClass( nsopenglcontext_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsopenglcontext_conformsToProtocol( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsopenglcontext_respondsToSelector( nsopenglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsopenglcontext_zone( nsopenglcontext_t object );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsopenglcontext_hash( nsopenglcontext_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsopenglcontext_superclass( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsopenglcontext_debugDescription( nsopenglcontext_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsopenglcontext_init( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsopenglcontext_retainWeakReference( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsopenglcontext_allowsWeakReference( nsopenglcontext_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsopenglcontext_isFault( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsopenglcontext_forwardInvocation( nsopenglcontext_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsopenglcontext_forwardingTargetForSelector( nsopenglcontext_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsopenglcontext_mutableCopy( nsopenglcontext_t object );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsopenglcontext_initialize( );

// Signature from Objective-C Runtime: @ currentContext @ :
nsobject_t 			nsopenglcontext_currentContext( );

// Signature from Objective-C Runtime: v setCurrentContext: @ : @
void 				nsopenglcontext_setCurrentContext( nsobject_t arg0 );

// Signature from Objective-C Runtime: v clearCurrentContext @ :
void 				nsopenglcontext_clearCurrentContext( );

// Signature from Objective-C Runtime: @ openGLContextWithCGLContextObj: @ : ^{_CGLContextObject=}
nsobject_t 			nsopenglcontext_openGLContextWithCGLContextObj( _CGLContextObject* arg0 );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsopenglcontext_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsopenglcontext_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsopenglcontext_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsopenglcontext_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsopenglcontext_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsopenglcontext_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsopenglcontext_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsopenglcontext_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsopenglcontext_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsopenglcontext_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsopenglcontext_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsopenglcontext_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsopenglcontext_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsopenglcontext_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsopenglcontext_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsopenglcontext_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsopenglcontext_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsopenglcontext_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsopenglcontext_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsopenglcontext_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsopenglcontext_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsopenglcontext_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsopenglcontext_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsopenglcontext_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsopenglcontext_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsopenglcontext_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsopenglcontext_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsopenglcontext_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsopenglcontext_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsopenglcontext_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsopenglcontext_copyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsopenglcontext_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsopenglcontext_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsopenglcontext_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsopenglcontext_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsopenglcontext_t 	nsopenglcontext_alloc( );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsopenglcontext_mutableCopyWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsopenglcontext_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsopenglcontext_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsopenglcontext_instancesRespondToSelector( nsselector_t arg0 );

#endif