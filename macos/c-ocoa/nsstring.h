/*
	This file has been automatically generated by the shimmer industries c-ocoa API generator
	Thus, manual changes to this file will be lost if the file is re-generated.
*/

#ifndef SHIMMER_C_OCOA_NSSTRING_HEADER
#define SHIMMER_C_OCOA_NSSTRING_HEADER

typedef void*	nsstring_t;
#include "c_ocoa_types.h"

// Signature from Objective-C Runtime: @ initWithPasteboardPropertyList:ofType: @ : @ @
nsobject_t 			nsstring_initWithPasteboardPropertyList( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ stringWithoutAmpersand @ :
nsobject_t 			nsstring_stringWithoutAmpersand( nsstring_t object );

// Signature from Objective-C Runtime: @ writableTypesForPasteboard: @ : @
nsobject_t 			nsstring_writableTypesForPasteboard( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pasteboardPropertyListForType: @ : @
nsobject_t 			nsstring_pasteboardPropertyListForType( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfGraphicalSegmentAtIndex: @ : Q
_NSRange 			nsstring_rangeOfGraphicalSegmentAtIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: c NS_isSourceOver @ :
char 				nsstring_NS_isSourceOver( nsstring_t object );

// Signature from Objective-C Runtime: @ imageMetadataFromFileName @ :
nsobject_t 			nsstring_imageMetadataFromFileName( nsstring_t object );

// Signature from Objective-C Runtime: @ scaleableResourceMetadataFromFileName @ :
nsobject_t 			nsstring_scaleableResourceMetadataFromFileName( nsstring_t object );

// Signature from Objective-C Runtime: {CGSize=dd} sizeWithAttributes: @ : @
CGSize 				nsstring_sizeWithAttributes( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {CGRect={CGPoint=dd}{CGSize=dd}} boundingRectWithSize:options:attributes:context: @ : {CGSize=dd} q @ @
CGRect 				nsstring_boundingRectWithSize( nsstring_t object, CGSize arg0, long long arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v drawInRect:withAttributes: @ : {CGRect={CGPoint=dd}{CGSize=dd}} @
void 				nsstring_drawInRect( nsstring_t object, CGRect arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v drawAtPoint:withAttributes: @ : {CGPoint=dd} @
void 				nsstring_drawAtPoint( nsstring_t object, CGPoint arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v drawWithRect:options:attributes:context: @ : {CGRect={CGPoint=dd}{CGSize=dd}} q @ @
void 				nsstring_drawWithRect( nsstring_t object, CGRect arg0, long long arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: c hasColorGlyphsInRange:attributes: @ : {_NSRange=QQ} @
char 				nsstring_hasColorGlyphsInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ stringByStrippingLeadingAndTrailingWhitespaceAndQuotes @ :
nsobject_t 			nsstring_stringByStrippingLeadingAndTrailingWhitespaceAndQuotes( nsstring_t object );

// Signature from Objective-C Runtime: v encodeWithCAMLWriter: @ : @
void 				nsstring_encodeWithCAMLWriter( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLType @ :
nsobject_t 			nsstring_CAMLType( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAppendingPathExtensionForType: @ : @
nsobject_t 			nsstring_stringByAppendingPathExtensionForType( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByAppendingPathComponent:conformingToType: @ : @ @
nsobject_t 			nsstring_stringByAppendingPathComponent( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ cutStringByResolvingAndStandardizingPath @ :
nsobject_t 			nsstring_cutStringByResolvingAndStandardizingPath( nsstring_t object );

// Signature from Objective-C Runtime: c ls_matchesStringForPluginQuery: @ : @
char 				nsstring_ls_matchesStringForPluginQuery( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ls_cleanForPluginQuery @ :
nsobject_t 			nsstring_ls_cleanForPluginQuery( nsstring_t object );

// Signature from Objective-C Runtime: c ls_matchesForPluginQuery: @ : @
char 				nsstring_ls_matchesForPluginQuery( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ ls_visuallyOrderCharactersReturningError: @ : ^@
nsobject_t 			nsstring_ls_visuallyOrderCharactersReturningError( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: c ls_isRecursiveKey @ :
char 				nsstring_ls_isRecursiveKey( nsstring_t object );

// Signature from Objective-C Runtime: @ ls_updatedKey @ :
nsobject_t 			nsstring_ls_updatedKey( nsstring_t object );

// Signature from Objective-C Runtime: @ firstCharacter @ :
nsobject_t 			nsstring_firstCharacter( nsstring_t object );

// Signature from Objective-C Runtime: @ componentsByLanguage: @ : i
nsobject_t 			nsstring_componentsByLanguage( nsstring_t object, int arg0 );

// Signature from Objective-C Runtime: @ pinyinStringFromPinyinWithToneNumber @ :
nsobject_t 			nsstring_pinyinStringFromPinyinWithToneNumber( nsstring_t object );

// Signature from Objective-C Runtime: @ zhuyinSyllableFromPinyinSyllable @ :
nsobject_t 			nsstring_zhuyinSyllableFromPinyinSyllable( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByStrippingDiacritics @ :
nsobject_t 			nsstring_stringByStrippingDiacritics( nsstring_t object );

// Signature from Objective-C Runtime: @ toneFromPinyinSyllableWithNumber @ :
nsobject_t 			nsstring_toneFromPinyinSyllableWithNumber( nsstring_t object );

// Signature from Objective-C Runtime: @ strokeStringFromNumberString @ :
nsobject_t 			nsstring_strokeStringFromNumberString( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByApplyingPinyinToneMarkToFirstSyllableWithToneNumber: @ : Q
nsobject_t 			nsstring_stringByApplyingPinyinToneMarkToFirstSyllableWithToneNumber( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: q simplifiedChineseCompare: @ : @
long long 			nsstring_simplifiedChineseCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q traditionalChinesePinyinCompare: @ : @
long long 			nsstring_traditionalChinesePinyinCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q traditionalChineseZhuyinCompare: @ : @
long long 			nsstring_traditionalChineseZhuyinCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ copyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsstring_copyWithZone( nsstring_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: c isEqual: @ : @
char 				nsstring_isEqual( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q hash @ :
unsigned long long 	nsstring_hash( nsstring_t object );

// Signature from Objective-C Runtime: @ description @ :
nsobject_t 			nsstring_description( nsstring_t object );

// Signature from Objective-C Runtime: @ init @ :
nsobject_t 			nsstring_init( nsstring_t object );

// Signature from Objective-C Runtime: d doubleValue @ :
double 				nsstring_doubleValue( nsstring_t object );

// Signature from Objective-C Runtime: q longLongValue @ :
long long 			nsstring_longLongValue( nsstring_t object );

// Signature from Objective-C Runtime: c isNSString__ @ :
char 				nsstring_isNSString__( nsstring_t object );

// Signature from Objective-C Runtime: i intValue @ :
int 				nsstring_intValue( nsstring_t object );

// Signature from Objective-C Runtime: f floatValue @ :
float 				nsstring_floatValue( nsstring_t object );

// Signature from Objective-C Runtime: Q lengthOfBytesUsingEncoding: @ : Q
unsigned long long 	nsstring_lengthOfBytesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: Q length @ :
unsigned long long 	nsstring_length( nsstring_t object );

// Signature from Objective-C Runtime: c getBytes:maxLength:usedLength:encoding:options:range:remainingRange: @ : ^v Q ^Q Q Q {_NSRange=QQ} ^{_NSRange=QQ}
char 				nsstring_getBytes( nsstring_t object, void* arg0, unsigned long long arg1, unsigned long long* arg2, unsigned long long arg3, unsigned long long arg4, _NSRange arg5, _NSRange* arg6 );

// Signature from Objective-C Runtime: @ mutableCopyWithZone: @ : ^{_NSZone=}
nsobject_t 			nsstring_mutableCopyWithZone( nsstring_t object, _NSZone* arg0 );

// Signature from Objective-C Runtime: r* cString @ :
char* 				nsstring_cString( nsstring_t object );

// Signature from Objective-C Runtime: q compare:options:range:locale: @ : @ Q {_NSRange=QQ} @
long long 			nsstring_compare( nsstring_t object, nsobject_t arg0, unsigned long long arg1, _NSRange arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: r* UTF8String @ :
char* 				nsstring_UTF8String( nsstring_t object );

// Signature from Objective-C Runtime: r* cStringUsingEncoding: @ : Q
char* 				nsstring_cStringUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ lowercaseStringWithLocale: @ : @
nsobject_t 			nsstring_lowercaseStringWithLocale( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ uppercaseStringWithLocale: @ : @
nsobject_t 			nsstring_uppercaseStringWithLocale( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: S characterAtIndex: @ : Q
unsigned short 		nsstring_characterAtIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: v getCharacters:range: @ : ^S {_NSRange=QQ}
void 				nsstring_getCharacters( nsstring_t object, unsigned short* arg0, _NSRange arg1 );

// Signature from Objective-C Runtime: @ substringWithRange: @ : {_NSRange=QQ}
nsobject_t 			nsstring_substringWithRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: c isEqualToString: @ : @
char 				nsstring_isEqualToString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q fastestEncoding @ :
unsigned long long 	nsstring_fastestEncoding( nsstring_t object );

// Signature from Objective-C Runtime: Q smallestEncoding @ :
unsigned long long 	nsstring_smallestEncoding( nsstring_t object );

// Signature from Objective-C Runtime: @ initWithContentsOfFile: @ : @
nsobject_t 			nsstring_initWithContentsOfFile( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithContentsOfURL: @ : @
nsobject_t 			nsstring_initWithContentsOfURL( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForCoder @ :
nsclass_t 			nsstring_classForCoder( nsstring_t object );

// Signature from Objective-C Runtime: c boolValue @ :
char 				nsstring_boolValue( nsstring_t object );

// Signature from Objective-C Runtime: v encodeWithCoder: @ : @
void 				nsstring_encodeWithCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ initWithCoder: @ : @
nsobject_t 			nsstring_initWithCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q cStringLength @ :
unsigned long long 	nsstring_cStringLength( nsstring_t object );

// Signature from Objective-C Runtime: c getCString:maxLength:encoding: @ : * Q Q
char 				nsstring_getCString( nsstring_t object, char* arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: c hasPrefix: @ : @
char 				nsstring_hasPrefix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c hasSuffix: @ : @
char 				nsstring_hasSuffix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v getLineStart:end:contentsEnd:forRange: @ : ^Q ^Q ^Q {_NSRange=QQ}
void 				nsstring_getLineStart( nsstring_t object, unsigned long long* arg0, unsigned long long* arg1, unsigned long long* arg2, _NSRange arg3 );

// Signature from Objective-C Runtime: q integerValue @ :
long long 			nsstring_integerValue( nsstring_t object );

// Signature from Objective-C Runtime: v getParagraphStart:end:contentsEnd:forRange: @ : ^Q ^Q ^Q {_NSRange=QQ}
void 				nsstring_getParagraphStart( nsstring_t object, unsigned long long* arg0, unsigned long long* arg1, unsigned long long* arg2, _NSRange arg3 );

// Signature from Objective-C Runtime: @ initWithString: @ : @
nsobject_t 			nsstring_initWithString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ replacementObjectForPortCoder: @ : @
nsobject_t 			nsstring_replacementObjectForPortCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: r* fileSystemRepresentation @ :
char* 				nsstring_fileSystemRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: @ formatConfiguration @ :
nsobject_t 			nsstring_formatConfiguration( nsstring_t object );

// Signature from Objective-C Runtime: @ pathExtension @ :
nsobject_t 			nsstring_pathExtension( nsstring_t object );

// Signature from Objective-C Runtime: @ lowercaseString @ :
nsobject_t 			nsstring_lowercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAppendingString: @ : @
nsobject_t 			nsstring_stringByAppendingString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q caseInsensitiveCompare: @ : @
long long 			nsstring_caseInsensitiveCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByReplacingOccurrencesOfString:withString: @ : @ @
nsobject_t 			nsstring_stringByReplacingOccurrencesOfString( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ substringFromIndex: @ : Q
nsobject_t 			nsstring_substringFromIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: c containsString: @ : @
char 				nsstring_containsString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByReplacingCharactersInRange:withString: @ : {_NSRange=QQ} @
nsobject_t 			nsstring_stringByReplacingCharactersInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ pathComponents @ :
nsobject_t 			nsstring_pathComponents( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAppendingPathExtension: @ : @
nsobject_t 			nsstring_stringByAppendingPathExtension( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ lastPathComponent @ :
nsobject_t 			nsstring_lastPathComponent( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByDeletingPathExtension @ :
nsobject_t 			nsstring_stringByDeletingPathExtension( nsstring_t object );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfCharacterFromSet:options: @ : @ Q
_NSRange 			nsstring_rangeOfCharacterFromSet( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ substringToIndex: @ : Q
nsobject_t 			nsstring_substringToIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ initWithCharacters:length: @ : r^S Q
nsobject_t 			nsstring_initWithCharacters( nsstring_t object, unsigned short* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfString:options: @ : @ Q
_NSRange 			nsstring_rangeOfString( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringByApplyingTransform:reverse: @ : @ c
nsobject_t 			nsstring_stringByApplyingTransform( nsstring_t object, nsobject_t arg0, char arg1 );

// Signature from Objective-C Runtime: @ initWithBytesNoCopy:length:encoding:freeWhenDone: @ : ^v Q Q c
nsobject_t 			nsstring_initWithBytesNoCopy( nsstring_t object, void* arg0, unsigned long long arg1, unsigned long long arg2, char arg3 );

// Signature from Objective-C Runtime: @ dataUsingEncoding: @ : Q
nsobject_t 			nsstring_dataUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ componentsSeparatedByString: @ : @
nsobject_t 			nsstring_componentsSeparatedByString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ capitalizedString @ :
nsobject_t 			nsstring_capitalizedString( nsstring_t object );

// Signature from Objective-C Runtime: c getFileSystemRepresentation:maxLength: @ : * Q
char 				nsstring_getFileSystemRepresentation( nsstring_t object, char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringByDeletingLastPathComponent @ :
nsobject_t 			nsstring_stringByDeletingLastPathComponent( nsstring_t object );

// Signature from Objective-C Runtime: @ propertyList @ :
nsobject_t 			nsstring_propertyList( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByExpandingTildeInPath @ :
nsobject_t 			nsstring_stringByExpandingTildeInPath( nsstring_t object );

// Signature from Objective-C Runtime: @ initWithCString:encoding: @ : r* Q
nsobject_t 			nsstring_initWithCString( nsstring_t object, char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringByAppendingFormat: @ : @
nsobject_t 			nsstring_stringByAppendingFormat( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByPaddingToLength:withString:startingAtIndex: @ : Q @ Q
nsobject_t 			nsstring_stringByPaddingToLength( nsstring_t object, unsigned long long arg0, nsobject_t arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ stringByStandardizingPath @ :
nsobject_t 			nsstring_stringByStandardizingPath( nsstring_t object );

// Signature from Objective-C Runtime: @ initWithUTF8String: @ : r*
nsobject_t 			nsstring_initWithUTF8String( nsstring_t object, char* arg0 );

// Signature from Objective-C Runtime: @ componentsSeparatedByCharactersInSet: @ : @
nsobject_t 			nsstring_componentsSeparatedByCharactersInSet( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v enumerateSubstringsInRange:options:usingBlock: @ : {_NSRange=QQ} Q @?
void 				nsstring_enumerateSubstringsInRange( nsstring_t object, _NSRange arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfComposedCharacterSequenceAtIndex: @ : Q
_NSRange 			nsstring_rangeOfComposedCharacterSequenceAtIndex( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ uppercaseString @ :
nsobject_t 			nsstring_uppercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByTrimmingCharactersInSet: @ : @
nsobject_t 			nsstring_stringByTrimmingCharactersInSet( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c writeToFile:atomically: @ : @ c
char 				nsstring_writeToFile( nsstring_t object, nsobject_t arg0, char arg1 );

// Signature from Objective-C Runtime: @ initWithData:encoding: @ : @ Q
nsobject_t 			nsstring_initWithData( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: c writeToURL:atomically: @ : @ c
char 				nsstring_writeToURL( nsstring_t object, nsobject_t arg0, char arg1 );

// Signature from Objective-C Runtime: c scriptingIsEqualTo: @ : @
char 				nsstring_scriptingIsEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingIsLessThanOrEqualTo: @ : @
char 				nsstring_scriptingIsLessThanOrEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingIsLessThan: @ : @
char 				nsstring_scriptingIsLessThan( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingIsGreaterThanOrEqualTo: @ : @
char 				nsstring_scriptingIsGreaterThanOrEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingIsGreaterThan: @ : @
char 				nsstring_scriptingIsGreaterThan( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingBeginsWith: @ : @
char 				nsstring_scriptingBeginsWith( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingEndsWith: @ : @
char 				nsstring_scriptingEndsWith( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c scriptingContains: @ : @
char 				nsstring_scriptingContains( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ variantFittingPresentationWidth: @ : q
nsobject_t 			nsstring_variantFittingPresentationWidth( nsstring_t object, long long arg0 );

// Signature from Objective-C Runtime: @ initWithCharactersNoCopy:length:freeWhenDone: @ : ^S Q c
nsobject_t 			nsstring_initWithCharactersNoCopy( nsstring_t object, unsigned short* arg0, unsigned long long arg1, char arg2 );

// Signature from Objective-C Runtime: @ decomposedStringWithCanonicalMapping @ :
nsobject_t 			nsstring_decomposedStringWithCanonicalMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ precomposedStringWithCanonicalMapping @ :
nsobject_t 			nsstring_precomposedStringWithCanonicalMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ decomposedStringWithCompatibilityMapping @ :
nsobject_t 			nsstring_decomposedStringWithCompatibilityMapping( nsstring_t object );

// Signature from Objective-C Runtime: @ precomposedStringWithCompatibilityMapping @ :
nsobject_t 			nsstring_precomposedStringWithCompatibilityMapping( nsstring_t object );

// Signature from Objective-C Runtime: c canBeConvertedToEncoding: @ : Q
char 				nsstring_canBeConvertedToEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: r* lossyCString @ :
char* 				nsstring_lossyCString( nsstring_t object );

// Signature from Objective-C Runtime: @ quotedStringRepresentation @ :
nsobject_t 			nsstring_quotedStringRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: c isAbsolutePath @ :
char 				nsstring_isAbsolutePath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByResolvingSymlinksInPath @ :
nsobject_t 			nsstring_stringByResolvingSymlinksInPath( nsstring_t object );

// Signature from Objective-C Runtime: @ initWithCStringNoCopy:length:freeWhenDone: @ : * Q c
nsobject_t 			nsstring_initWithCStringNoCopy( nsstring_t object, char* arg0, unsigned long long arg1, char arg2 );

// Signature from Objective-C Runtime: @ stringByAbbreviatingWithTildeInPath @ :
nsobject_t 			nsstring_stringByAbbreviatingWithTildeInPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringsByAppendingPaths: @ : @
nsobject_t 			nsstring_stringsByAppendingPaths( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q completePathIntoString:caseSensitive:matchesIntoArray:filterTypes: @ : ^@ c ^@ @
unsigned long long 	nsstring_completePathIntoString( nsstring_t object, nsobject_t* arg0, char arg1, nsobject_t* arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ stringByConvertingPathToURL @ :
nsobject_t 			nsstring_stringByConvertingPathToURL( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByConvertingURLToPath @ :
nsobject_t 			nsstring_stringByConvertingURLToPath( nsstring_t object );

// Signature from Objective-C Runtime: @ writableTypeIdentifiersForItemProvider @ :
nsobject_t 			nsstring_writableTypeIdentifiersForItemProvider( nsstring_t object );

// Signature from Objective-C Runtime: @ loadDataWithTypeIdentifier:forItemProviderCompletionHandler: @ : @ @?
nsobject_t 			nsstring_loadDataWithTypeIdentifier( nsstring_t object, nsobject_t arg0, nsobject_t* arg1 );

// Signature from Objective-C Runtime: c isLike: @ : @
char 				nsstring_isLike( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isCaseInsensitiveLike: @ : @
char 				nsstring_isCaseInsensitiveLike( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c matchesPattern:caseInsensitive: @ : @ c
char 				nsstring_matchesPattern( nsstring_t object, nsobject_t arg0, char arg1 );

// Signature from Objective-C Runtime: @ capitalizedStringWithLocale: @ : @
nsobject_t 			nsstring_capitalizedStringWithLocale( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q localizedCompare: @ : @
long long 			nsstring_localizedCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q localizedCaseInsensitiveCompare: @ : @
long long 			nsstring_localizedCaseInsensitiveCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: q localizedStandardCompare: @ : @
long long 			nsstring_localizedStandardCompare( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} rangeOfComposedCharacterSequencesForRange: @ : {_NSRange=QQ}
_NSRange 			nsstring_rangeOfComposedCharacterSequencesForRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: @ commonPrefixWithString:options: @ : @ Q
nsobject_t 			nsstring_commonPrefixWithString( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: c localizedHasPrefix: @ : @
char 				nsstring_localizedHasPrefix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c localizedHasSuffix: @ : @
char 				nsstring_localizedHasSuffix( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c localizedCaseInsensitiveContainsString: @ : @
char 				nsstring_localizedCaseInsensitiveContainsString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c localizedStandardContainsString: @ : @
char 				nsstring_localizedStandardContainsString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} localizedStandardRangeOfString: @ : @
_NSRange 			nsstring_localizedStandardRangeOfString( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ localizedUppercaseString @ :
nsobject_t 			nsstring_localizedUppercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ localizedLowercaseString @ :
nsobject_t 			nsstring_localizedLowercaseString( nsstring_t object );

// Signature from Objective-C Runtime: @ localizedCapitalizedString @ :
nsobject_t 			nsstring_localizedCapitalizedString( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByFoldingWithOptions:locale: @ : Q @
nsobject_t 			nsstring_stringByFoldingWithOptions( nsstring_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: {_NSRange=QQ} lineRangeForRange: @ : {_NSRange=QQ}
_NSRange 			nsstring_lineRangeForRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: {_NSRange=QQ} paragraphRangeForRange: @ : {_NSRange=QQ}
_NSRange 			nsstring_paragraphRangeForRange( nsstring_t object, _NSRange arg0 );

// Signature from Objective-C Runtime: v enumerateLinesUsingBlock: @ : @?
void 				nsstring_enumerateLinesUsingBlock( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ displayableString @ :
nsobject_t 			nsstring_displayableString( nsstring_t object );

// Signature from Objective-C Runtime: c getExternalRepresentation:extendedAttributes:forWritingToURLOrPath:usingEncoding:error: @ : ^@ ^@ @ Q ^@
char 				nsstring_getExternalRepresentation( nsstring_t object, nsobject_t* arg0, nsobject_t* arg1, nsobject_t arg2, unsigned long long arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: @ propertyListFromStringsFileFormat @ :
nsobject_t 			nsstring_propertyListFromStringsFileFormat( nsstring_t object );

// Signature from Objective-C Runtime: Q maximumLengthOfBytesUsingEncoding: @ : Q
unsigned long long 	nsstring_maximumLengthOfBytesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ stringByAddingPercentEscapes @ :
nsobject_t 			nsstring_stringByAddingPercentEscapes( nsstring_t object );

// Signature from Objective-C Runtime: @ standardizedURLPath @ :
nsobject_t 			nsstring_standardizedURLPath( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByRemovingPercentEscapes @ :
nsobject_t 			nsstring_stringByRemovingPercentEscapes( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAddingPercentEncodingWithAllowedCharacters: @ : @
nsobject_t 			nsstring_stringByAddingPercentEncodingWithAllowedCharacters( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringByRemovingPercentEncoding @ :
nsobject_t 			nsstring_stringByRemovingPercentEncoding( nsstring_t object );

// Signature from Objective-C Runtime: @ stringByAddingPercentEscapesUsingEncoding: @ : Q
nsobject_t 			nsstring_stringByAddingPercentEscapesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ stringByReplacingPercentEscapesUsingEncoding: @ : Q
nsobject_t 			nsstring_stringByReplacingPercentEscapesUsingEncoding( nsstring_t object, unsigned long long arg0 );

// Signature from Objective-C Runtime: @ stringMarkingUpcaseTransitionsWithDelimiter2: @ : @
nsobject_t 			nsstring_stringMarkingUpcaseTransitionsWithDelimiter2( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ linguisticTagsInRange:scheme:options:orthography:tokenRanges: @ : {_NSRange=QQ} @ Q @ ^@
nsobject_t 			nsstring_linguisticTagsInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: v enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock: @ : {_NSRange=QQ} @ Q @ @?
void 				nsstring_enumerateLinguisticTagsInRange( nsstring_t object, _NSRange arg0, nsobject_t arg1, unsigned long long arg2, nsobject_t arg3, nsobject_t* arg4 );

// Signature from Objective-C Runtime: {_NSRange=QQ} significantText @ :
_NSRange 			nsstring_significantText( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityOverriddenAttributes @ :
nsobject_t 			nsstring_accessibilityOverriddenAttributes( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilityReplaceRange:withText: @ : {_NSRange=QQ} @
char 				nsstring_accessibilityReplaceRange( nsstring_t object, _NSRange arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: d accessibilityVisibleArea @ :
double 				nsstring_accessibilityVisibleArea( nsstring_t object );

// Signature from Objective-C Runtime: Q accessibilityArrayAttributeCount: @ : @
unsigned long long 	nsstring_accessibilityArrayAttributeCount( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: Q accessibilityIndexOfChild: @ : @
unsigned long long 	nsstring_accessibilityIndexOfChild( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityArrayAttributeValues:index:maxCount: @ : @ Q Q
nsobject_t 			nsstring_accessibilityArrayAttributeValues( nsstring_t object, nsobject_t arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ accessibilityParameterizedAttributeNames @ :
nsobject_t 			nsstring_accessibilityParameterizedAttributeNames( nsstring_t object );

// Signature from Objective-C Runtime: @ accessibilityAttributeValue:forParameter: @ : @ @
nsobject_t 			nsstring_accessibilityAttributeValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ accessibilityIndexForChildUIElementAttributeForParameter: @ : @
nsobject_t 			nsstring_accessibilityIndexForChildUIElementAttributeForParameter( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityAttributedValueForStringAttributeAttributeForParameter: @ : @
nsobject_t 			nsstring_accessibilityAttributedValueForStringAttributeAttributeForParameter( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ accessibilityTemporaryChildren @ :
nsobject_t 			nsstring_accessibilityTemporaryChildren( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilityPerformShowMenuOfChild: @ : @
char 				nsstring_accessibilityPerformShowMenuOfChild( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: i accessibilityPresenterProcessIdentifier @ :
int 				nsstring_accessibilityPresenterProcessIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilityShouldUseUniqueId @ :
char 				nsstring_accessibilityShouldUseUniqueId( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilitySupportsNotifications @ :
char 				nsstring_accessibilitySupportsNotifications( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilityShouldSendNotification: @ : @
char 				nsstring_accessibilityShouldSendNotification( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsOverriddenAttributes @ :
char 				nsstring_accessibilitySupportsOverriddenAttributes( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilityAllowsOverriddenAttributesWhenIgnored @ :
char 				nsstring_accessibilityAllowsOverriddenAttributesWhenIgnored( nsstring_t object );

// Signature from Objective-C Runtime: c accessibilitySetOverrideValue:forAttribute: @ : @ @
char 				nsstring_accessibilitySetOverrideValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v accessibilityEncodeOverriddenAttributes: @ : @
void 				nsstring_accessibilityEncodeOverriddenAttributes( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityDecodeOverriddenAttributes: @ : @
void 				nsstring_accessibilityDecodeOverriddenAttributes( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c accessibilitySupportsCustomElementData @ :
char 				nsstring_accessibilitySupportsCustomElementData( nsstring_t object );

// Signature from Objective-C Runtime: v bind:toObject:withKeyPath:options: @ : @ @ @ @
void 				nsstring_bind( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v awakeFromNib @ :
void 				nsstring_awakeFromNib( nsstring_t object );

// Signature from Objective-C Runtime: @ userInterfaceItemIdentifier @ :
nsobject_t 			nsstring_userInterfaceItemIdentifier( nsstring_t object );

// Signature from Objective-C Runtime: v setUserInterfaceItemIdentifier: @ : @
void 				nsstring_setUserInterfaceItemIdentifier( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unbind: @ : @
void 				nsstring_unbind( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # valueClassForBinding: @ : @
nsclass_t 			nsstring_valueClassForBinding( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPath:options:block: @ : @ Q @?
nsobject_t 			nsstring_NS_observationForKeyPath( nsstring_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ NS_observationForKeyPaths:options:block: @ : @ Q @?
nsobject_t 			nsstring_NS_observationForKeyPaths( nsstring_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ optionDescriptionsForBinding: @ : @
nsobject_t 			nsstring_optionDescriptionsForBinding( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ exposedBindings @ :
nsobject_t 			nsstring_exposedBindings( nsstring_t object );

// Signature from Objective-C Runtime: @ infoForBinding: @ : @
nsobject_t 			nsstring_infoForBinding( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v prepareForInterfaceBuilder @ :
void 				nsstring_prepareForInterfaceBuilder( nsstring_t object );

// Signature from Objective-C Runtime: v accessibilityAddTemporaryChild: @ : @
void 				nsstring_accessibilityAddTemporaryChild( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v accessibilityRemoveTemporaryChild: @ : @
void 				nsstring_accessibilityRemoveTemporaryChild( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ NSLifeguard_autorelease @ :
nsobject_t 			nsstring_NSLifeguard_autorelease( nsstring_t object );

// Signature from Objective-C Runtime: v accessibilitySetPresenterProcessIdentifier: @ : i
void 				nsstring_accessibilitySetPresenterProcessIdentifier( nsstring_t object, int arg0 );

// Signature from Objective-C Runtime: @ NS_tiledLayerVisibleRect @ :
nsobject_t 			nsstring_NS_tiledLayerVisibleRect( nsstring_t object );

// Signature from Objective-C Runtime: v NS_addTiledLayerDescendent: @ : @
void 				nsstring_NS_addTiledLayerDescendent( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v NS_removeTiledLayerDescendent: @ : @
void 				nsstring_NS_removeTiledLayerDescendent( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CAMLTypeSupportedForKey: @ : @
char 				nsstring_CAMLTypeSupportedForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CAMLTypeForKey: @ : @
nsobject_t 			nsstring_CAMLTypeForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c CA_validateValue:forKey: @ : @ @
char 				nsstring_CA_validateValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValues:::interpolator: @ : @ @ @ r^{ValueInterpolator=dddddddddB}
nsobject_t 			nsstring_CA_interpolateValues( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, ValueInterpolator* arg3 );

// Signature from Objective-C Runtime: @ CA_archivingValueForKey: @ : @
nsobject_t 			nsstring_CA_archivingValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_roundToIntegerFromValue: @ : @
nsobject_t 			nsstring_CA_roundToIntegerFromValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ CA_addValue:multipliedBy: @ : @ i
nsobject_t 			nsstring_CA_addValue( nsstring_t object, nsobject_t arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_interpolateValue:byFraction: @ : @ f
nsobject_t 			nsstring_CA_interpolateValue( nsstring_t object, nsobject_t arg0, float arg1 );

// Signature from Objective-C Runtime: d CA_distanceToValue: @ : @
double 				nsstring_CA_distanceToValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v CA_prepareRenderValue @ :
void 				nsstring_CA_prepareRenderValue( nsstring_t object );

// Signature from Objective-C Runtime: ^{Object=^^?{Atomic={?=i}}} CA_copyRenderValue @ :
Object* 			nsstring_CA_copyRenderValue( nsstring_t object );

// Signature from Objective-C Runtime: c supportsRBSXPCSecureCoding @ :
char 				nsstring_supportsRBSXPCSecureCoding( nsstring_t object );

// Signature from Objective-C Runtime: c RBSIsXPCObject @ :
char 				nsstring_RBSIsXPCObject( nsstring_t object );

// Signature from Objective-C Runtime: @ NSRepresentation @ :
nsobject_t 			nsstring_NSRepresentation( nsstring_t object );

// Signature from Objective-C Runtime: c supportsBSXPCSecureCoding @ :
char 				nsstring_supportsBSXPCSecureCoding( nsstring_t object );

// Signature from Objective-C Runtime: c bs_isPlistableType @ :
char 				nsstring_bs_isPlistableType( nsstring_t object );

// Signature from Objective-C Runtime: @ bs_secureEncoded @ :
nsobject_t 			nsstring_bs_secureEncoded( nsstring_t object );

// Signature from Objective-C Runtime: @ bs_encoded @ :
nsobject_t 			nsstring_bs_encoded( nsstring_t object );

// Signature from Objective-C Runtime: @ replacementObjectForCoder: @ : @
nsobject_t 			nsstring_replacementObjectForCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ awakeAfterUsingCoder: @ : @
nsobject_t 			nsstring_awakeAfterUsingCoder( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c implementsSelector: @ : :
char 				nsstring_implementsSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: v setObservationInfo: @ : ^v
void 				nsstring_setObservationInfo( nsstring_t object, void* arg0 );

// Signature from Objective-C Runtime: v setValue:forKey: @ : @ @
void 				nsstring_setValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v willChangeValueForKey: @ : @
void 				nsstring_willChangeValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v didChangeValueForKey: @ : @
void 				nsstring_didChangeValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ dictionaryWithValuesForKeys: @ : @
nsobject_t 			nsstring_dictionaryWithValuesForKeys( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKey: @ : @
nsobject_t 			nsstring_valueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForUndefinedKey: @ : @
nsobject_t 			nsstring_valueForUndefinedKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForKeyedArchiver @ :
nsclass_t 			nsstring_classForKeyedArchiver( nsstring_t object );

// Signature from Objective-C Runtime: @ replacementObjectForKeyedArchiver: @ : @
nsobject_t 			nsstring_replacementObjectForKeyedArchiver( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueForKeyPath: @ : @
nsobject_t 			nsstring_valueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserver: @ : @
nsobject_t 			nsstring_addObserver( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ objectSpecifier @ :
nsobject_t 			nsstring_objectSpecifier( nsstring_t object );

// Signature from Objective-C Runtime: @ replacementObjectForArchiver: @ : @
nsobject_t 			nsstring_replacementObjectForArchiver( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: # classForArchiver @ :
nsclass_t 			nsstring_classForArchiver( nsstring_t object );

// Signature from Objective-C Runtime: @ attributeKeys @ :
nsobject_t 			nsstring_attributeKeys( nsstring_t object );

// Signature from Objective-C Runtime: @ toOneRelationshipKeys @ :
nsobject_t 			nsstring_toOneRelationshipKeys( nsstring_t object );

// Signature from Objective-C Runtime: @ toManyRelationshipKeys @ :
nsobject_t 			nsstring_toManyRelationshipKeys( nsstring_t object );

// Signature from Objective-C Runtime: @ inverseForRelationshipKey: @ : @
nsobject_t 			nsstring_inverseForRelationshipKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classDescription @ :
nsobject_t 			nsstring_classDescription( nsstring_t object );

// Signature from Objective-C Runtime: @ copyScriptingValue:forKey:withProperties: @ : @ @ @
nsobject_t 			nsstring_copyScriptingValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} methodDescriptionForSelector: @ : :
objc_method_description* nsstring_methodDescriptionForSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ newScriptingObjectOfClass:forValueForKey:withContentsValue:properties: @ : # @ @ @
nsobject_t 			nsstring_newScriptingObjectOfClass( nsstring_t object, nsclass_t arg0, nsobject_t arg1, nsobject_t arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: @ handleQueryWithUnboundKey: @ : @
nsobject_t 			nsstring_handleQueryWithUnboundKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v handleTakeValue:forUnboundKey: @ : @ @
void 				nsstring_handleTakeValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ storedValueForKey: @ : @
nsobject_t 			nsstring_storedValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeStoredValue:forKey: @ : @ @
void 				nsstring_takeStoredValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v takeValue:forKey: @ : @ @
void 				nsstring_takeValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valuesForKeys: @ : @
nsobject_t 			nsstring_valuesForKeys( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v takeValuesFromDictionary: @ : @
void 				nsstring_takeValuesFromDictionary( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v unableToSetNilForKey: @ : @
void 				nsstring_unableToSetNilForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ keyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsstring_keyValueBindingForKey( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ createKeyValueBindingForKey:typeMask: @ : @ Q
nsobject_t 			nsstring_createKeyValueBindingForKey( nsstring_t object, nsobject_t arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKeyPath: @ : @
nsobject_t 			nsstring_mutableArrayValueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKeyPath: @ : @
nsobject_t 			nsstring_mutableOrderedSetValueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKeyPath: @ : @
nsobject_t 			nsstring_mutableSetValueForKeyPath( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObservation: @ : @
void 				nsstring_removeObservation( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedValue: @ : @
void 				nsstring_receiveObservedValue( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v receiveObservedError: @ : @
void 				nsstring_receiveObservedError( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v finishObserving @ :
void 				nsstring_finishObserving( nsstring_t object );

// Signature from Objective-C Runtime: v setObservation:forObservingKeyPath: @ : @ @
void 				nsstring_setObservation( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v observeValueForKeyPath:ofObject:change:context: @ : @ @ @ ^v
void 				nsstring_observeValueForKeyPath( nsstring_t object, nsobject_t arg0, nsobject_t arg1, nsobject_t arg2, void* arg3 );

// Signature from Objective-C Runtime: v removeObserver:forKeyPath:context: @ : @ @ ^v
void 				nsstring_removeObserver( nsstring_t object, nsobject_t arg0, nsobject_t arg1, void* arg2 );

// Signature from Objective-C Runtime: @ className @ :
nsobject_t 			nsstring_className( nsstring_t object );

// Signature from Objective-C Runtime: @ addChainedObservers: @ : @
nsobject_t 			nsstring_addChainedObservers( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ addObserverBlock: @ : @?
nsobject_t 			nsstring_addObserverBlock( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: @ addObservationTransformer: @ : @?
nsobject_t 			nsstring_addObservationTransformer( nsstring_t object, nsobject_t* arg0 );

// Signature from Objective-C Runtime: v setNilValueForKey: @ : @
void 				nsstring_setNilValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableArrayValueForKey: @ : @
nsobject_t 			nsstring_mutableArrayValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableOrderedSetValueForKey: @ : @
nsobject_t 			nsstring_mutableOrderedSetValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ mutableSetValueForKey: @ : @
nsobject_t 			nsstring_mutableSetValueForKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v setValuesForKeysWithDictionary: @ : @
void 				nsstring_setValuesForKeysWithDictionary( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v willChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsstring_willChange( nsstring_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v didChange:valuesAtIndexes:forKey: @ : Q @ @
void 				nsstring_didChange( nsstring_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: ^v observationInfo @ :
void* 				nsstring_observationInfo( nsstring_t object );

// Signature from Objective-C Runtime: @ autoContentAccessingProxy @ :
nsobject_t 			nsstring_autoContentAccessingProxy( nsstring_t object );

// Signature from Objective-C Runtime: @ coerceValue:forKey: @ : @ @
nsobject_t 			nsstring_coerceValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v setScriptingProperties: @ : @
void 				nsstring_setScriptingProperties( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingValueForSpecifier: @ : @
nsobject_t 			nsstring_scriptingValueForSpecifier( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ scriptingProperties @ :
nsobject_t 			nsstring_scriptingProperties( nsstring_t object );

// Signature from Objective-C Runtime: @ coerceValueForScriptingProperties: @ : @
nsobject_t 			nsstring_coerceValueForScriptingProperties( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ valueAtIndex:inPropertyWithKey: @ : Q @
nsobject_t 			nsstring_valueAtIndex( nsstring_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithName:inPropertyWithKey: @ : @ @
nsobject_t 			nsstring_valueWithName( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ valueWithUniqueID:inPropertyWithKey: @ : @ @
nsobject_t 			nsstring_valueWithUniqueID( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v insertValue:atIndex:inPropertyWithKey: @ : @ Q @
void 				nsstring_insertValue( nsstring_t object, nsobject_t arg0, unsigned long long arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v replaceValueAtIndex:inPropertyWithKey:withValue: @ : Q @ @
void 				nsstring_replaceValueAtIndex( nsstring_t object, unsigned long long arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v removeValueAtIndex:fromPropertyWithKey: @ : Q @
void 				nsstring_removeValueAtIndex( nsstring_t object, unsigned long long arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: # classForPortCoder @ :
nsclass_t 			nsstring_classForPortCoder( nsstring_t object );

// Signature from Objective-C Runtime: v performSelector:withObject:afterDelay:inModes: @ : : @ d @
void 				nsstring_performSelector( nsstring_t object, nsselector_t arg0, nsobject_t arg1, double arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: I classCode @ :
unsigned int 		nsstring_classCode( nsstring_t object );

// Signature from Objective-C Runtime: c isEqualTo: @ : @
char 				nsstring_isEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThanOrEqualTo: @ : @
char 				nsstring_isLessThanOrEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isLessThan: @ : @
char 				nsstring_isLessThan( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThanOrEqualTo: @ : @
char 				nsstring_isGreaterThanOrEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isGreaterThan: @ : @
char 				nsstring_isGreaterThan( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNotEqualTo: @ : @
char 				nsstring_isNotEqualTo( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c doesContain: @ : @
char 				nsstring_doesContain( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v performSelectorOnMainThread:withObject:waitUntilDone:modes: @ : : @ c @
void 				nsstring_performSelectorOnMainThread( nsstring_t object, nsselector_t arg0, nsobject_t arg1, char arg2, nsobject_t arg3 );

// Signature from Objective-C Runtime: v performSelectorInBackground:withObject: @ : : @
void 				nsstring_performSelectorInBackground( nsstring_t object, nsselector_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ classDescriptionForDestinationKey: @ : @
nsobject_t 			nsstring_classDescriptionForDestinationKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ entityName @ :
nsobject_t 			nsstring_entityName( nsstring_t object );

// Signature from Objective-C Runtime: c ownsDestinationObjectsForRelationshipKey: @ : @
char 				nsstring_ownsDestinationObjectsForRelationshipKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isToManyKey: @ : @
char 				nsstring_isToManyKey( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: v removeObject:fromPropertyWithKey: @ : @ @
void 				nsstring_removeObject( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v addObject:toPropertyWithKey: @ : @ @
void 				nsstring_addObject( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ validateTakeValue:forKeyPath: @ : @ @
nsobject_t 			nsstring_validateTakeValue( nsstring_t object, nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: @ allPropertyKeys @ :
nsobject_t 			nsstring_allPropertyKeys( nsstring_t object );

// Signature from Objective-C Runtime: v clearProperties @ :
void 				nsstring_clearProperties( nsstring_t object );

// Signature from Objective-C Runtime: v flushKeyBindings @ :
void 				nsstring_flushKeyBindings( nsstring_t object );

// Signature from Objective-C Runtime: v takeStoredValuesFromDictionary: @ : @
void 				nsstring_takeStoredValuesFromDictionary( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c isNSDate__ @ :
char 				nsstring_isNSDate__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSCFConstantString__ @ :
char 				nsstring_isNSCFConstantString__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSNumber__ @ :
char 				nsstring_isNSNumber__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSArray__ @ :
char 				nsstring_isNSArray__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSDictionary__ @ :
char 				nsstring_isNSDictionary__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSSet__ @ :
char 				nsstring_isNSSet__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSData__ @ :
char 				nsstring_isNSData__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSObject__ @ :
char 				nsstring_isNSObject__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSOrderedSet__ @ :
char 				nsstring_isNSOrderedSet__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSTimeZone__ @ :
char 				nsstring_isNSTimeZone__( nsstring_t object );

// Signature from Objective-C Runtime: c isNSValue__ @ :
char 				nsstring_isNSValue__( nsstring_t object );

// Signature from Objective-C Runtime: v doesNotRecognizeSelector: @ : :
void 				nsstring_doesNotRecognizeSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ methodSignatureForSelector: @ : :
nsobject_t 			nsstring_methodSignatureForSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ retain @ :
nsobject_t 			nsstring_retain( nsstring_t object );

// Signature from Objective-C Runtime: Q retainCount @ :
unsigned long long 	nsstring_retainCount( nsstring_t object );

// Signature from Objective-C Runtime: @ autorelease @ :
nsobject_t 			nsstring_autorelease( nsstring_t object );

// Signature from Objective-C Runtime: @ copy @ :
nsobject_t 			nsstring_copy( nsstring_t object );

// Signature from Objective-C Runtime: v finalize @ :
void 				nsstring_finalize( nsstring_t object );

// Signature from Objective-C Runtime: v dealloc @ :
void 				nsstring_dealloc( nsstring_t object );

// Signature from Objective-C Runtime: # class @ :
nsclass_t 			nsstring_class( nsstring_t object );

// Signature from Objective-C Runtime: @ self @ :
nsobject_t 			nsstring_self( nsstring_t object );

// Signature from Objective-C Runtime: c isProxy @ :
char 				nsstring_isProxy( nsstring_t object );

// Signature from Objective-C Runtime: c isKindOfClass: @ : #
char 				nsstring_isKindOfClass( nsstring_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c isMemberOfClass: @ : #
char 				nsstring_isMemberOfClass( nsstring_t object, nsclass_t arg0 );

// Signature from Objective-C Runtime: c conformsToProtocol: @ : @
char 				nsstring_conformsToProtocol( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: c respondsToSelector: @ : :
char 				nsstring_respondsToSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: ^{_NSZone=} zone @ :
_NSZone* 			nsstring_zone( nsstring_t object );

// Signature from Objective-C Runtime: # superclass @ :
nsclass_t 			nsstring_superclass( nsstring_t object );

// Signature from Objective-C Runtime: @ debugDescription @ :
nsobject_t 			nsstring_debugDescription( nsstring_t object );

// Signature from Objective-C Runtime: c retainWeakReference @ :
char 				nsstring_retainWeakReference( nsstring_t object );

// Signature from Objective-C Runtime: c allowsWeakReference @ :
char 				nsstring_allowsWeakReference( nsstring_t object );

// Signature from Objective-C Runtime: c isFault @ :
char 				nsstring_isFault( nsstring_t object );

// Signature from Objective-C Runtime: v forwardInvocation: @ : @
void 				nsstring_forwardInvocation( nsstring_t object, nsobject_t arg0 );

// Signature from Objective-C Runtime: @ forwardingTargetForSelector: @ : :
nsobject_t 			nsstring_forwardingTargetForSelector( nsstring_t object, nsselector_t arg0 );

// Signature from Objective-C Runtime: @ mutableCopy @ :
nsobject_t 			nsstring_mutableCopy( nsstring_t object );

// Signature from Objective-C Runtime: @ readableTypesForPasteboard: @ : @
nsobject_t 			nsstring_readableTypesForPasteboard( nsobject_t arg0 );

// Signature from Objective-C Runtime: q typesetterBehavior @ :
long long 			nsstring_typesetterBehavior( );

// Signature from Objective-C Runtime: v setTypesetterBehavior: @ : q
void 				nsstring_setTypesetterBehavior( long long arg0 );

// Signature from Objective-C Runtime: v setUsesScreenFonts: @ : c
void 				nsstring_setUsesScreenFonts( char arg0 );

// Signature from Objective-C Runtime: v setUsesFontLeading: @ : c
void 				nsstring_setUsesFontLeading( char arg0 );

// Signature from Objective-C Runtime: d defaultLineHeightForFont: @ : @
double 				nsstring_defaultLineHeightForFont( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultAttachmentScaling: @ : Q
void 				nsstring_setDefaultAttachmentScaling( unsigned long long arg0 );

// Signature from Objective-C Runtime: Q defaultAttachmentScaling @ :
unsigned long long 	nsstring_defaultAttachmentScaling( );

// Signature from Objective-C Runtime: c usesScreenFonts @ :
char 				nsstring_usesScreenFonts( );

// Signature from Objective-C Runtime: c usesFontLeading @ :
char 				nsstring_usesFontLeading( );

// Signature from Objective-C Runtime: f hyphenationFactor @ :
float 				nsstring_hyphenationFactor( );

// Signature from Objective-C Runtime: v setHyphenationFactor: @ : f
void 				nsstring_setHyphenationFactor( float arg0 );

// Signature from Objective-C Runtime: v setShowsInvisibleCharacters: @ : c
void 				nsstring_setShowsInvisibleCharacters( char arg0 );

// Signature from Objective-C Runtime: c showsInvisibleCharacters @ :
char 				nsstring_showsInvisibleCharacters( );

// Signature from Objective-C Runtime: v setShowsControlCharacters: @ : c
void 				nsstring_setShowsControlCharacters( char arg0 );

// Signature from Objective-C Runtime: c showsControlCharacters @ :
char 				nsstring_showsControlCharacters( );

// Signature from Objective-C Runtime: d defaultBaselineOffsetForFont: @ : @
double 				nsstring_defaultBaselineOffsetForFont( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ cutStringGUID @ :
nsobject_t 			nsstring_cutStringGUID( );

// Signature from Objective-C Runtime: @ NSStringFromLSInstallPhase: @ : Q
nsobject_t 			nsstring_NSStringFromLSInstallPhase( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ NSStringFromLSInstallState: @ : Q
nsobject_t 			nsstring_NSStringFromLSInstallState( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ NSStringFromLSInstallType: @ : Q
nsobject_t 			nsstring_NSStringFromLSInstallType( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ stringWithUTF8String: @ : r*
nsobject_t 			nsstring_stringWithUTF8String( char* arg0 );

// Signature from Objective-C Runtime: @ stringWithFormat: @ : @
nsobject_t 			nsstring_stringWithFormat( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ string @ :
nsobject_t 			nsstring_string( );

// Signature from Objective-C Runtime: @ allocWithZone: @ : ^{_NSZone=}
nsobject_t 			nsstring_allocWithZone( _NSZone* arg0 );

// Signature from Objective-C Runtime: v initialize @ :
void 				nsstring_initialize( );

// Signature from Objective-C Runtime: c supportsSecureCoding @ :
char 				nsstring_supportsSecureCoding( );

// Signature from Objective-C Runtime: @ stringWithCharacters:length: @ : r^S Q
nsobject_t 			nsstring_stringWithCharacters( unsigned short* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringWithString: @ : @
nsobject_t 			nsstring_stringWithString( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ stringWithCString:encoding: @ : r* Q
nsobject_t 			nsstring_stringWithCString( char* arg0, unsigned long long arg1 );

// Signature from Objective-C Runtime: @ stringWithContentsOfFile:usedEncoding:error: @ : @ ^Q ^@
nsobject_t 			nsstring_stringWithContentsOfFile( nsobject_t arg0, unsigned long long* arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: Q defaultCStringEncoding @ :
unsigned long long 	nsstring_defaultCStringEncoding( );

// Signature from Objective-C Runtime: @ stringWithBytes:length:encoding: @ : r^v Q Q
nsobject_t 			nsstring_stringWithBytes( void* arg0, unsigned long long arg1, unsigned long long arg2 );

// Signature from Objective-C Runtime: @ localizedNameOfStringEncoding: @ : Q
nsobject_t 			nsstring_localizedNameOfStringEncoding( unsigned long long arg0 );

// Signature from Objective-C Runtime: @ localizedStringWithFormat: @ : @
nsobject_t 			nsstring_localizedStringWithFormat( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ pathWithComponents: @ : @
nsobject_t 			nsstring_pathWithComponents( nsobject_t arg0 );

// Signature from Objective-C Runtime: Q stringEncodingForData:encodingOptions:convertedString:usedLossyConversion: @ : @ @ ^@ ^c
unsigned long long 	nsstring_stringEncodingForData( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2, char* arg3 );

// Signature from Objective-C Runtime: @ readableTypeIdentifiersForItemProvider @ :
nsobject_t 			nsstring_readableTypeIdentifiersForItemProvider( );

// Signature from Objective-C Runtime: @ objectWithItemProviderData:typeIdentifier:error: @ : @ @ ^@
nsobject_t 			nsstring_objectWithItemProviderData( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ localizedStringWithValidatedFormat:validFormatSpecifiers:error: @ : @ @ ^@
nsobject_t 			nsstring_localizedStringWithValidatedFormat( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ stringWithValidatedFormat:validFormatSpecifiers:error: @ : @ @ ^@
nsobject_t 			nsstring_stringWithValidatedFormat( nsobject_t arg0, nsobject_t arg1, nsobject_t* arg2 );

// Signature from Objective-C Runtime: @ stringWithContentsOfURL: @ : @
nsobject_t 			nsstring_stringWithContentsOfURL( nsobject_t arg0 );

// Signature from Objective-C Runtime: r^Q availableStringEncodings @ :
unsigned long long* nsstring_availableStringEncodings( );

// Signature from Objective-C Runtime: @ defaultPlaceholderForMarker:withBinding: @ : @ @
nsobject_t 			nsstring_defaultPlaceholderForMarker( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v exposeBinding: @ : @
void 				nsstring_exposeBinding( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setDefaultPlaceholder:forMarker:withBinding: @ : @ @ @
void 				nsstring_setDefaultPlaceholder( nsobject_t arg0, nsobject_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: c CA_automaticallyNotifiesObservers: @ : #
char 				nsstring_CA_automaticallyNotifiesObservers( nsclass_t arg0 );

// Signature from Objective-C Runtime: c CA_encodesPropertyConditionally:type: @ : I i
char 				nsstring_CA_encodesPropertyConditionally( unsigned int arg0, int arg1 );

// Signature from Objective-C Runtime: @ CA_CAMLPropertyForKey: @ : @
nsobject_t 			nsstring_CA_CAMLPropertyForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDecodedFromData: @ : @
nsobject_t 			nsstring_bs_secureDecodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureDataFromObject: @ : @
nsobject_t 			nsstring_bs_secureDataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_secureObjectFromData:ofClass: @ : @ #
nsobject_t 			nsstring_bs_secureObjectFromData( nsobject_t arg0, nsclass_t arg1 );

// Signature from Objective-C Runtime: @ bs_dataFromObject: @ : @
nsobject_t 			nsstring_bs_dataFromObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_objectFromData: @ : @
nsobject_t 			nsstring_bs_objectFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ bs_decodedFromData: @ : @
nsobject_t 			nsstring_bs_decodedFromData( nsobject_t arg0 );

// Signature from Objective-C Runtime: v load @ :
void 				nsstring_load( );

// Signature from Objective-C Runtime: q version @ :
long long 			nsstring_version( );

// Signature from Objective-C Runtime: c instancesImplementSelector: @ : :
char 				nsstring_instancesImplementSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: v poseAsClass: @ : #
void 				nsstring_poseAsClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: v setVersion: @ : q
void 				nsstring_setVersion( long long arg0 );

// Signature from Objective-C Runtime: c automaticallyNotifiesObserversForKey: @ : @
char 				nsstring_automaticallyNotifiesObserversForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: @ classFallbacksForKeyedArchiver @ :
nsobject_t 			nsstring_classFallbacksForKeyedArchiver( );

// Signature from Objective-C Runtime: # classForKeyedUnarchiver @ :
nsclass_t 			nsstring_classForKeyedUnarchiver( );

// Signature from Objective-C Runtime: c useStoredAccessor @ :
char 				nsstring_useStoredAccessor( );

// Signature from Objective-C Runtime: c accessInstanceVariablesDirectly @ :
char 				nsstring_accessInstanceVariablesDirectly( );

// Signature from Objective-C Runtime: ^{objc_method_description=:*} instanceMethodDescriptionForSelector: @ : :
objc_method_description* nsstring_instanceMethodDescriptionForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ keyPathsForValuesAffectingValueForKey: @ : @
nsobject_t 			nsstring_keyPathsForValuesAffectingValueForKey( nsobject_t arg0 );

// Signature from Objective-C Runtime: v setKeys:triggerChangeNotificationsForDependentKey: @ : @ @
void 				nsstring_setKeys( nsobject_t arg0, nsobject_t arg1 );

// Signature from Objective-C Runtime: v cancelPreviousPerformRequestsWithTarget:selector:object: @ : @ : @
void 				nsstring_cancelPreviousPerformRequestsWithTarget( nsobject_t arg0, nsselector_t arg1, nsobject_t arg2 );

// Signature from Objective-C Runtime: v flushAllKeyBindings @ :
void 				nsstring_flushAllKeyBindings( );

// Signature from Objective-C Runtime: v flushClassKeyBindings @ :
void 				nsstring_flushClassKeyBindings( );

// Signature from Objective-C Runtime: @ SFSQLiteClassName @ :
nsobject_t 			nsstring_SFSQLiteClassName( );

// Signature from Objective-C Runtime: @ instanceMethodSignatureForSelector: @ : :
nsobject_t 			nsstring_instanceMethodSignatureForSelector( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ new @ :
nsobject_t 			nsstring_new( );

// Signature from Objective-C Runtime: c resolveInstanceMethod: @ : :
char 				nsstring_resolveInstanceMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: c resolveClassMethod: @ : :
char 				nsstring_resolveClassMethod( nsselector_t arg0 );

// Signature from Objective-C Runtime: @ alloc @ :
nsstring_t 			nsstring_alloc( );

// Signature from Objective-C Runtime: c isSubclassOfClass: @ : #
char 				nsstring_isSubclassOfClass( nsclass_t arg0 );

// Signature from Objective-C Runtime: c isAncestorOfObject: @ : @
char 				nsstring_isAncestorOfObject( nsobject_t arg0 );

// Signature from Objective-C Runtime: c instancesRespondToSelector: @ : :
char 				nsstring_instancesRespondToSelector( nsselector_t arg0 );

#endif